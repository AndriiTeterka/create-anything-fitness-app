{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":36},"end":{"line":4,"column":31,"index":67}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":68},"end":{"line":10,"column":30,"index":167}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"],"imports":1}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":168},"end":{"line":11,"column":58,"index":226}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"],"imports":1}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":227},"end":{"line":12,"column":58,"index":285}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"],"imports":1}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":286},"end":{"line":13,"column":74,"index":360}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"],"imports":1}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":361},"end":{"line":18,"column":33,"index":482}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"],"imports":1}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":483},"end":{"line":24,"column":23,"index":587}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useQueries.ts\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useQueries\", {\n    enumerable: true,\n    get: function () {\n      return useQueries;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _tanstackQueryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProviderJs = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _IsRestoringProviderJs = require(_dependencyMap[3], \"./IsRestoringProvider.js\");\n  var _QueryErrorResetBoundaryJs = require(_dependencyMap[4], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtilsJs = require(_dependencyMap[5], \"./errorBoundaryUtils.js\");\n  var _suspenseJs = require(_dependencyMap[6], \"./suspense.js\");\n  function useQueries({\n    queries,\n    ...options\n  }, queryClient) {\n    const client = (0, _QueryClientProviderJs.useQueryClient)(queryClient);\n    const isRestoring = (0, _IsRestoringProviderJs.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundaryJs.useQueryErrorResetBoundary)();\n    const defaultedQueries = React.useMemo(() => queries.map(opts => {\n      const defaultedOptions = client.defaultQueryOptions(opts);\n      defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n      return defaultedOptions;\n    }), [queries, client, isRestoring]);\n    defaultedQueries.forEach(query => {\n      (0, _suspenseJs.ensureSuspenseTimers)(query);\n      (0, _errorBoundaryUtilsJs.ensurePreventErrorBoundaryRetry)(query, errorResetBoundary);\n    });\n    (0, _errorBoundaryUtilsJs.useClearResetErrorBoundary)(errorResetBoundary);\n    const [observer] = React.useState(() => new _tanstackQueryCore.QueriesObserver(client, defaultedQueries, options));\n    const [optimisticResult, getCombinedResult, trackResult] = observer.getOptimisticResult(defaultedQueries, options.combine);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => shouldSubscribe ? observer.subscribe(_tanstackQueryCore.notifyManager.batchCalls(onStoreChange)) : _tanstackQueryCore.noop, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setQueries(defaultedQueries, options);\n    }, [defaultedQueries, options, observer]);\n    const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => (0, _suspenseJs.shouldSuspend)(defaultedQueries[index], result));\n    const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n      const opts = defaultedQueries[index];\n      if (opts) {\n        const queryObserver = new _tanstackQueryCore.QueryObserver(client, opts);\n        if ((0, _suspenseJs.shouldSuspend)(opts, result)) {\n          return (0, _suspenseJs.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        } else if ((0, _suspenseJs.willFetch)(result, isRestoring)) {\n          void (0, _suspenseJs.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        }\n      }\n      return [];\n    }) : [];\n    if (suspensePromises.length > 0) {\n      throw Promise.all(suspensePromises);\n    }\n    const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n      const query = defaultedQueries[index];\n      return query && (0, _errorBoundaryUtilsJs.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: query.throwOnError,\n        query: client.getQueryCache().get(query.queryHash),\n        suspense: query.suspense\n      });\n    });\n    if (firstSingleResultWhichShouldThrow?.error) {\n      throw firstSingleResultWhichShouldThrow.error;\n    }\n    return getCombinedResult(trackResult());\n  }\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopNamespace"],[10,29,3,0,"e"],[10,30,3,0],[11,4,3,0],[11,8,3,0,"e"],[11,9,3,0],[11,13,3,0,"e"],[11,14,3,0],[11,15,3,0,"__esModule"],[11,25,3,0],[11,34,3,0,"e"],[11,35,3,0],[12,4,3,0],[12,8,3,0,"n"],[12,9,3,0],[13,4,3,0],[13,8,3,0,"e"],[13,9,3,0],[13,11,3,0,"Object"],[13,17,3,0],[13,18,3,0,"keys"],[13,22,3,0],[13,23,3,0,"e"],[13,24,3,0],[13,26,3,0,"forEach"],[13,33,3,0],[13,44,3,0,"k"],[13,45,3,0],[14,6,3,0,"n"],[14,7,3,0],[14,8,3,0,"k"],[14,9,3,0],[14,13,3,0,"e"],[14,14,3,0],[14,15,3,0,"k"],[14,16,3,0],[15,4,3,0],[16,4,3,0,"n"],[16,5,3,0],[16,6,3,0,"default"],[16,13,3,0],[16,16,3,0,"e"],[16,17,3,0],[17,4,3,0],[17,11,3,0,"n"],[17,12,3,0],[18,2,3,0],[19,2,108,0,"Object"],[19,8,108,0],[19,9,108,0,"defineProperty"],[19,23,108,0],[19,24,108,0,"exports"],[19,31,108,0],[20,4,108,0,"enumerable"],[20,14,108,0],[21,4,108,0,"get"],[21,7,108,0],[21,18,108,0,"get"],[21,19,108,0],[22,6,108,0],[22,13,109,2,"useQueries"],[22,23,109,12],[23,4,109,12],[24,2,109,12],[25,2,4,0],[25,6,4,0,"_react"],[25,12,4,0],[25,15,4,0,"require"],[25,22,4,0],[25,23,4,0,"_dependencyMap"],[25,37,4,0],[26,2,4,0],[26,6,4,0,"React"],[26,11,4,0],[26,14,4,0,"_interopNamespace"],[26,31,4,0],[26,32,4,0,"_react"],[26,38,4,0],[27,2,5,0],[27,6,5,0,"_tanstackQueryCore"],[27,24,5,0],[27,27,5,0,"require"],[27,34,5,0],[27,35,5,0,"_dependencyMap"],[27,49,5,0],[28,2,11,0],[28,6,11,0,"_QueryClientProviderJs"],[28,28,11,0],[28,31,11,0,"require"],[28,38,11,0],[28,39,11,0,"_dependencyMap"],[28,53,11,0],[29,2,12,0],[29,6,12,0,"_IsRestoringProviderJs"],[29,28,12,0],[29,31,12,0,"require"],[29,38,12,0],[29,39,12,0,"_dependencyMap"],[29,53,12,0],[30,2,13,0],[30,6,13,0,"_QueryErrorResetBoundaryJs"],[30,32,13,0],[30,35,13,0,"require"],[30,42,13,0],[30,43,13,0,"_dependencyMap"],[30,57,13,0],[31,2,14,0],[31,6,14,0,"_errorBoundaryUtilsJs"],[31,27,14,0],[31,30,14,0,"require"],[31,37,14,0],[31,38,14,0,"_dependencyMap"],[31,52,14,0],[32,2,19,0],[32,6,19,0,"_suspenseJs"],[32,17,19,0],[32,20,19,0,"require"],[32,27,19,0],[32,28,19,0,"_dependencyMap"],[32,42,19,0],[33,2,25,0],[33,11,25,9,"useQueries"],[33,21,25,19,"useQueries"],[33,22,25,20],[34,4,26,2,"queries"],[34,11,26,9],[35,4,27,2],[35,7,27,5,"options"],[36,2,28,0],[36,3,28,1],[36,5,28,3,"queryClient"],[36,16,28,14],[36,18,28,16],[37,4,29,2],[37,10,29,8,"client"],[37,16,29,14],[37,19,29,17],[37,23,29,17,"useQueryClient"],[37,45,29,31],[37,46,29,31,"useQueryClient"],[37,60,29,31],[37,62,29,32,"queryClient"],[37,73,29,43],[37,74,29,44],[38,4,30,2],[38,10,30,8,"isRestoring"],[38,21,30,19],[38,24,30,22],[38,28,30,22,"useIsRestoring"],[38,50,30,36],[38,51,30,36,"useIsRestoring"],[38,65,30,36],[38,67,30,37],[38,68,30,38],[39,4,31,2],[39,10,31,8,"errorResetBoundary"],[39,28,31,26],[39,31,31,29],[39,35,31,29,"useQueryErrorResetBoundary"],[39,61,31,55],[39,62,31,55,"useQueryErrorResetBoundary"],[39,88,31,55],[39,90,31,56],[39,91,31,57],[40,4,32,2],[40,10,32,8,"defaultedQueries"],[40,26,32,24],[40,29,32,27,"React"],[40,34,32,32],[40,35,32,33,"useMemo"],[40,42,32,40],[40,43,33,4],[40,49,33,10,"queries"],[40,56,33,17],[40,57,33,18,"map"],[40,60,33,21],[40,61,33,23,"opts"],[40,65,33,27],[40,69,33,32],[41,6,34,6],[41,12,34,12,"defaultedOptions"],[41,28,34,28],[41,31,34,31,"client"],[41,37,34,37],[41,38,34,38,"defaultQueryOptions"],[41,57,34,57],[41,58,35,8,"opts"],[41,62,36,6],[41,63,36,7],[42,6,37,6,"defaultedOptions"],[42,22,37,22],[42,23,37,23,"_optimisticResults"],[42,41,37,41],[42,44,37,44,"isRestoring"],[42,55,37,55],[42,58,37,58],[42,71,37,71],[42,74,37,74],[42,86,37,86],[43,6,38,6],[43,13,38,13,"defaultedOptions"],[43,29,38,29],[44,4,39,4],[44,5,39,5],[44,6,39,6],[44,8,40,4],[44,9,40,5,"queries"],[44,16,40,12],[44,18,40,14,"client"],[44,24,40,20],[44,26,40,22,"isRestoring"],[44,37,40,33],[44,38,41,2],[44,39,41,3],[45,4,42,2,"defaultedQueries"],[45,20,42,18],[45,21,42,19,"forEach"],[45,28,42,26],[45,29,42,28,"query"],[45,34,42,33],[45,38,42,38],[46,6,43,4],[46,10,43,4,"ensureSuspenseTimers"],[46,21,43,24],[46,22,43,24,"ensureSuspenseTimers"],[46,42,43,24],[46,44,43,25,"query"],[46,49,43,30],[46,50,43,31],[47,6,44,4],[47,10,44,4,"ensurePreventErrorBoundaryRetry"],[47,31,44,35],[47,32,44,35,"ensurePreventErrorBoundaryRetry"],[47,63,44,35],[47,65,44,36,"query"],[47,70,44,41],[47,72,44,43,"errorResetBoundary"],[47,90,44,61],[47,91,44,62],[48,4,45,2],[48,5,45,3],[48,6,45,4],[49,4,46,2],[49,8,46,2,"useClearResetErrorBoundary"],[49,29,46,28],[49,30,46,28,"useClearResetErrorBoundary"],[49,56,46,28],[49,58,46,29,"errorResetBoundary"],[49,76,46,47],[49,77,46,48],[50,4,47,2],[50,10,47,8],[50,11,47,9,"observer"],[50,19,47,17],[50,20,47,18],[50,23,47,21,"React"],[50,28,47,26],[50,29,47,27,"useState"],[50,37,47,35],[50,38,48,4],[50,44,48,10],[50,48,48,14,"QueriesObserver"],[50,66,48,29],[50,67,48,29,"QueriesObserver"],[50,82,48,29],[50,83,49,6,"client"],[50,89,49,12],[50,91,50,6,"defaultedQueries"],[50,107,50,22],[50,109,51,6,"options"],[50,116,52,4],[50,117,53,2],[50,118,53,3],[51,4,54,2],[51,10,54,8],[51,11,54,9,"optimisticResult"],[51,27,54,25],[51,29,54,27,"getCombinedResult"],[51,46,54,44],[51,48,54,46,"trackResult"],[51,59,54,57],[51,60,54,58],[51,63,54,61,"observer"],[51,71,54,69],[51,72,54,70,"getOptimisticResult"],[51,91,54,89],[51,92,55,4,"defaultedQueries"],[51,108,55,20],[51,110,56,4,"options"],[51,117,56,11],[51,118,56,12,"combine"],[51,125,57,2],[51,126,57,3],[52,4,58,2],[52,10,58,8,"shouldSubscribe"],[52,25,58,23],[52,28,58,26],[52,29,58,27,"isRestoring"],[52,40,58,38],[52,44,58,42,"options"],[52,51,58,49],[52,52,58,50,"subscribed"],[52,62,58,60],[52,67,58,65],[52,72,58,70],[53,4,59,2,"React"],[53,9,59,7],[53,10,59,8,"useSyncExternalStore"],[53,30,59,28],[53,31,60,4,"React"],[53,36,60,9],[53,37,60,10,"useCallback"],[53,48,60,21],[53,49,61,7,"onStoreChange"],[53,62,61,20],[53,66,61,25,"shouldSubscribe"],[53,81,61,40],[53,84,61,43,"observer"],[53,92,61,51],[53,93,61,52,"subscribe"],[53,102,61,61],[53,103,61,62,"notifyManager"],[53,121,61,75],[53,122,61,75,"notifyManager"],[53,135,61,75],[53,136,61,76,"batchCalls"],[53,146,61,86],[53,147,61,87,"onStoreChange"],[53,160,61,100],[53,161,61,101],[53,162,61,102],[53,165,61,105,"noop"],[53,183,61,109],[53,184,61,109,"noop"],[53,188,61,109],[53,190,62,6],[53,191,62,7,"observer"],[53,199,62,15],[53,201,62,17,"shouldSubscribe"],[53,216,62,32],[53,217,63,4],[53,218,63,5],[53,220,64,4],[53,226,64,10,"observer"],[53,234,64,18],[53,235,64,19,"getCurrentResult"],[53,251,64,35],[53,252,64,36],[53,253,64,37],[53,255,65,4],[53,261,65,10,"observer"],[53,269,65,18],[53,270,65,19,"getCurrentResult"],[53,286,65,35],[53,287,65,36],[53,288,66,2],[53,289,66,3],[54,4,67,2,"React"],[54,9,67,7],[54,10,67,8,"useEffect"],[54,19,67,17],[54,20,67,18],[54,26,67,24],[55,6,68,4,"observer"],[55,14,68,12],[55,15,68,13,"setQueries"],[55,25,68,23],[55,26,69,6,"defaultedQueries"],[55,42,69,22],[55,44,70,6,"options"],[55,51,71,4],[55,52,71,5],[56,4,72,2],[56,5,72,3],[56,7,72,5],[56,8,72,6,"defaultedQueries"],[56,24,72,22],[56,26,72,24,"options"],[56,33,72,31],[56,35,72,33,"observer"],[56,43,72,41],[56,44,72,42],[56,45,72,43],[57,4,73,2],[57,10,73,8,"shouldAtLeastOneSuspend"],[57,33,73,31],[57,36,73,34,"optimisticResult"],[57,52,73,50],[57,53,73,51,"some"],[57,57,73,55],[57,58,74,4],[57,59,74,5,"result"],[57,65,74,11],[57,67,74,13,"index"],[57,72,74,18],[57,77,74,23],[57,81,74,23,"shouldSuspend"],[57,92,74,36],[57,93,74,36,"shouldSuspend"],[57,106,74,36],[57,108,74,37,"defaultedQueries"],[57,124,74,53],[57,125,74,54,"index"],[57,130,74,59],[57,131,74,60],[57,133,74,62,"result"],[57,139,74,68],[57,140,75,2],[57,141,75,3],[58,4,76,2],[58,10,76,8,"suspensePromises"],[58,26,76,24],[58,29,76,27,"shouldAtLeastOneSuspend"],[58,52,76,50],[58,55,76,53,"optimisticResult"],[58,71,76,69],[58,72,76,70,"flatMap"],[58,79,76,77],[58,80,76,78],[58,81,76,79,"result"],[58,87,76,85],[58,89,76,87,"index"],[58,94,76,92],[58,99,76,97],[59,6,77,4],[59,12,77,10,"opts"],[59,16,77,14],[59,19,77,17,"defaultedQueries"],[59,35,77,33],[59,36,77,34,"index"],[59,41,77,39],[59,42,77,40],[60,6,78,4],[60,10,78,8,"opts"],[60,14,78,12],[60,16,78,14],[61,8,79,6],[61,14,79,12,"queryObserver"],[61,27,79,25],[61,30,79,28],[61,34,79,32,"QueryObserver"],[61,52,79,45],[61,53,79,45,"QueryObserver"],[61,66,79,45],[61,67,79,46,"client"],[61,73,79,52],[61,75,79,54,"opts"],[61,79,79,58],[61,80,79,59],[62,8,80,6],[62,12,80,10],[62,16,80,10,"shouldSuspend"],[62,27,80,23],[62,28,80,23,"shouldSuspend"],[62,41,80,23],[62,43,80,24,"opts"],[62,47,80,28],[62,49,80,30,"result"],[62,55,80,36],[62,56,80,37],[62,58,80,39],[63,10,81,8],[63,17,81,15],[63,21,81,15,"fetchOptimistic"],[63,32,81,30],[63,33,81,30,"fetchOptimistic"],[63,48,81,30],[63,50,81,31,"opts"],[63,54,81,35],[63,56,81,37,"queryObserver"],[63,69,81,50],[63,71,81,52,"errorResetBoundary"],[63,89,81,70],[63,90,81,71],[64,8,82,6],[64,9,82,7],[64,15,82,13],[64,19,82,17],[64,23,82,17,"willFetch"],[64,34,82,26],[64,35,82,26,"willFetch"],[64,44,82,26],[64,46,82,27,"result"],[64,52,82,33],[64,54,82,35,"isRestoring"],[64,65,82,46],[64,66,82,47],[64,68,82,49],[65,10,83,8],[65,15,83,13],[65,19,83,13,"fetchOptimistic"],[65,30,83,28],[65,31,83,28,"fetchOptimistic"],[65,46,83,28],[65,48,83,29,"opts"],[65,52,83,33],[65,54,83,35,"queryObserver"],[65,67,83,48],[65,69,83,50,"errorResetBoundary"],[65,87,83,68],[65,88,83,69],[66,8,84,6],[67,6,85,4],[68,6,86,4],[68,13,86,11],[68,15,86,13],[69,4,87,2],[69,5,87,3],[69,6,87,4],[69,9,87,7],[69,11,87,9],[70,4,88,2],[70,8,88,6,"suspensePromises"],[70,24,88,22],[70,25,88,23,"length"],[70,31,88,29],[70,34,88,32],[70,35,88,33],[70,37,88,35],[71,6,89,4],[71,12,89,10,"Promise"],[71,19,89,17],[71,20,89,18,"all"],[71,23,89,21],[71,24,89,22,"suspensePromises"],[71,40,89,38],[71,41,89,39],[72,4,90,2],[73,4,91,2],[73,10,91,8,"firstSingleResultWhichShouldThrow"],[73,43,91,41],[73,46,91,44,"optimisticResult"],[73,62,91,60],[73,63,91,61,"find"],[73,67,91,65],[73,68,92,4],[73,69,92,5,"result"],[73,75,92,11],[73,77,92,13,"index"],[73,82,92,18],[73,87,92,23],[74,6,93,6],[74,12,93,12,"query"],[74,17,93,17],[74,20,93,20,"defaultedQueries"],[74,36,93,36],[74,37,93,37,"index"],[74,42,93,42],[74,43,93,43],[75,6,94,6],[75,13,94,13,"query"],[75,18,94,18],[75,22,94,22],[75,26,94,22,"getHasError"],[75,47,94,33],[75,48,94,33,"getHasError"],[75,59,94,33],[75,61,94,34],[76,8,95,8,"result"],[76,14,95,14],[77,8,96,8,"errorResetBoundary"],[77,26,96,26],[78,8,97,8,"throwOnError"],[78,20,97,20],[78,22,97,22,"query"],[78,27,97,27],[78,28,97,28,"throwOnError"],[78,40,97,40],[79,8,98,8,"query"],[79,13,98,13],[79,15,98,15,"client"],[79,21,98,21],[79,22,98,22,"getQueryCache"],[79,35,98,35],[79,36,98,36],[79,37,98,37],[79,38,98,38,"get"],[79,41,98,41],[79,42,98,42,"query"],[79,47,98,47],[79,48,98,48,"queryHash"],[79,57,98,57],[79,58,98,58],[80,8,99,8,"suspense"],[80,16,99,16],[80,18,99,18,"query"],[80,23,99,23],[80,24,99,24,"suspense"],[81,6,100,6],[81,7,100,7],[81,8,100,8],[82,4,101,4],[82,5,102,2],[82,6,102,3],[83,4,103,2],[83,8,103,6,"firstSingleResultWhichShouldThrow"],[83,41,103,39],[83,43,103,41,"error"],[83,48,103,46],[83,50,103,48],[84,6,104,4],[84,12,104,10,"firstSingleResultWhichShouldThrow"],[84,45,104,43],[84,46,104,44,"error"],[84,51,104,49],[85,4,105,2],[86,4,106,2],[86,11,106,9,"getCombinedResult"],[86,28,106,26],[86,29,106,27,"trackResult"],[86,40,106,38],[86,41,106,39],[86,42,106,40],[86,43,106,41],[87,2,107,0],[88,0,107,1],[88,3]],"functionMap":{"names":["<global>","useQueries","React.useMemo$argument_0","queries.map$argument_0","defaultedQueries.forEach$argument_0","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","optimisticResult.some$argument_0","optimisticResult.flatMap$argument_0","optimisticResult.find$argument_0"],"mappings":"AAA;ACwB;ICQ,kBC;KDM,CD;2BGG;GHG;IIG;KJI;MKS,uGL;IMG,iCN;IOC,iCP;kBQE;GRK;ISE,iET;8EUE;GVW;IWK;KXS;CDM"},"hasCjsExports":false},"type":"js/module"}]}