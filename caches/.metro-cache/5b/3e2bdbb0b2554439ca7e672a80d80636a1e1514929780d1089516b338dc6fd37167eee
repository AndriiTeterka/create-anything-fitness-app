{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":38},"end":{"line":4,"column":31,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":69,"index":139}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"],"imports":1}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":140},"end":{"line":6,"column":58,"index":198}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"],"imports":1}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":199},"end":{"line":7,"column":74,"index":273}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"],"imports":1}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":274},"end":{"line":12,"column":33,"index":395}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"],"imports":1}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":396},"end":{"line":13,"column":58,"index":454}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"],"imports":1}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":455},"end":{"line":19,"column":23,"index":559}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useBaseQuery.ts\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useBaseQuery\", {\n    enumerable: true,\n    get: function () {\n      return useBaseQuery;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _tanstackQueryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProviderJs = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _QueryErrorResetBoundaryJs = require(_dependencyMap[3], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtilsJs = require(_dependencyMap[4], \"./errorBoundaryUtils.js\");\n  var _IsRestoringProviderJs = require(_dependencyMap[5], \"./IsRestoringProvider.js\");\n  var _suspenseJs = require(_dependencyMap[6], \"./suspense.js\");\n  function useBaseQuery(options, Observer, queryClient) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n      }\n    }\n    const isRestoring = (0, _IsRestoringProviderJs.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundaryJs.useQueryErrorResetBoundary)();\n    const client = (0, _QueryClientProviderJs.useQueryClient)(queryClient);\n    const defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!defaultedOptions.queryFn) {\n        console.error(`[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`);\n      }\n    }\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0, _suspenseJs.ensureSuspenseTimers)(defaultedOptions);\n    (0, _errorBoundaryUtilsJs.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0, _errorBoundaryUtilsJs.useClearResetErrorBoundary)(errorResetBoundary);\n    const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    const [observer] = React.useState(() => new Observer(client, defaultedOptions));\n    const result = observer.getOptimisticResult(defaultedOptions);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => {\n      const unsubscribe = shouldSubscribe ? observer.subscribe(_tanstackQueryCore.notifyManager.batchCalls(onStoreChange)) : _tanstackQueryCore.noop;\n      observer.updateResult();\n      return unsubscribe;\n    }, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setOptions(defaultedOptions);\n    }, [defaultedOptions, observer]);\n    if ((0, _suspenseJs.shouldSuspend)(defaultedOptions, result)) {\n      throw (0, _suspenseJs.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0, _errorBoundaryUtilsJs.getHasError)({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client.getQueryCache().get(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense\n    })) {\n      throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_tanstackQueryCore.isServer && (0, _suspenseJs.willFetch)(result, isRestoring)) {\n      const promise = isNewCacheEntry ?\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      (0, _suspenseJs.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) :\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n      promise?.catch(_tanstackQueryCore.noop).finally(() => {\n        observer.updateResult();\n      });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n  }\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopNamespace"],[10,29,3,0,"e"],[10,30,3,0],[11,4,3,0],[11,8,3,0,"e"],[11,9,3,0],[11,13,3,0,"e"],[11,14,3,0],[11,15,3,0,"__esModule"],[11,25,3,0],[11,34,3,0,"e"],[11,35,3,0],[12,4,3,0],[12,8,3,0,"n"],[12,9,3,0],[13,4,3,0],[13,8,3,0,"e"],[13,9,3,0],[13,11,3,0,"Object"],[13,17,3,0],[13,18,3,0,"keys"],[13,22,3,0],[13,23,3,0,"e"],[13,24,3,0],[13,26,3,0,"forEach"],[13,33,3,0],[13,44,3,0,"k"],[13,45,3,0],[14,6,3,0,"n"],[14,7,3,0],[14,8,3,0,"k"],[14,9,3,0],[14,13,3,0,"e"],[14,14,3,0],[14,15,3,0,"k"],[14,16,3,0],[15,4,3,0],[16,4,3,0,"n"],[16,5,3,0],[16,6,3,0,"default"],[16,13,3,0],[16,16,3,0,"e"],[16,17,3,0],[17,4,3,0],[17,11,3,0,"n"],[17,12,3,0],[18,2,3,0],[19,2,101,0,"Object"],[19,8,101,0],[19,9,101,0,"defineProperty"],[19,23,101,0],[19,24,101,0,"exports"],[19,31,101,0],[20,4,101,0,"enumerable"],[20,14,101,0],[21,4,101,0,"get"],[21,7,101,0],[21,18,101,0,"get"],[21,19,101,0],[22,6,101,0],[22,13,102,2,"useBaseQuery"],[22,25,102,14],[23,4,102,14],[24,2,102,14],[25,2,4,0],[25,6,4,0,"_react"],[25,12,4,0],[25,15,4,0,"require"],[25,22,4,0],[25,23,4,0,"_dependencyMap"],[25,37,4,0],[26,2,4,0],[26,6,4,0,"React"],[26,11,4,0],[26,14,4,0,"_interopNamespace"],[26,31,4,0],[26,32,4,0,"_react"],[26,38,4,0],[27,2,5,0],[27,6,5,0,"_tanstackQueryCore"],[27,24,5,0],[27,27,5,0,"require"],[27,34,5,0],[27,35,5,0,"_dependencyMap"],[27,49,5,0],[28,2,6,0],[28,6,6,0,"_QueryClientProviderJs"],[28,28,6,0],[28,31,6,0,"require"],[28,38,6,0],[28,39,6,0,"_dependencyMap"],[28,53,6,0],[29,2,7,0],[29,6,7,0,"_QueryErrorResetBoundaryJs"],[29,32,7,0],[29,35,7,0,"require"],[29,42,7,0],[29,43,7,0,"_dependencyMap"],[29,57,7,0],[30,2,8,0],[30,6,8,0,"_errorBoundaryUtilsJs"],[30,27,8,0],[30,30,8,0,"require"],[30,37,8,0],[30,38,8,0,"_dependencyMap"],[30,52,8,0],[31,2,13,0],[31,6,13,0,"_IsRestoringProviderJs"],[31,28,13,0],[31,31,13,0,"require"],[31,38,13,0],[31,39,13,0,"_dependencyMap"],[31,53,13,0],[32,2,14,0],[32,6,14,0,"_suspenseJs"],[32,17,14,0],[32,20,14,0,"require"],[32,27,14,0],[32,28,14,0,"_dependencyMap"],[32,42,14,0],[33,2,20,0],[33,11,20,9,"useBaseQuery"],[33,23,20,21,"useBaseQuery"],[33,24,20,22,"options"],[33,31,20,29],[33,33,20,31,"Observer"],[33,41,20,39],[33,43,20,41,"queryClient"],[33,54,20,52],[33,56,20,54],[34,4,21,2],[34,8,21,6,"process"],[34,15,21,13],[34,16,21,14,"env"],[34,19,21,17],[34,20,21,18,"NODE_ENV"],[34,28,21,26],[34,33,21,31],[34,45,21,43],[34,47,21,45],[35,6,22,4],[35,10,22,8],[35,17,22,15,"options"],[35,24,22,22],[35,29,22,27],[35,37,22,35],[35,41,22,39,"Array"],[35,46,22,44],[35,47,22,45,"isArray"],[35,54,22,52],[35,55,22,53,"options"],[35,62,22,60],[35,63,22,61],[35,65,22,63],[36,8,23,6],[36,14,23,12],[36,18,23,16,"Error"],[36,23,23,21],[36,24,24,8],[36,310,25,6],[36,311,25,7],[37,6,26,4],[38,4,27,2],[39,4,28,2],[39,10,28,8,"isRestoring"],[39,21,28,19],[39,24,28,22],[39,28,28,22,"useIsRestoring"],[39,50,28,36],[39,51,28,36,"useIsRestoring"],[39,65,28,36],[39,67,28,37],[39,68,28,38],[40,4,29,2],[40,10,29,8,"errorResetBoundary"],[40,28,29,26],[40,31,29,29],[40,35,29,29,"useQueryErrorResetBoundary"],[40,61,29,55],[40,62,29,55,"useQueryErrorResetBoundary"],[40,88,29,55],[40,90,29,56],[40,91,29,57],[41,4,30,2],[41,10,30,8,"client"],[41,16,30,14],[41,19,30,17],[41,23,30,17,"useQueryClient"],[41,45,30,31],[41,46,30,31,"useQueryClient"],[41,60,30,31],[41,62,30,32,"queryClient"],[41,73,30,43],[41,74,30,44],[42,4,31,2],[42,10,31,8,"defaultedOptions"],[42,26,31,24],[42,29,31,27,"client"],[42,35,31,33],[42,36,31,34,"defaultQueryOptions"],[42,55,31,53],[42,56,31,54,"options"],[42,63,31,61],[42,64,31,62],[43,4,32,2,"client"],[43,10,32,8],[43,11,32,9,"getDefaultOptions"],[43,28,32,26],[43,29,32,27],[43,30,32,28],[43,31,32,29,"queries"],[43,38,32,36],[43,40,32,38,"_experimental_beforeQuery"],[43,65,32,63],[43,68,33,4,"defaultedOptions"],[43,84,34,2],[43,85,34,3],[44,4,35,2],[44,8,35,6,"process"],[44,15,35,13],[44,16,35,14,"env"],[44,19,35,17],[44,20,35,18,"NODE_ENV"],[44,28,35,26],[44,33,35,31],[44,45,35,43],[44,47,35,45],[45,6,36,4],[45,10,36,8],[45,11,36,9,"defaultedOptions"],[45,27,36,25],[45,28,36,26,"queryFn"],[45,35,36,33],[45,37,36,35],[46,8,37,6,"console"],[46,15,37,13],[46,16,37,14,"error"],[46,21,37,19],[46,22,38,8],[46,26,38,12,"defaultedOptions"],[46,42,38,28],[46,43,38,29,"queryHash"],[46,52,38,38],[46,296,39,6],[46,297,39,7],[47,6,40,4],[48,4,41,2],[49,4,42,2,"defaultedOptions"],[49,20,42,18],[49,21,42,19,"_optimisticResults"],[49,39,42,37],[49,42,42,40,"isRestoring"],[49,53,42,51],[49,56,42,54],[49,69,42,67],[49,72,42,70],[49,84,42,82],[50,4,43,2],[50,8,43,2,"ensureSuspenseTimers"],[50,19,43,22],[50,20,43,22,"ensureSuspenseTimers"],[50,40,43,22],[50,42,43,23,"defaultedOptions"],[50,58,43,39],[50,59,43,40],[51,4,44,2],[51,8,44,2,"ensurePreventErrorBoundaryRetry"],[51,29,44,33],[51,30,44,33,"ensurePreventErrorBoundaryRetry"],[51,61,44,33],[51,63,44,34,"defaultedOptions"],[51,79,44,50],[51,81,44,52,"errorResetBoundary"],[51,99,44,70],[51,100,44,71],[52,4,45,2],[52,8,45,2,"useClearResetErrorBoundary"],[52,29,45,28],[52,30,45,28,"useClearResetErrorBoundary"],[52,56,45,28],[52,58,45,29,"errorResetBoundary"],[52,76,45,47],[52,77,45,48],[53,4,46,2],[53,10,46,8,"isNewCacheEntry"],[53,25,46,23],[53,28,46,26],[53,29,46,27,"client"],[53,35,46,33],[53,36,46,34,"getQueryCache"],[53,49,46,47],[53,50,46,48],[53,51,46,49],[53,52,46,50,"get"],[53,55,46,53],[53,56,46,54,"defaultedOptions"],[53,72,46,70],[53,73,46,71,"queryHash"],[53,82,46,80],[53,83,46,81],[54,4,47,2],[54,10,47,8],[54,11,47,9,"observer"],[54,19,47,17],[54,20,47,18],[54,23,47,21,"React"],[54,28,47,26],[54,29,47,27,"useState"],[54,37,47,35],[54,38,48,4],[54,44,48,10],[54,48,48,14,"Observer"],[54,56,48,22],[54,57,49,6,"client"],[54,63,49,12],[54,65,50,6,"defaultedOptions"],[54,81,51,4],[54,82,52,2],[54,83,52,3],[55,4,53,2],[55,10,53,8,"result"],[55,16,53,14],[55,19,53,17,"observer"],[55,27,53,25],[55,28,53,26,"getOptimisticResult"],[55,47,53,45],[55,48,53,46,"defaultedOptions"],[55,64,53,62],[55,65,53,63],[56,4,54,2],[56,10,54,8,"shouldSubscribe"],[56,25,54,23],[56,28,54,26],[56,29,54,27,"isRestoring"],[56,40,54,38],[56,44,54,42,"options"],[56,51,54,49],[56,52,54,50,"subscribed"],[56,62,54,60],[56,67,54,65],[56,72,54,70],[57,4,55,2,"React"],[57,9,55,7],[57,10,55,8,"useSyncExternalStore"],[57,30,55,28],[57,31,56,4,"React"],[57,36,56,9],[57,37,56,10,"useCallback"],[57,48,56,21],[57,49,57,7,"onStoreChange"],[57,62,57,20],[57,66,57,25],[58,6,58,8],[58,12,58,14,"unsubscribe"],[58,23,58,25],[58,26,58,28,"shouldSubscribe"],[58,41,58,43],[58,44,58,46,"observer"],[58,52,58,54],[58,53,58,55,"subscribe"],[58,62,58,64],[58,63,58,65,"notifyManager"],[58,81,58,78],[58,82,58,78,"notifyManager"],[58,95,58,78],[58,96,58,79,"batchCalls"],[58,106,58,89],[58,107,58,90,"onStoreChange"],[58,120,58,103],[58,121,58,104],[58,122,58,105],[58,125,58,108,"noop"],[58,143,58,112],[58,144,58,112,"noop"],[58,148,58,112],[59,6,59,8,"observer"],[59,14,59,16],[59,15,59,17,"updateResult"],[59,27,59,29],[59,28,59,30],[59,29,59,31],[60,6,60,8],[60,13,60,15,"unsubscribe"],[60,24,60,26],[61,4,61,6],[61,5,61,7],[61,7,62,6],[61,8,62,7,"observer"],[61,16,62,15],[61,18,62,17,"shouldSubscribe"],[61,33,62,32],[61,34,63,4],[61,35,63,5],[61,37,64,4],[61,43,64,10,"observer"],[61,51,64,18],[61,52,64,19,"getCurrentResult"],[61,68,64,35],[61,69,64,36],[61,70,64,37],[61,72,65,4],[61,78,65,10,"observer"],[61,86,65,18],[61,87,65,19,"getCurrentResult"],[61,103,65,35],[61,104,65,36],[61,105,66,2],[61,106,66,3],[62,4,67,2,"React"],[62,9,67,7],[62,10,67,8,"useEffect"],[62,19,67,17],[62,20,67,18],[62,26,67,24],[63,6,68,4,"observer"],[63,14,68,12],[63,15,68,13,"setOptions"],[63,25,68,23],[63,26,68,24,"defaultedOptions"],[63,42,68,40],[63,43,68,41],[64,4,69,2],[64,5,69,3],[64,7,69,5],[64,8,69,6,"defaultedOptions"],[64,24,69,22],[64,26,69,24,"observer"],[64,34,69,32],[64,35,69,33],[64,36,69,34],[65,4,70,2],[65,8,70,6],[65,12,70,6,"shouldSuspend"],[65,23,70,19],[65,24,70,19,"shouldSuspend"],[65,37,70,19],[65,39,70,20,"defaultedOptions"],[65,55,70,36],[65,57,70,38,"result"],[65,63,70,44],[65,64,70,45],[65,66,70,47],[66,6,71,4],[66,12,71,10],[66,16,71,10,"fetchOptimistic"],[66,27,71,25],[66,28,71,25,"fetchOptimistic"],[66,43,71,25],[66,45,71,26,"defaultedOptions"],[66,61,71,42],[66,63,71,44,"observer"],[66,71,71,52],[66,73,71,54,"errorResetBoundary"],[66,91,71,72],[66,92,71,73],[67,4,72,2],[68,4,73,2],[68,8,73,6],[68,12,73,6,"getHasError"],[68,33,73,17],[68,34,73,17,"getHasError"],[68,45,73,17],[68,47,73,18],[69,6,74,4,"result"],[69,12,74,10],[70,6,75,4,"errorResetBoundary"],[70,24,75,22],[71,6,76,4,"throwOnError"],[71,18,76,16],[71,20,76,18,"defaultedOptions"],[71,36,76,34],[71,37,76,35,"throwOnError"],[71,49,76,47],[72,6,77,4,"query"],[72,11,77,9],[72,13,77,11,"client"],[72,19,77,17],[72,20,77,18,"getQueryCache"],[72,33,77,31],[72,34,77,32],[72,35,77,33],[72,36,77,34,"get"],[72,39,77,37],[72,40,77,38,"defaultedOptions"],[72,56,77,54],[72,57,77,55,"queryHash"],[72,66,77,64],[72,67,77,65],[73,6,78,4,"suspense"],[73,14,78,12],[73,16,78,14,"defaultedOptions"],[73,32,78,30],[73,33,78,31,"suspense"],[74,4,79,2],[74,5,79,3],[74,6,79,4],[74,8,79,6],[75,6,80,4],[75,12,80,10,"result"],[75,18,80,16],[75,19,80,17,"error"],[75,24,80,22],[76,4,81,2],[77,4,82,2],[78,4,83,2,"client"],[78,10,83,8],[78,11,83,9,"getDefaultOptions"],[78,28,83,26],[78,29,83,27],[78,30,83,28],[78,31,83,29,"queries"],[78,38,83,36],[78,40,83,38,"_experimental_afterQuery"],[78,64,83,62],[78,67,84,4,"defaultedOptions"],[78,83,84,20],[78,85,85,4,"result"],[78,91,86,2],[78,92,86,3],[79,4,87,2],[79,8,87,6,"defaultedOptions"],[79,24,87,22],[79,25,87,23,"experimental_prefetchInRender"],[79,54,87,52],[79,58,87,56],[79,59,87,57,"isServer"],[79,77,87,65],[79,78,87,65,"isServer"],[79,86,87,65],[79,90,87,69],[79,94,87,69,"willFetch"],[79,105,87,78],[79,106,87,78,"willFetch"],[79,115,87,78],[79,117,87,79,"result"],[79,123,87,85],[79,125,87,87,"isRestoring"],[79,136,87,98],[79,137,87,99],[79,139,87,101],[80,6,88,4],[80,12,88,10,"promise"],[80,19,88,17],[80,22,88,20,"isNewCacheEntry"],[80,37,88,35],[81,6,89,6],[82,6,90,6],[82,10,90,6,"fetchOptimistic"],[82,21,90,21],[82,22,90,21,"fetchOptimistic"],[82,37,90,21],[82,39,90,22,"defaultedOptions"],[82,55,90,38],[82,57,90,40,"observer"],[82,65,90,48],[82,67,90,50,"errorResetBoundary"],[82,85,90,68],[82,86,90,69],[83,6,92,6],[84,6,93,6,"client"],[84,12,93,12],[84,13,93,13,"getQueryCache"],[84,26,93,26],[84,27,93,27],[84,28,93,28],[84,29,93,29,"get"],[84,32,93,32],[84,33,93,33,"defaultedOptions"],[84,49,93,49],[84,50,93,50,"queryHash"],[84,59,93,59],[84,60,93,60],[84,62,93,62,"promise"],[84,69,94,5],[85,6,95,4,"promise"],[85,13,95,11],[85,15,95,13,"catch"],[85,20,95,18],[85,21,95,19,"noop"],[85,39,95,23],[85,40,95,23,"noop"],[85,44,95,23],[85,45,95,24],[85,46,95,25,"finally"],[85,53,95,32],[85,54,95,33],[85,60,95,39],[86,8,96,6,"observer"],[86,16,96,14],[86,17,96,15,"updateResult"],[86,29,96,27],[86,30,96,28],[86,31,96,29],[87,6,97,4],[87,7,97,5],[87,8,97,6],[88,4,98,2],[89,4,99,2],[89,11,99,9],[89,12,99,10,"defaultedOptions"],[89,28,99,26],[89,29,99,27,"notifyOnChangeProps"],[89,48,99,46],[89,51,99,49,"observer"],[89,59,99,57],[89,60,99,58,"trackResult"],[89,71,99,69],[89,72,99,70,"result"],[89,78,99,76],[89,79,99,77],[89,82,99,80,"result"],[89,88,99,86],[90,2,100,0],[91,0,100,1],[91,3]],"functionMap":{"names":["<global>","useBaseQuery","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","promise._catch._finally$argument_0"],"mappings":"AAA;ACmB;IC4B;KDG;MEM;OFI;IGG,iCH;IIC,iCJ;kBKE;GLE;iCM0B;KNE;CDG"},"hasCjsExports":false},"type":"js/module"}]}