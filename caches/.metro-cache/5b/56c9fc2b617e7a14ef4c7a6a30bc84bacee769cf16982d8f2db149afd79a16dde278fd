{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"8R25577gwLd3n1hFG9VYnRLV9eE=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":31,"index":78}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../../utils/process.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":163},"end":{"line":4,"column":46,"index":209}}],"key":"abBjZ0FH49dch0dvMzzpyEImoOI=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-force-update.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":210},"end":{"line":5,"column":66,"index":276}}],"key":"JU7w2o6jYofMrydhPZMjK1F6DAw=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-is-mounted.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":277},"end":{"line":6,"column":62,"index":339}}],"key":"SoHVQ670gpNqj/+fgYQ6BQHWQzA=","exportNames":["*"],"imports":1}},{"name":"./PresenceChild.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":340},"end":{"line":7,"column":52,"index":392}}],"key":"8GAaAFux7ifgkmcLtQc14yj5Iiw=","exportNames":["*"],"imports":1}},{"name":"../../context/LayoutGroupContext.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":393},"end":{"line":8,"column":74,"index":467}}],"key":"q+arfiL9FpjMQ+MsHhrM4YHCjH8=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-isomorphic-effect.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":468},"end":{"line":9,"column":82,"index":550}}],"key":"gjd+U/dZU1+5jyfkmLuH/Rt7Mg4=","exportNames":["*"],"imports":1}},{"name":"../../utils/use-unmount-effect.mjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":551},"end":{"line":10,"column":70,"index":621}}],"key":"cFjexTye6wdyCnU70bE+uOU1gv8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"AnimatePresence\", {\n    enumerable: true,\n    get: function () {\n      return AnimatePresence;\n    }\n  });\n  var _tslib = require(_dependencyMap[0], \"tslib\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _utilsProcessMjs = require(_dependencyMap[2], \"../../utils/process.mjs\");\n  var _utilsUseForceUpdateMjs = require(_dependencyMap[3], \"../../utils/use-force-update.mjs\");\n  var _utilsUseIsMountedMjs = require(_dependencyMap[4], \"../../utils/use-is-mounted.mjs\");\n  var _PresenceChildMjs = require(_dependencyMap[5], \"./PresenceChild.mjs\");\n  var _contextLayoutGroupContextMjs = require(_dependencyMap[6], \"../../context/LayoutGroupContext.mjs\");\n  var _utilsUseIsomorphicEffectMjs = require(_dependencyMap[7], \"../../utils/use-isomorphic-effect.mjs\");\n  var _utilsUseUnmountEffectMjs = require(_dependencyMap[8], \"../../utils/use-unmount-effect.mjs\");\n  var getChildKey = function (child) {\n    return child.key || \"\";\n  };\n  function updateChildLookup(children, allChildren) {\n    children.forEach(function (child) {\n      var key = getChildKey(child);\n      allChildren.set(key, child);\n    });\n  }\n  function onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    _react.Children.forEach(children, function (child) {\n      if (/*#__PURE__*/(0, _react.isValidElement)(child)) filtered.push(child);\n    });\n    return filtered;\n  }\n  /**\n   * `AnimatePresence` enables the animation of components that have been removed from the tree.\n   *\n   * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n   *\n   * Any `motion` components that have an `exit` property defined will animate out when removed from\n   * the tree.\n   *\n   * ```jsx\n   * import { motion, AnimatePresence } from 'framer-motion'\n   *\n   * export const Items = ({ items }) => (\n   *   <AnimatePresence>\n   *     {items.map(item => (\n   *       <motion.div\n   *         key={item.id}\n   *         initial={{ opacity: 0 }}\n   *         animate={{ opacity: 1 }}\n   *         exit={{ opacity: 0 }}\n   *       />\n   *     ))}\n   *   </AnimatePresence>\n   * )\n   * ```\n   *\n   * You can sequence exit animations throughout a tree using variants.\n   *\n   * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n   * once all `motion` components have finished animating out. Likewise, any components using\n   * `usePresence` all need to call `safeToRemove`.\n   *\n   * @public\n   */\n  var AnimatePresence = function (_a) {\n    var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter,\n      _c = _a.presenceAffectsLayout,\n      presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = (0, _tslib.__read)((0, _utilsUseForceUpdateMjs.useForceUpdate)(), 1),\n      forceRender = _d[0];\n    var forceRenderLayoutGroup = (0, _react.useContext)(_contextLayoutGroupContextMjs.LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup) forceRender = forceRenderLayoutGroup;\n    var isMounted = (0, _utilsUseIsMountedMjs.useIsMounted)();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = (0, _react.useRef)(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = (0, _react.useRef)(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = (0, _react.useRef)(true);\n    (0, _utilsUseIsomorphicEffectMjs.useIsomorphicLayoutEffect)(function () {\n      isInitialRender.current = false;\n      updateChildLookup(filteredChildren, allChildren);\n      presentChildren.current = childrenToRender;\n    });\n    (0, _utilsUseUnmountEffectMjs.useUnmountEffect)(function () {\n      isInitialRender.current = true;\n      allChildren.clear();\n      exiting.clear();\n    });\n    if (isInitialRender.current) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, childrenToRender.map(function (child) {\n        return /*#__PURE__*/React.createElement(_PresenceChildMjs.PresenceChild, {\n          key: getChildKey(child),\n          isPresent: true,\n          initial: initial ? undefined : false,\n          presenceAffectsLayout: presenceAffectsLayout\n        }, child);\n      }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = (0, _tslib.__spreadArray)([], (0, _tslib.__read)(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n      var key = presentKeys[i];\n      if (targetKeys.indexOf(key) === -1) {\n        exiting.add(key);\n      }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n      childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n      // If this component is actually entering again, early return\n      if (targetKeys.indexOf(key) !== -1) return;\n      var child = allChildren.get(key);\n      if (!child) return;\n      var insertionIndex = presentKeys.indexOf(key);\n      var onExit = function () {\n        allChildren.delete(key);\n        exiting.delete(key);\n        // Remove this child from the present children\n        var removeIndex = presentChildren.current.findIndex(function (presentChild) {\n          return presentChild.key === key;\n        });\n        presentChildren.current.splice(removeIndex, 1);\n        // Defer re-rendering until all exiting children have indeed left\n        if (!exiting.size) {\n          presentChildren.current = filteredChildren;\n          if (isMounted.current === false) return;\n          forceRender();\n          onExitComplete && onExitComplete();\n        }\n      };\n      childrenToRender.splice(insertionIndex, 0, /*#__PURE__*/React.createElement(_PresenceChildMjs.PresenceChild, {\n        key: getChildKey(child),\n        isPresent: false,\n        onExitComplete: onExit,\n        custom: custom,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n      var key = child.key;\n      return exiting.has(key) ? child : (/*#__PURE__*/React.createElement(_PresenceChildMjs.PresenceChild, {\n        key: getChildKey(child),\n        isPresent: true,\n        presenceAffectsLayout: presenceAffectsLayout\n      }, child));\n    });\n    if (_utilsProcessMjs.env !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n      console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n      return /*#__PURE__*/(0, _react.cloneElement)(child);\n    }));\n  };\n});","lineCount":198,"map":[[16,2,157,0,"Object"],[16,8,157,0],[16,9,157,0,"defineProperty"],[16,23,157,0],[16,24,157,0,"exports"],[16,31,157,0],[17,4,157,0,"enumerable"],[17,14,157,0],[18,4,157,0,"get"],[18,7,157,0],[18,18,157,0,"get"],[18,19,157,0],[19,6,157,0],[19,13,157,9,"AnimatePresence"],[19,28,157,24],[20,4,157,24],[21,2,157,24],[22,2,1,0],[22,6,1,0,"_tslib"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_react"],[23,12,2,0],[23,15,2,0,"require"],[23,22,2,0],[23,23,2,0,"_dependencyMap"],[23,37,2,0],[24,2,2,0],[24,6,2,0,"React"],[24,11,2,0],[24,14,2,0,"_interopNamespace"],[24,31,2,0],[24,32,2,0,"_react"],[24,38,2,0],[25,2,4,0],[25,6,4,0,"_utilsProcessMjs"],[25,22,4,0],[25,25,4,0,"require"],[25,32,4,0],[25,33,4,0,"_dependencyMap"],[25,47,4,0],[26,2,5,0],[26,6,5,0,"_utilsUseForceUpdateMjs"],[26,29,5,0],[26,32,5,0,"require"],[26,39,5,0],[26,40,5,0,"_dependencyMap"],[26,54,5,0],[27,2,6,0],[27,6,6,0,"_utilsUseIsMountedMjs"],[27,27,6,0],[27,30,6,0,"require"],[27,37,6,0],[27,38,6,0,"_dependencyMap"],[27,52,6,0],[28,2,7,0],[28,6,7,0,"_PresenceChildMjs"],[28,23,7,0],[28,26,7,0,"require"],[28,33,7,0],[28,34,7,0,"_dependencyMap"],[28,48,7,0],[29,2,8,0],[29,6,8,0,"_contextLayoutGroupContextMjs"],[29,35,8,0],[29,38,8,0,"require"],[29,45,8,0],[29,46,8,0,"_dependencyMap"],[29,60,8,0],[30,2,9,0],[30,6,9,0,"_utilsUseIsomorphicEffectMjs"],[30,34,9,0],[30,37,9,0,"require"],[30,44,9,0],[30,45,9,0,"_dependencyMap"],[30,59,9,0],[31,2,10,0],[31,6,10,0,"_utilsUseUnmountEffectMjs"],[31,31,10,0],[31,34,10,0,"require"],[31,41,10,0],[31,42,10,0,"_dependencyMap"],[31,56,10,0],[32,2,12,0],[32,6,12,4,"getChildKey"],[32,17,12,15],[32,20,12,18],[32,29,12,18,"getChildKey"],[32,30,12,28,"child"],[32,35,12,33],[32,37,12,35],[33,4,12,37],[33,11,12,44,"child"],[33,16,12,49],[33,17,12,50,"key"],[33,20,12,53],[33,24,12,57],[33,26,12,59],[34,2,12,61],[34,3,12,62],[35,2,13,0],[35,11,13,9,"updateChildLookup"],[35,28,13,26,"updateChildLookup"],[35,29,13,27,"children"],[35,37,13,35],[35,39,13,37,"allChildren"],[35,50,13,48],[35,52,13,50],[36,4,14,4,"children"],[36,12,14,12],[36,13,14,13,"forEach"],[36,20,14,20],[36,21,14,21],[36,31,14,31,"child"],[36,36,14,36],[36,38,14,38],[37,6,15,8],[37,10,15,12,"key"],[37,13,15,15],[37,16,15,18,"getChildKey"],[37,27,15,29],[37,28,15,30,"child"],[37,33,15,35],[37,34,15,36],[38,6,16,8,"allChildren"],[38,17,16,19],[38,18,16,20,"set"],[38,21,16,23],[38,22,16,24,"key"],[38,25,16,27],[38,27,16,29,"child"],[38,32,16,34],[38,33,16,35],[39,4,17,4],[39,5,17,5],[39,6,17,6],[40,2,18,0],[41,2,19,0],[41,11,19,9,"onlyElements"],[41,23,19,21,"onlyElements"],[41,24,19,22,"children"],[41,32,19,30],[41,34,19,32],[42,4,20,4],[42,8,20,8,"filtered"],[42,16,20,16],[42,19,20,19],[42,21,20,21],[43,4,21,4],[44,4,22,4,"Children"],[44,10,22,12],[44,11,22,12,"Children"],[44,19,22,12],[44,20,22,13,"forEach"],[44,27,22,20],[44,28,22,21,"children"],[44,36,22,29],[44,38,22,31],[44,48,22,41,"child"],[44,53,22,46],[44,55,22,48],[45,6,23,8],[45,23,23,12],[45,27,23,12,"isValidElement"],[45,33,23,26],[45,34,23,26,"isValidElement"],[45,48,23,26],[45,50,23,27,"child"],[45,55,23,32],[45,56,23,33],[45,58,24,12,"filtered"],[45,66,24,20],[45,67,24,21,"push"],[45,71,24,25],[45,72,24,26,"child"],[45,77,24,31],[45,78,24,32],[46,4,25,4],[46,5,25,5],[46,6,25,6],[47,4,26,4],[47,11,26,11,"filtered"],[47,19,26,19],[48,2,27,0],[49,2,28,0],[50,0,29,0],[51,0,30,0],[52,0,31,0],[53,0,32,0],[54,0,33,0],[55,0,34,0],[56,0,35,0],[57,0,36,0],[58,0,37,0],[59,0,38,0],[60,0,39,0],[61,0,40,0],[62,0,41,0],[63,0,42,0],[64,0,43,0],[65,0,44,0],[66,0,45,0],[67,0,46,0],[68,0,47,0],[69,0,48,0],[70,0,49,0],[71,0,50,0],[72,0,51,0],[73,0,52,0],[74,0,53,0],[75,0,54,0],[76,0,55,0],[77,0,56,0],[78,0,57,0],[79,0,58,0],[80,0,59,0],[81,0,60,0],[82,2,61,0],[82,6,61,4,"AnimatePresence"],[82,21,61,19],[82,24,61,22],[82,33,61,22,"AnimatePresence"],[82,34,61,32,"_a"],[82,36,61,34],[82,38,61,36],[83,4,62,4],[83,8,62,8,"children"],[83,16,62,16],[83,19,62,19,"_a"],[83,21,62,21],[83,22,62,22,"children"],[83,30,62,30],[84,6,62,32,"custom"],[84,12,62,38],[84,15,62,41,"_a"],[84,17,62,43],[84,18,62,44,"custom"],[84,24,62,50],[85,6,62,52,"_b"],[85,8,62,54],[85,11,62,57,"_a"],[85,13,62,59],[85,14,62,60,"initial"],[85,21,62,67],[86,6,62,69,"initial"],[86,13,62,76],[86,16,62,79,"_b"],[86,18,62,81],[86,23,62,86],[86,28,62,91],[86,29,62,92],[86,32,62,95],[86,36,62,99],[86,39,62,102,"_b"],[86,41,62,104],[87,6,62,106,"onExitComplete"],[87,20,62,120],[87,23,62,123,"_a"],[87,25,62,125],[87,26,62,126,"onExitComplete"],[87,40,62,140],[88,6,62,142,"exitBeforeEnter"],[88,21,62,157],[88,24,62,160,"_a"],[88,26,62,162],[88,27,62,163,"exitBeforeEnter"],[88,42,62,178],[89,6,62,180,"_c"],[89,8,62,182],[89,11,62,185,"_a"],[89,13,62,187],[89,14,62,188,"presenceAffectsLayout"],[89,35,62,209],[90,6,62,211,"presenceAffectsLayout"],[90,27,62,232],[90,30,62,235,"_c"],[90,32,62,237],[90,37,62,242],[90,42,62,247],[90,43,62,248],[90,46,62,251],[90,50,62,255],[90,53,62,258,"_c"],[90,55,62,260],[91,4,63,4],[92,4,64,4],[93,4,65,4],[93,8,65,8,"_d"],[93,10,65,10],[93,13,65,13],[93,17,65,13,"__read"],[93,23,65,19],[93,24,65,19,"__read"],[93,30,65,19],[93,32,65,20],[93,36,65,20,"useForceUpdate"],[93,59,65,34],[93,60,65,34,"useForceUpdate"],[93,74,65,34],[93,76,65,35],[93,77,65,36],[93,79,65,38],[93,80,65,39],[93,81,65,40],[94,6,65,42,"forceRender"],[94,17,65,53],[94,20,65,56,"_d"],[94,22,65,58],[94,23,65,59],[94,24,65,60],[94,25,65,61],[95,4,66,4],[95,8,66,8,"forceRenderLayoutGroup"],[95,30,66,30],[95,33,66,33],[95,37,66,33,"useContext"],[95,43,66,43],[95,44,66,43,"useContext"],[95,54,66,43],[95,56,66,44,"LayoutGroupContext"],[95,85,66,62],[95,86,66,62,"LayoutGroupContext"],[95,104,66,62],[95,105,66,63],[95,106,66,64,"forceRender"],[95,117,66,75],[96,4,67,4],[96,8,67,8,"forceRenderLayoutGroup"],[96,30,67,30],[96,32,68,8,"forceRender"],[96,43,68,19],[96,46,68,22,"forceRenderLayoutGroup"],[96,68,68,44],[97,4,69,4],[97,8,69,8,"isMounted"],[97,17,69,17],[97,20,69,20],[97,24,69,20,"useIsMounted"],[97,45,69,32],[97,46,69,32,"useIsMounted"],[97,58,69,32],[97,60,69,33],[97,61,69,34],[98,4,70,4],[99,4,71,4],[99,8,71,8,"filteredChildren"],[99,24,71,24],[99,27,71,27,"onlyElements"],[99,39,71,39],[99,40,71,40,"children"],[99,48,71,48],[99,49,71,49],[100,4,72,4],[100,8,72,8,"childrenToRender"],[100,24,72,24],[100,27,72,27,"filteredChildren"],[100,43,72,43],[101,4,73,4],[101,8,73,8,"exiting"],[101,15,73,15],[101,18,73,18],[101,22,73,22,"Set"],[101,25,73,25],[101,26,73,26],[101,27,73,27],[102,4,74,4],[103,4,75,4],[104,4,76,4],[104,8,76,8,"presentChildren"],[104,23,76,23],[104,26,76,26],[104,30,76,26,"useRef"],[104,36,76,32],[104,37,76,32,"useRef"],[104,43,76,32],[104,45,76,33,"childrenToRender"],[104,61,76,49],[104,62,76,50],[105,4,77,4],[106,4,78,4],[106,8,78,8,"allChildren"],[106,19,78,19],[106,22,78,22],[106,26,78,22,"useRef"],[106,32,78,28],[106,33,78,28,"useRef"],[106,39,78,28],[106,41,78,29],[106,45,78,33,"Map"],[106,48,78,36],[106,49,78,37],[106,50,78,38],[106,51,78,39],[106,52,78,40,"current"],[106,59,78,47],[107,4,79,4],[108,4,80,4],[109,4,81,4],[109,8,81,8,"isInitialRender"],[109,23,81,23],[109,26,81,26],[109,30,81,26,"useRef"],[109,36,81,32],[109,37,81,32,"useRef"],[109,43,81,32],[109,45,81,33],[109,49,81,37],[109,50,81,38],[110,4,82,4],[110,8,82,4,"useIsomorphicLayoutEffect"],[110,36,82,29],[110,37,82,29,"useIsomorphicLayoutEffect"],[110,62,82,29],[110,64,82,30],[110,76,82,42],[111,6,83,8,"isInitialRender"],[111,21,83,23],[111,22,83,24,"current"],[111,29,83,31],[111,32,83,34],[111,37,83,39],[112,6,84,8,"updateChildLookup"],[112,23,84,25],[112,24,84,26,"filteredChildren"],[112,40,84,42],[112,42,84,44,"allChildren"],[112,53,84,55],[112,54,84,56],[113,6,85,8,"presentChildren"],[113,21,85,23],[113,22,85,24,"current"],[113,29,85,31],[113,32,85,34,"childrenToRender"],[113,48,85,50],[114,4,86,4],[114,5,86,5],[114,6,86,6],[115,4,87,4],[115,8,87,4,"useUnmountEffect"],[115,33,87,20],[115,34,87,20,"useUnmountEffect"],[115,50,87,20],[115,52,87,21],[115,64,87,33],[116,6,88,8,"isInitialRender"],[116,21,88,23],[116,22,88,24,"current"],[116,29,88,31],[116,32,88,34],[116,36,88,38],[117,6,89,8,"allChildren"],[117,17,89,19],[117,18,89,20,"clear"],[117,23,89,25],[117,24,89,26],[117,25,89,27],[118,6,90,8,"exiting"],[118,13,90,15],[118,14,90,16,"clear"],[118,19,90,21],[118,20,90,22],[118,21,90,23],[119,4,91,4],[119,5,91,5],[119,6,91,6],[120,4,92,4],[120,8,92,8,"isInitialRender"],[120,23,92,23],[120,24,92,24,"current"],[120,31,92,31],[120,33,92,33],[121,6,93,8],[121,26,93,16,"React"],[121,31,93,21],[121,32,93,22,"createElement"],[121,45,93,35],[121,46,93,36,"React"],[121,51,93,41],[121,52,93,42,"Fragment"],[121,60,93,50],[121,62,93,52],[121,66,93,56],[121,68,93,58,"childrenToRender"],[121,84,93,74],[121,85,93,75,"map"],[121,88,93,78],[121,89,93,79],[121,99,93,89,"child"],[121,104,93,94],[121,106,93,96],[122,8,93,98],[122,28,93,106,"React"],[122,33,93,111],[122,34,93,112,"createElement"],[122,47,93,125],[122,48,93,126,"PresenceChild"],[122,65,93,139],[122,66,93,139,"PresenceChild"],[122,79,93,139],[122,81,93,141],[123,10,93,143,"key"],[123,13,93,146],[123,15,93,148,"getChildKey"],[123,26,93,159],[123,27,93,160,"child"],[123,32,93,165],[123,33,93,166],[124,10,93,168,"isPresent"],[124,19,93,177],[124,21,93,179],[124,25,93,183],[125,10,93,185,"initial"],[125,17,93,192],[125,19,93,194,"initial"],[125,26,93,201],[125,29,93,204,"undefined"],[125,38,93,213],[125,41,93,216],[125,46,93,221],[126,10,93,223,"presenceAffectsLayout"],[126,31,93,244],[126,33,93,246,"presenceAffectsLayout"],[127,8,93,268],[127,9,93,269],[127,11,93,271,"child"],[127,16,93,276],[127,17,93,277],[128,6,93,280],[128,7,93,281],[128,8,93,282],[128,9,93,283],[129,4,94,4],[130,4,95,4],[131,4,96,4,"childrenToRender"],[131,20,96,20],[131,23,96,23],[131,27,96,23,"__spreadArray"],[131,33,96,36],[131,34,96,36,"__spreadArray"],[131,47,96,36],[131,49,96,37],[131,51,96,39],[131,53,96,41],[131,57,96,41,"__read"],[131,63,96,47],[131,64,96,47,"__read"],[131,70,96,47],[131,72,96,48,"childrenToRender"],[131,88,96,64],[131,89,96,65],[131,91,96,67],[131,96,96,72],[131,97,96,73],[132,4,97,4],[133,4,98,4],[134,4,99,4],[134,8,99,8,"presentKeys"],[134,19,99,19],[134,22,99,22,"presentChildren"],[134,37,99,37],[134,38,99,38,"current"],[134,45,99,45],[134,46,99,46,"map"],[134,49,99,49],[134,50,99,50,"getChildKey"],[134,61,99,61],[134,62,99,62],[135,4,100,4],[135,8,100,8,"targetKeys"],[135,18,100,18],[135,21,100,21,"filteredChildren"],[135,37,100,37],[135,38,100,38,"map"],[135,41,100,41],[135,42,100,42,"getChildKey"],[135,53,100,53],[135,54,100,54],[136,4,101,4],[137,4,102,4],[137,8,102,8,"numPresent"],[137,18,102,18],[137,21,102,21,"presentKeys"],[137,32,102,32],[137,33,102,33,"length"],[137,39,102,39],[138,4,103,4],[138,9,103,9],[138,13,103,13,"i"],[138,14,103,14],[138,17,103,17],[138,18,103,18],[138,20,103,20,"i"],[138,21,103,21],[138,24,103,24,"numPresent"],[138,34,103,34],[138,36,103,36,"i"],[138,37,103,37],[138,39,103,39],[138,41,103,41],[139,6,104,8],[139,10,104,12,"key"],[139,13,104,15],[139,16,104,18,"presentKeys"],[139,27,104,29],[139,28,104,30,"i"],[139,29,104,31],[139,30,104,32],[140,6,105,8],[140,10,105,12,"targetKeys"],[140,20,105,22],[140,21,105,23,"indexOf"],[140,28,105,30],[140,29,105,31,"key"],[140,32,105,34],[140,33,105,35],[140,38,105,40],[140,39,105,41],[140,40,105,42],[140,42,105,44],[141,8,106,12,"exiting"],[141,15,106,19],[141,16,106,20,"add"],[141,19,106,23],[141,20,106,24,"key"],[141,23,106,27],[141,24,106,28],[142,6,107,8],[143,4,108,4],[144,4,109,4],[145,4,110,4],[146,4,111,4],[146,8,111,8,"exitBeforeEnter"],[146,23,111,23],[146,27,111,27,"exiting"],[146,34,111,34],[146,35,111,35,"size"],[146,39,111,39],[146,41,111,41],[147,6,112,8,"childrenToRender"],[147,22,112,24],[147,25,112,27],[147,27,112,29],[148,4,113,4],[149,4,114,4],[150,4,115,4],[151,4,116,4,"exiting"],[151,11,116,11],[151,12,116,12,"forEach"],[151,19,116,19],[151,20,116,20],[151,30,116,30,"key"],[151,33,116,33],[151,35,116,35],[152,6,117,8],[153,6,118,8],[153,10,118,12,"targetKeys"],[153,20,118,22],[153,21,118,23,"indexOf"],[153,28,118,30],[153,29,118,31,"key"],[153,32,118,34],[153,33,118,35],[153,38,118,40],[153,39,118,41],[153,40,118,42],[153,42,119,12],[154,6,120,8],[154,10,120,12,"child"],[154,15,120,17],[154,18,120,20,"allChildren"],[154,29,120,31],[154,30,120,32,"get"],[154,33,120,35],[154,34,120,36,"key"],[154,37,120,39],[154,38,120,40],[155,6,121,8],[155,10,121,12],[155,11,121,13,"child"],[155,16,121,18],[155,18,122,12],[156,6,123,8],[156,10,123,12,"insertionIndex"],[156,24,123,26],[156,27,123,29,"presentKeys"],[156,38,123,40],[156,39,123,41,"indexOf"],[156,46,123,48],[156,47,123,49,"key"],[156,50,123,52],[156,51,123,53],[157,6,124,8],[157,10,124,12,"onExit"],[157,16,124,18],[157,19,124,21],[157,28,124,21,"onExit"],[157,29,124,21],[157,31,124,33],[158,8,125,12,"allChildren"],[158,19,125,23],[158,20,125,24,"delete"],[158,26,125,30],[158,27,125,31,"key"],[158,30,125,34],[158,31,125,35],[159,8,126,12,"exiting"],[159,15,126,19],[159,16,126,20,"delete"],[159,22,126,26],[159,23,126,27,"key"],[159,26,126,30],[159,27,126,31],[160,8,127,12],[161,8,128,12],[161,12,128,16,"removeIndex"],[161,23,128,27],[161,26,128,30,"presentChildren"],[161,41,128,45],[161,42,128,46,"current"],[161,49,128,53],[161,50,128,54,"findIndex"],[161,59,128,63],[161,60,128,64],[161,70,128,74,"presentChild"],[161,82,128,86],[161,84,128,88],[162,10,128,90],[162,17,128,97,"presentChild"],[162,29,128,109],[162,30,128,110,"key"],[162,33,128,113],[162,38,128,118,"key"],[162,41,128,121],[163,8,128,123],[163,9,128,124],[163,10,128,125],[164,8,129,12,"presentChildren"],[164,23,129,27],[164,24,129,28,"current"],[164,31,129,35],[164,32,129,36,"splice"],[164,38,129,42],[164,39,129,43,"removeIndex"],[164,50,129,54],[164,52,129,56],[164,53,129,57],[164,54,129,58],[165,8,130,12],[166,8,131,12],[166,12,131,16],[166,13,131,17,"exiting"],[166,20,131,24],[166,21,131,25,"size"],[166,25,131,29],[166,27,131,31],[167,10,132,16,"presentChildren"],[167,25,132,31],[167,26,132,32,"current"],[167,33,132,39],[167,36,132,42,"filteredChildren"],[167,52,132,58],[168,10,133,16],[168,14,133,20,"isMounted"],[168,23,133,29],[168,24,133,30,"current"],[168,31,133,37],[168,36,133,42],[168,41,133,47],[168,43,134,20],[169,10,135,16,"forceRender"],[169,21,135,27],[169,22,135,28],[169,23,135,29],[170,10,136,16,"onExitComplete"],[170,24,136,30],[170,28,136,34,"onExitComplete"],[170,42,136,48],[170,43,136,49],[170,44,136,50],[171,8,137,12],[172,6,138,8],[172,7,138,9],[173,6,139,8,"childrenToRender"],[173,22,139,24],[173,23,139,25,"splice"],[173,29,139,31],[173,30,139,32,"insertionIndex"],[173,44,139,46],[173,46,139,48],[173,47,139,49],[173,62,139,51,"React"],[173,67,139,56],[173,68,139,57,"createElement"],[173,81,139,70],[173,82,139,71,"PresenceChild"],[173,99,139,84],[173,100,139,84,"PresenceChild"],[173,113,139,84],[173,115,139,86],[174,8,139,88,"key"],[174,11,139,91],[174,13,139,93,"getChildKey"],[174,24,139,104],[174,25,139,105,"child"],[174,30,139,110],[174,31,139,111],[175,8,139,113,"isPresent"],[175,17,139,122],[175,19,139,124],[175,24,139,129],[176,8,139,131,"onExitComplete"],[176,22,139,145],[176,24,139,147,"onExit"],[176,30,139,153],[177,8,139,155,"custom"],[177,14,139,161],[177,16,139,163,"custom"],[177,22,139,169],[178,8,139,171,"presenceAffectsLayout"],[178,29,139,192],[178,31,139,194,"presenceAffectsLayout"],[179,6,139,216],[179,7,139,217],[179,9,139,219,"child"],[179,14,139,224],[179,15,139,225],[179,16,139,226],[180,4,140,4],[180,5,140,5],[180,6,140,6],[181,4,141,4],[182,4,142,4],[183,4,143,4,"childrenToRender"],[183,20,143,20],[183,23,143,23,"childrenToRender"],[183,39,143,39],[183,40,143,40,"map"],[183,43,143,43],[183,44,143,44],[183,54,143,54,"child"],[183,59,143,59],[183,61,143,61],[184,6,144,8],[184,10,144,12,"key"],[184,13,144,15],[184,16,144,18,"child"],[184,21,144,23],[184,22,144,24,"key"],[184,25,144,27],[185,6,145,8],[185,13,145,15,"exiting"],[185,20,145,22],[185,21,145,23,"has"],[185,24,145,26],[185,25,145,27,"key"],[185,28,145,30],[185,29,145,31],[185,32,145,35,"child"],[185,37,145,40],[185,54,145,45,"React"],[185,59,145,50],[185,60,145,51,"createElement"],[185,73,145,64],[185,74,145,65,"PresenceChild"],[185,91,145,78],[185,92,145,78,"PresenceChild"],[185,105,145,78],[185,107,145,80],[186,8,145,82,"key"],[186,11,145,85],[186,13,145,87,"getChildKey"],[186,24,145,98],[186,25,145,99,"child"],[186,30,145,104],[186,31,145,105],[187,8,145,107,"isPresent"],[187,17,145,116],[187,19,145,118],[187,23,145,122],[188,8,145,124,"presenceAffectsLayout"],[188,29,145,145],[188,31,145,147,"presenceAffectsLayout"],[189,6,145,169],[189,7,145,170],[189,9,145,172,"child"],[189,14,145,177],[189,15,145,178],[189,16,145,179],[190,4,146,4],[190,5,146,5],[190,6,146,6],[191,4,147,4],[191,8,147,8,"env"],[191,24,147,11],[191,25,147,11,"env"],[191,28,147,11],[191,33,147,16],[191,45,147,28],[191,49,148,8,"exitBeforeEnter"],[191,64,148,23],[191,68,149,8,"childrenToRender"],[191,84,149,24],[191,85,149,25,"length"],[191,91,149,31],[191,94,149,34],[191,95,149,35],[191,97,149,37],[192,6,150,8,"console"],[192,13,150,15],[192,14,150,16,"warn"],[192,18,150,20],[192,19,150,21],[192,176,150,178],[192,177,150,179],[193,4,151,4],[194,4,152,4],[194,24,152,12,"React"],[194,29,152,17],[194,30,152,18,"createElement"],[194,43,152,31],[194,44,152,32,"React"],[194,49,152,37],[194,50,152,38,"Fragment"],[194,58,152,46],[194,60,152,48],[194,64,152,52],[194,66,152,54,"exiting"],[194,73,152,61],[194,74,152,62,"size"],[194,78,152,66],[194,81,153,10,"childrenToRender"],[194,97,153,26],[194,100,154,10,"childrenToRender"],[194,116,154,26],[194,117,154,27,"map"],[194,120,154,30],[194,121,154,31],[194,131,154,41,"child"],[194,136,154,46],[194,138,154,48],[195,6,154,50],[195,26,154,57],[195,30,154,57,"cloneElement"],[195,36,154,69],[195,37,154,69,"cloneElement"],[195,49,154,69],[195,51,154,70,"child"],[195,56,154,75],[195,57,154,76],[196,4,154,78],[196,5,154,79],[196,6,154,80],[196,7,154,81],[197,2,155,0],[197,3,155,1],[198,0,155,2],[198,3]],"functionMap":{"names":["<global>","getChildKey","updateChildLookup","children.forEach$argument_0","onlyElements","Children.forEach$argument_1","AnimatePresence","useIsomorphicLayoutEffect$argument_0","useUnmountEffect$argument_0","childrenToRender.map$argument_0","exiting.forEach$argument_0","onExit","presentChildren.current.findIndex$argument_0"],"mappings":"AAA;kBCW,4CD;AEC;qBCC;KDG;CFC;AIC;+BCG;KDG;CJE;sBMkC;8BCqB;KDI;qBEC;KFI;+EGE,0MH;oBIuB;qBCQ;gECI,4DD;SDU;KJE;4CGG;KHG;+BGQ,gDH;CNC"},"hasCjsExports":false},"type":"js/module"}]}