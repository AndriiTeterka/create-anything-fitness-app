{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":115,"index":130}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":131},"end":{"line":4,"column":31,"index":162}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./LinkingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":204},"end":{"line":6,"column":53,"index":257}}],"key":"r/0Yvi+HouDAqn4vN4m4I6AMfEI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useLinkProps = useLinkProps;\n  var _reactNavigationCore = require(_dependencyMap[0], \"@react-navigation/core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _LinkingContextJs = require(_dependencyMap[3], \"./LinkingContext.js\");\n  const getStateFromParams = params => {\n    if (params?.state) {\n      return params.state;\n    }\n    if (params?.screen) {\n      return {\n        routes: [{\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: params.screen ? getStateFromParams(params.params) : undefined\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Hook to get props for an anchor tag so it can work with in page navigation.\n   *\n   * @param props.screen Name of the screen to navigate to (e.g. `'Feeds'`).\n   * @param props.params Params to pass to the screen to navigate to (e.g. `{ sort: 'hot' }`).\n   * @param props.href Optional absolute path to use for the href (e.g. `/feeds/hot`).\n   * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n   */\n  function useLinkProps({\n    screen,\n    params,\n    href,\n    action\n  }) {\n    const root = React.useContext(_reactNavigationCore.NavigationContainerRefContext);\n    const navigation = React.useContext(_reactNavigationCore.NavigationHelpersContext);\n    const {\n      options\n    } = React.useContext(_LinkingContextJs.LinkingContext);\n    const onPress = e => {\n      let shouldHandle = false;\n      if (Platform.default.OS !== 'web' || !e) {\n        e?.preventDefault?.();\n        shouldHandle = true;\n      } else {\n        // ignore clicks with modifier keys\n        const hasModifierKey = 'metaKey' in e && e.metaKey || 'altKey' in e && e.altKey || 'ctrlKey' in e && e.ctrlKey || 'shiftKey' in e && e.shiftKey;\n\n        // only handle left clicks\n        const isLeftClick = 'button' in e ? e.button == null || e.button === 0 : true;\n\n        // let browser handle \"target=_blank\" etc.\n        const isSelfTarget = e.currentTarget && 'target' in e.currentTarget ? [undefined, null, '', 'self'].includes(e.currentTarget.target) : true;\n        if (!hasModifierKey && isLeftClick && isSelfTarget) {\n          e.preventDefault?.();\n          shouldHandle = true;\n        }\n      }\n      if (shouldHandle) {\n        if (action) {\n          if (navigation) {\n            navigation.dispatch(action);\n          } else if (root) {\n            root.dispatch(action);\n          } else {\n            throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n          }\n        } else {\n          // @ts-expect-error This is already type-checked by the prop types\n          navigation?.navigate(screen, params);\n        }\n      }\n    };\n    const getPathFromStateHelper = options?.getPathFromState ?? _reactNavigationCore.getPathFromState;\n    return {\n      href: href ?? (Platform.default.OS === 'web' && screen != null ? getPathFromStateHelper({\n        routes: [{\n          // @ts-expect-error this is fine ðŸ”¥\n          name: screen,\n          // @ts-expect-error this is fine ðŸ”¥\n          params: params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: getStateFromParams(params)\n        }]\n      }, options?.config) : undefined),\n      role: 'link',\n      onPress\n    };\n  }\n});","lineCount":114,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,1,13],[16,11,1,13,"_interopDefault"],[16,27,1,13,"e"],[16,28,1,13],[17,4,1,13],[17,11,1,13,"e"],[17,12,1,13],[17,16,1,13,"e"],[17,17,1,13],[17,18,1,13,"__esModule"],[17,28,1,13],[17,31,1,13,"e"],[17,32,1,13],[18,6,1,13,"default"],[18,13,1,13],[18,15,1,13,"e"],[19,4,1,13],[20,2,1,13],[21,2,32,0,"exports"],[21,9,32,0],[21,10,32,0,"useLinkProps"],[21,22,32,0],[21,25,32,0,"useLinkProps"],[21,37,32,0],[22,2,3,0],[22,6,3,0,"_reactNavigationCore"],[22,26,3,0],[22,29,3,0,"require"],[22,36,3,0],[22,37,3,0,"_dependencyMap"],[22,51,3,0],[23,2,4,0],[23,6,4,0,"_react"],[23,12,4,0],[23,15,4,0,"require"],[23,22,4,0],[23,23,4,0,"_dependencyMap"],[23,37,4,0],[24,2,4,0],[24,6,4,0,"React"],[24,11,4,0],[24,14,4,0,"_interopNamespace"],[24,31,4,0],[24,32,4,0,"_react"],[24,38,4,0],[25,2,4,31],[25,6,4,31,"_reactNativeWebDistExportsPlatform"],[25,40,4,31],[25,43,4,31,"require"],[25,50,4,31],[25,51,4,31,"_dependencyMap"],[25,65,4,31],[26,2,4,31],[26,6,4,31,"Platform"],[26,14,4,31],[26,17,4,31,"_interopDefault"],[26,32,4,31],[26,33,4,31,"_reactNativeWebDistExportsPlatform"],[26,67,4,31],[27,2,6,0],[27,6,6,0,"_LinkingContextJs"],[27,23,6,0],[27,26,6,0,"require"],[27,33,6,0],[27,34,6,0,"_dependencyMap"],[27,48,6,0],[28,2,7,0],[28,8,7,6,"getStateFromParams"],[28,26,7,24],[28,29,7,27,"params"],[28,35,7,33],[28,39,7,37],[29,4,8,2],[29,8,8,6,"params"],[29,14,8,12],[29,16,8,14,"state"],[29,21,8,19],[29,23,8,21],[30,6,9,4],[30,13,9,11,"params"],[30,19,9,17],[30,20,9,18,"state"],[30,25,9,23],[31,4,10,2],[32,4,11,2],[32,8,11,6,"params"],[32,14,11,12],[32,16,11,14,"screen"],[32,22,11,20],[32,24,11,22],[33,6,12,4],[33,13,12,11],[34,8,13,6,"routes"],[34,14,13,12],[34,16,13,14],[34,17,13,15],[35,10,14,8,"name"],[35,14,14,12],[35,16,14,14,"params"],[35,22,14,20],[35,23,14,21,"screen"],[35,29,14,27],[36,10,15,8,"params"],[36,16,15,14],[36,18,15,16,"params"],[36,24,15,22],[36,25,15,23,"params"],[36,31,15,29],[37,10,16,8],[38,10,17,8,"state"],[38,15,17,13],[38,17,17,15,"params"],[38,23,17,21],[38,24,17,22,"screen"],[38,30,17,28],[38,33,17,31,"getStateFromParams"],[38,51,17,49],[38,52,17,50,"params"],[38,58,17,56],[38,59,17,57,"params"],[38,65,17,63],[38,66,17,64],[38,69,17,67,"undefined"],[39,8,18,6],[39,9,18,7],[40,6,19,4],[40,7,19,5],[41,4,20,2],[42,4,21,2],[42,11,21,9,"undefined"],[42,20,21,18],[43,2,22,0],[43,3,22,1],[45,2,24,0],[46,0,25,0],[47,0,26,0],[48,0,27,0],[49,0,28,0],[50,0,29,0],[51,0,30,0],[52,0,31,0],[53,2,32,7],[53,11,32,16,"useLinkProps"],[53,23,32,28,"useLinkProps"],[53,24,32,29],[54,4,33,2,"screen"],[54,10,33,8],[55,4,34,2,"params"],[55,10,34,8],[56,4,35,2,"href"],[56,8,35,6],[57,4,36,2,"action"],[58,2,37,0],[58,3,37,1],[58,5,37,3],[59,4,38,2],[59,10,38,8,"root"],[59,14,38,12],[59,17,38,15,"React"],[59,22,38,20],[59,23,38,21,"useContext"],[59,33,38,31],[59,34,38,32,"NavigationContainerRefContext"],[59,54,38,61],[59,55,38,61,"NavigationContainerRefContext"],[59,84,38,61],[59,85,38,62],[60,4,39,2],[60,10,39,8,"navigation"],[60,20,39,18],[60,23,39,21,"React"],[60,28,39,26],[60,29,39,27,"useContext"],[60,39,39,37],[60,40,39,38,"NavigationHelpersContext"],[60,60,39,62],[60,61,39,62,"NavigationHelpersContext"],[60,85,39,62],[60,86,39,63],[61,4,40,2],[61,10,40,8],[62,6,41,4,"options"],[63,4,42,2],[63,5,42,3],[63,8,42,6,"React"],[63,13,42,11],[63,14,42,12,"useContext"],[63,24,42,22],[63,25,42,23,"LinkingContext"],[63,42,42,37],[63,43,42,37,"LinkingContext"],[63,57,42,37],[63,58,42,38],[64,4,43,2],[64,10,43,8,"onPress"],[64,17,43,15],[64,20,43,18,"e"],[64,21,43,19],[64,25,43,23],[65,6,44,4],[65,10,44,8,"shouldHandle"],[65,22,44,20],[65,25,44,23],[65,30,44,28],[66,6,45,4],[66,10,45,8,"Platform"],[66,18,45,16],[66,19,45,16,"default"],[66,26,45,16],[66,27,45,17,"OS"],[66,29,45,19],[66,34,45,24],[66,39,45,29],[66,43,45,33],[66,44,45,34,"e"],[66,45,45,35],[66,47,45,37],[67,8,46,6,"e"],[67,9,46,7],[67,11,46,9,"preventDefault"],[67,25,46,23],[67,28,46,26],[67,29,46,27],[68,8,47,6,"shouldHandle"],[68,20,47,18],[68,23,47,21],[68,27,47,25],[69,6,48,4],[69,7,48,5],[69,13,48,11],[70,8,49,6],[71,8,50,6],[71,14,50,12,"hasModifierKey"],[71,28,50,26],[71,31,50,29],[71,40,50,38],[71,44,50,42,"e"],[71,45,50,43],[71,49,50,47,"e"],[71,50,50,48],[71,51,50,49,"metaKey"],[71,58,50,56],[71,62,50,60],[71,70,50,68],[71,74,50,72,"e"],[71,75,50,73],[71,79,50,77,"e"],[71,80,50,78],[71,81,50,79,"altKey"],[71,87,50,85],[71,91,50,89],[71,100,50,98],[71,104,50,102,"e"],[71,105,50,103],[71,109,50,107,"e"],[71,110,50,108],[71,111,50,109,"ctrlKey"],[71,118,50,116],[71,122,50,120],[71,132,50,130],[71,136,50,134,"e"],[71,137,50,135],[71,141,50,139,"e"],[71,142,50,140],[71,143,50,141,"shiftKey"],[71,151,50,149],[73,8,52,6],[74,8,53,6],[74,14,53,12,"isLeftClick"],[74,25,53,23],[74,28,53,26],[74,36,53,34],[74,40,53,38,"e"],[74,41,53,39],[74,44,53,42,"e"],[74,45,53,43],[74,46,53,44,"button"],[74,52,53,50],[74,56,53,54],[74,60,53,58],[74,64,53,62,"e"],[74,65,53,63],[74,66,53,64,"button"],[74,72,53,70],[74,77,53,75],[74,78,53,76],[74,81,53,79],[74,85,53,83],[76,8,55,6],[77,8,56,6],[77,14,56,12,"isSelfTarget"],[77,26,56,24],[77,29,56,27,"e"],[77,30,56,28],[77,31,56,29,"currentTarget"],[77,44,56,42],[77,48,56,46],[77,56,56,54],[77,60,56,58,"e"],[77,61,56,59],[77,62,56,60,"currentTarget"],[77,75,56,73],[77,78,56,76],[77,79,56,77,"undefined"],[77,88,56,86],[77,90,56,88],[77,94,56,92],[77,96,56,94],[77,98,56,96],[77,100,56,98],[77,106,56,104],[77,107,56,105],[77,108,56,106,"includes"],[77,116,56,114],[77,117,56,115,"e"],[77,118,56,116],[77,119,56,117,"currentTarget"],[77,132,56,130],[77,133,56,131,"target"],[77,139,56,137],[77,140,56,138],[77,143,56,141],[77,147,56,145],[78,8,57,6],[78,12,57,10],[78,13,57,11,"hasModifierKey"],[78,27,57,25],[78,31,57,29,"isLeftClick"],[78,42,57,40],[78,46,57,44,"isSelfTarget"],[78,58,57,56],[78,60,57,58],[79,10,58,8,"e"],[79,11,58,9],[79,12,58,10,"preventDefault"],[79,26,58,24],[79,29,58,27],[79,30,58,28],[80,10,59,8,"shouldHandle"],[80,22,59,20],[80,25,59,23],[80,29,59,27],[81,8,60,6],[82,6,61,4],[83,6,62,4],[83,10,62,8,"shouldHandle"],[83,22,62,20],[83,24,62,22],[84,8,63,6],[84,12,63,10,"action"],[84,18,63,16],[84,20,63,18],[85,10,64,8],[85,14,64,12,"navigation"],[85,24,64,22],[85,26,64,24],[86,12,65,10,"navigation"],[86,22,65,20],[86,23,65,21,"dispatch"],[86,31,65,29],[86,32,65,30,"action"],[86,38,65,36],[86,39,65,37],[87,10,66,8],[87,11,66,9],[87,17,66,15],[87,21,66,19,"root"],[87,25,66,23],[87,27,66,25],[88,12,67,10,"root"],[88,16,67,14],[88,17,67,15,"dispatch"],[88,25,67,23],[88,26,67,24,"action"],[88,32,67,30],[88,33,67,31],[89,10,68,8],[89,11,68,9],[89,17,68,15],[90,12,69,10],[90,18,69,16],[90,22,69,20,"Error"],[90,27,69,25],[90,28,69,26],[90,110,69,108],[90,111,69,109],[91,10,70,8],[92,8,71,6],[92,9,71,7],[92,15,71,13],[93,10,72,8],[94,10,73,8,"navigation"],[94,20,73,18],[94,22,73,20,"navigate"],[94,30,73,28],[94,31,73,29,"screen"],[94,37,73,35],[94,39,73,37,"params"],[94,45,73,43],[94,46,73,44],[95,8,74,6],[96,6,75,4],[97,4,76,2],[97,5,76,3],[98,4,77,2],[98,10,77,8,"getPathFromStateHelper"],[98,32,77,30],[98,35,77,33,"options"],[98,42,77,40],[98,44,77,42,"getPathFromState"],[98,60,77,58],[98,64,77,62,"getPathFromState"],[98,84,77,78],[98,85,77,78,"getPathFromState"],[98,101,77,78],[99,4,78,2],[99,11,78,9],[100,6,79,4,"href"],[100,10,79,8],[100,12,79,10,"href"],[100,16,79,14],[100,21,79,19,"Platform"],[100,29,79,27],[100,30,79,27,"default"],[100,37,79,27],[100,38,79,28,"OS"],[100,40,79,30],[100,45,79,35],[100,50,79,40],[100,54,79,44,"screen"],[100,60,79,50],[100,64,79,54],[100,68,79,58],[100,71,79,61,"getPathFromStateHelper"],[100,93,79,83],[100,94,79,84],[101,8,80,6,"routes"],[101,14,80,12],[101,16,80,14],[101,17,80,15],[102,10,81,8],[103,10,82,8,"name"],[103,14,82,12],[103,16,82,14,"screen"],[103,22,82,20],[104,10,83,8],[105,10,84,8,"params"],[105,16,84,14],[105,18,84,16,"params"],[105,24,84,22],[106,10,85,8],[107,10,86,8,"state"],[107,15,86,13],[107,17,86,15,"getStateFromParams"],[107,35,86,33],[107,36,86,34,"params"],[107,42,86,40],[108,8,87,6],[108,9,87,7],[109,6,88,4],[109,7,88,5],[109,9,88,7,"options"],[109,16,88,14],[109,18,88,16,"config"],[109,24,88,22],[109,25,88,23],[109,28,88,26,"undefined"],[109,37,88,35],[109,38,88,36],[110,6,89,4,"role"],[110,10,89,8],[110,12,89,10],[110,18,89,16],[111,6,90,4,"onPress"],[112,4,91,2],[112,5,91,3],[113,2,92,0],[114,0,92,1],[114,3]],"functionMap":{"names":["<global>","getStateFromParams","useLinkProps","onPress"],"mappings":"AAA;2BCM;CDe;OEU;kBCW;GDiC;CFgB"},"hasCjsExports":false},"type":"js/module"}]}