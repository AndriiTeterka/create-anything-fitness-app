{"dependencies":[{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"],"imports":1}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"2ER/r3Agt+5SFwaFR8HXg24Rpu4=","exportNames":["*"],"imports":1}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"rNxrvQaXjK4/vUvPksJpbMJ5u+4=","exportNames":["*"],"imports":1}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"81XLedmR1ugWwxXMAacEe45V43M=","exportNames":["*"],"imports":1}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"],"imports":1}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"E5lU3h554k94C0V5puhR219BWnU=","exportNames":["*"],"imports":1}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"UPnefzBCahUrTRoOWw51hXJ7z+A=","exportNames":["*"],"imports":1}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"AWXnpGNA5UkH1qQUM7hLv2L9KzI=","exportNames":["*"],"imports":1}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"vPXNy6i2DuFIp7nHtHgSOvNmS+U=","exportNames":["*"],"imports":1}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"A/nq9Y/xSFBE06OzxjBtNMD9uQU=","exportNames":["*"],"imports":1}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"YbGte4vf40k4Yjb9DRJvUiBpPUk=","exportNames":["*"],"imports":1}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"yJvqu7zVoaSgx/LOxsKU/6eppkQ=","exportNames":["*"],"imports":1}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"+uLQCjZF6jwjpLbZFDGLy8MVJhc=","exportNames":["*"],"imports":1}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":67,"index":885}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"],"imports":1}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":886},"end":{"line":19,"column":49,"index":935}}],"key":"b66LKsk9Jf3uaP2v5j6OCNwoJlU=","exportNames":["*"],"imports":1}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":936},"end":{"line":20,"column":57,"index":993}}],"key":"McuG59KD5h0BHxEULOXCoLs/e2E=","exportNames":["*"],"imports":1}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":994},"end":{"line":21,"column":53,"index":1047}}],"key":"G1CfJySCSkhPC7rH5rQhaqLaTI0=","exportNames":["*"],"imports":1}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1048},"end":{"line":22,"column":55,"index":1103}}],"key":"f/gs/fnvuaPtRHedK9bCgn238kE=","exportNames":["*"],"imports":1}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1104},"end":{"line":23,"column":93,"index":1197}}],"key":"OygHMRn4bEenld73jIuOxQ+gu9U=","exportNames":["*"],"imports":1}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1198},"end":{"line":24,"column":53,"index":1251}}],"key":"8zqWYqMNSd/k9LIqrmfq1M3LrQU=","exportNames":["*"],"imports":1}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1252},"end":{"line":25,"column":69,"index":1321}}],"key":"uvEgxGYPcoeW+RryvJ51Glj8+aw=","exportNames":["*"],"imports":1}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1322},"end":{"line":26,"column":49,"index":1371}}],"key":"4aMiFZmnD/ZJbzJTaYI7ECYTV2s=","exportNames":["*"],"imports":1}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1372},"end":{"line":27,"column":65,"index":1437}}],"key":"c9g7geoBBHpEed2xjMQ2EV7DCFE=","exportNames":["*"],"imports":1}},{"name":"./useNavigationState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":1438},"end":{"line":28,"column":74,"index":1512}}],"key":"YLzO6pWqOUYOyLCSKhbq1BFmhy0=","exportNames":["*"],"imports":1}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":1513},"end":{"line":29,"column":47,"index":1560}}],"key":"oVCZ93YyJFpAvJlQLQH3T1CuCCk=","exportNames":["*"],"imports":1}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":1561},"end":{"line":30,"column":51,"index":1612}}],"key":"/XMjJjmKD4ejBJNDiIDjXKDJRFk=","exportNames":["*"],"imports":1}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1613},"end":{"line":31,"column":55,"index":1668}}],"key":"5V4g0kBeeaIrUwTen4o2q6oj60U=","exportNames":["*"],"imports":1}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0,"index":1669},"end":{"line":32,"column":65,"index":1734}}],"key":"KZzTt58Kkr/mzgiCdvRDRowLya8=","exportNames":["*"],"imports":1}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":1735},"end":{"line":33,"column":59,"index":1794}}],"key":"FnFZL3NH40gExc7dikLfREzDCec=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1910},"end":{"line":37,"column":48,"index":1958}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _reactNavigationRouters = require(_dependencyMap[0], \"@react-navigation/routers\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactIs = require(_dependencyMap[2], \"react-is\");\n  var _useLatestCallback = require(_dependencyMap[3], \"use-latest-callback\");\n  var useLatestCallback = _interopDefault(_useLatestCallback);\n  var _deepFreezeJs = require(_dependencyMap[4], \"./deepFreeze.js\");\n  var _GroupJs = require(_dependencyMap[5], \"./Group.js\");\n  var _isArrayEqualJs = require(_dependencyMap[6], \"./isArrayEqual.js\");\n  var _isRecordEqualJs = require(_dependencyMap[7], \"./isRecordEqual.js\");\n  var _NavigationHelpersContextJs = require(_dependencyMap[8], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContextJs = require(_dependencyMap[9], \"./NavigationRouteContext.js\");\n  var _NavigationStateContextJs = require(_dependencyMap[10], \"./NavigationStateContext.js\");\n  var _PreventRemoveProviderJs = require(_dependencyMap[11], \"./PreventRemoveProvider.js\");\n  var _ScreenJs = require(_dependencyMap[12], \"./Screen.js\");\n  var _typesJs = require(_dependencyMap[13], \"./types.js\");\n  var _useChildListenersJs = require(_dependencyMap[14], \"./useChildListeners.js\");\n  var _useClientLayoutEffectJs = require(_dependencyMap[15], \"./useClientLayoutEffect.js\");\n  var _useComponentJs = require(_dependencyMap[16], \"./useComponent.js\");\n  var _useCurrentRenderJs = require(_dependencyMap[17], \"./useCurrentRender.js\");\n  var _useDescriptorsJs = require(_dependencyMap[18], \"./useDescriptors.js\");\n  var _useEventEmitterJs = require(_dependencyMap[19], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapterJs = require(_dependencyMap[20], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEventsJs = require(_dependencyMap[21], \"./useFocusEvents.js\");\n  var _useKeyedChildListenersJs = require(_dependencyMap[22], \"./useKeyedChildListeners.js\");\n  var _useLazyValueJs = require(_dependencyMap[23], \"./useLazyValue.js\");\n  var _useNavigationHelpersJs = require(_dependencyMap[24], \"./useNavigationHelpers.js\");\n  var _useNavigationStateJs = require(_dependencyMap[25], \"./useNavigationState.js\");\n  var _useOnActionJs = require(_dependencyMap[26], \"./useOnAction.js\");\n  var _useOnGetStateJs = require(_dependencyMap[27], \"./useOnGetState.js\");\n  var _useOnRouteFocusJs = require(_dependencyMap[28], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigatorJs = require(_dependencyMap[29], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdateJs = require(_dependencyMap[30], \"./useScheduleUpdate.js\");\n  var _reactJsxRuntime = require(_dependencyMap[31], \"react/jsx-runtime\");\n  // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n  _typesJs.PrivateValueStore;\n  const isScreen = child => {\n    return child.type === _ScreenJs.Screen;\n  };\n  const isGroup = child => {\n    return child.type === React.Fragment || child.type === _GroupJs.Group;\n  };\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (isScreen(child)) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (typeof child.props !== 'object' || child.props === null) {\n            throw new Error(`Got an invalid element for screen.`);\n          }\n          if (typeof child.props.name !== 'string' || child.props.name === '') {\n            throw new Error(`Got an invalid name (${JSON.stringify(child.props.name)}) for the screen. It must be a non-empty string.`);\n          }\n          if (child.props.navigationKey !== undefined && (typeof child.props.navigationKey !== 'string' || child.props.navigationKey === '')) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (isGroup(child)) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey,\n          // FIXME\n          // @ts-expect-error: add validation\n          child.type !== _GroupJs.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigatorJs.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContextJs.NavigationRouteContext);\n    const {\n      children,\n      layout,\n      screenOptions,\n      screenLayout,\n      screenListeners,\n      UNSTABLE_router,\n      ...rest\n    } = options;\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValueJs.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return {\n          ...original,\n          ...overrides\n        };\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContextJs.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n          ...initialParams,\n          ...initialParamsFromParams\n        } : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        let stateFromParams;\n        if (route?.params?.state != null) {\n          stateFromParams = route.params.state;\n        } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n          stateFromParams = {\n            index: 0,\n            routes: [{\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path\n            }]\n          };\n        }\n        return [router.getRehydratedState(stateFromParams ?? currentState, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    if (!(0, _isArrayEqualJs.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqualJs.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _reactNavigationRouters.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _reactNavigationRouters.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          merge: route.params.merge,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdateJs.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useClientLayoutEffectJs.useClientLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreezeJs.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitterJs.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEventsJs.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListenersJs.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListenersJs.useKeyedChildListeners)();\n    const onAction = (0, _useOnActionJs.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocusJs.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const navigation = (0, _useNavigationHelpersJs.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapterJs.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetStateJs.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptorsJs.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRenderJs.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponentJs.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_NavigationHelpersContextJs.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_useNavigationStateJs.NavigationStateListenerProvider, {\n          state: state,\n          children: /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_PreventRemoveProviderJs.PreventRemoveProvider, {\n            children: element\n          })\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":527,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,1,13],[16,11,1,13,"_interopDefault"],[16,27,1,13,"e"],[16,28,1,13],[17,4,1,13],[17,11,1,13,"e"],[17,12,1,13],[17,16,1,13,"e"],[17,17,1,13],[17,18,1,13,"__esModule"],[17,28,1,13],[17,31,1,13,"e"],[17,32,1,13],[18,6,1,13,"default"],[18,13,1,13],[18,15,1,13,"e"],[19,4,1,13],[20,2,1,13],[21,2,144,0,"exports"],[21,9,144,0],[21,10,144,0,"useNavigationBuilder"],[21,30,144,0],[21,33,144,0,"useNavigationBuilder"],[21,53,144,0],[22,2,3,0],[22,6,3,0,"_reactNavigationRouters"],[22,29,3,0],[22,32,3,0,"require"],[22,39,3,0],[22,40,3,0,"_dependencyMap"],[22,54,3,0],[23,2,4,0],[23,6,4,0,"_react"],[23,12,4,0],[23,15,4,0,"require"],[23,22,4,0],[23,23,4,0,"_dependencyMap"],[23,37,4,0],[24,2,4,0],[24,6,4,0,"React"],[24,11,4,0],[24,14,4,0,"_interopNamespace"],[24,31,4,0],[24,32,4,0,"_react"],[24,38,4,0],[25,2,5,0],[25,6,5,0,"_reactIs"],[25,14,5,0],[25,17,5,0,"require"],[25,24,5,0],[25,25,5,0,"_dependencyMap"],[25,39,5,0],[26,2,6,0],[26,6,6,0,"_useLatestCallback"],[26,24,6,0],[26,27,6,0,"require"],[26,34,6,0],[26,35,6,0,"_dependencyMap"],[26,49,6,0],[27,2,6,0],[27,6,6,0,"useLatestCallback"],[27,23,6,0],[27,26,6,0,"_interopDefault"],[27,41,6,0],[27,42,6,0,"_useLatestCallback"],[27,60,6,0],[28,2,7,0],[28,6,7,0,"_deepFreezeJs"],[28,19,7,0],[28,22,7,0,"require"],[28,29,7,0],[28,30,7,0,"_dependencyMap"],[28,44,7,0],[29,2,8,0],[29,6,8,0,"_GroupJs"],[29,14,8,0],[29,17,8,0,"require"],[29,24,8,0],[29,25,8,0,"_dependencyMap"],[29,39,8,0],[30,2,9,0],[30,6,9,0,"_isArrayEqualJs"],[30,21,9,0],[30,24,9,0,"require"],[30,31,9,0],[30,32,9,0,"_dependencyMap"],[30,46,9,0],[31,2,10,0],[31,6,10,0,"_isRecordEqualJs"],[31,22,10,0],[31,25,10,0,"require"],[31,32,10,0],[31,33,10,0,"_dependencyMap"],[31,47,10,0],[32,2,11,0],[32,6,11,0,"_NavigationHelpersContextJs"],[32,33,11,0],[32,36,11,0,"require"],[32,43,11,0],[32,44,11,0,"_dependencyMap"],[32,58,11,0],[33,2,12,0],[33,6,12,0,"_NavigationRouteContextJs"],[33,31,12,0],[33,34,12,0,"require"],[33,41,12,0],[33,42,12,0,"_dependencyMap"],[33,56,12,0],[34,2,13,0],[34,6,13,0,"_NavigationStateContextJs"],[34,31,13,0],[34,34,13,0,"require"],[34,41,13,0],[34,42,13,0,"_dependencyMap"],[34,56,13,0],[35,2,14,0],[35,6,14,0,"_PreventRemoveProviderJs"],[35,30,14,0],[35,33,14,0,"require"],[35,40,14,0],[35,41,14,0,"_dependencyMap"],[35,55,14,0],[36,2,15,0],[36,6,15,0,"_ScreenJs"],[36,15,15,0],[36,18,15,0,"require"],[36,25,15,0],[36,26,15,0,"_dependencyMap"],[36,40,15,0],[37,2,16,0],[37,6,16,0,"_typesJs"],[37,14,16,0],[37,17,16,0,"require"],[37,24,16,0],[37,25,16,0,"_dependencyMap"],[37,39,16,0],[38,2,17,0],[38,6,17,0,"_useChildListenersJs"],[38,26,17,0],[38,29,17,0,"require"],[38,36,17,0],[38,37,17,0,"_dependencyMap"],[38,51,17,0],[39,2,18,0],[39,6,18,0,"_useClientLayoutEffectJs"],[39,30,18,0],[39,33,18,0,"require"],[39,40,18,0],[39,41,18,0,"_dependencyMap"],[39,55,18,0],[40,2,19,0],[40,6,19,0,"_useComponentJs"],[40,21,19,0],[40,24,19,0,"require"],[40,31,19,0],[40,32,19,0,"_dependencyMap"],[40,46,19,0],[41,2,20,0],[41,6,20,0,"_useCurrentRenderJs"],[41,25,20,0],[41,28,20,0,"require"],[41,35,20,0],[41,36,20,0,"_dependencyMap"],[41,50,20,0],[42,2,21,0],[42,6,21,0,"_useDescriptorsJs"],[42,23,21,0],[42,26,21,0,"require"],[42,33,21,0],[42,34,21,0,"_dependencyMap"],[42,48,21,0],[43,2,22,0],[43,6,22,0,"_useEventEmitterJs"],[43,24,22,0],[43,27,22,0,"require"],[43,34,22,0],[43,35,22,0,"_dependencyMap"],[43,49,22,0],[44,2,23,0],[44,6,23,0,"_useFocusedListenersChildrenAdapterJs"],[44,43,23,0],[44,46,23,0,"require"],[44,53,23,0],[44,54,23,0,"_dependencyMap"],[44,68,23,0],[45,2,24,0],[45,6,24,0,"_useFocusEventsJs"],[45,23,24,0],[45,26,24,0,"require"],[45,33,24,0],[45,34,24,0,"_dependencyMap"],[45,48,24,0],[46,2,25,0],[46,6,25,0,"_useKeyedChildListenersJs"],[46,31,25,0],[46,34,25,0,"require"],[46,41,25,0],[46,42,25,0,"_dependencyMap"],[46,56,25,0],[47,2,26,0],[47,6,26,0,"_useLazyValueJs"],[47,21,26,0],[47,24,26,0,"require"],[47,31,26,0],[47,32,26,0,"_dependencyMap"],[47,46,26,0],[48,2,27,0],[48,6,27,0,"_useNavigationHelpersJs"],[48,29,27,0],[48,32,27,0,"require"],[48,39,27,0],[48,40,27,0,"_dependencyMap"],[48,54,27,0],[49,2,28,0],[49,6,28,0,"_useNavigationStateJs"],[49,27,28,0],[49,30,28,0,"require"],[49,37,28,0],[49,38,28,0,"_dependencyMap"],[49,52,28,0],[50,2,29,0],[50,6,29,0,"_useOnActionJs"],[50,20,29,0],[50,23,29,0,"require"],[50,30,29,0],[50,31,29,0,"_dependencyMap"],[50,45,29,0],[51,2,30,0],[51,6,30,0,"_useOnGetStateJs"],[51,22,30,0],[51,25,30,0,"require"],[51,32,30,0],[51,33,30,0,"_dependencyMap"],[51,47,30,0],[52,2,31,0],[52,6,31,0,"_useOnRouteFocusJs"],[52,24,31,0],[52,27,31,0,"require"],[52,34,31,0],[52,35,31,0,"_dependencyMap"],[52,49,31,0],[53,2,32,0],[53,6,32,0,"_useRegisterNavigatorJs"],[53,29,32,0],[53,32,32,0,"require"],[53,39,32,0],[53,40,32,0,"_dependencyMap"],[53,54,32,0],[54,2,33,0],[54,6,33,0,"_useScheduleUpdateJs"],[54,26,33,0],[54,29,33,0,"require"],[54,36,33,0],[54,37,33,0,"_dependencyMap"],[54,51,33,0],[55,2,37,0],[55,6,37,0,"_reactJsxRuntime"],[55,22,37,0],[55,25,37,0,"require"],[55,32,37,0],[55,33,37,0,"_dependencyMap"],[55,47,37,0],[56,2,35,0],[57,2,36,0],[59,2,38,0,"PrivateValueStore"],[59,10,38,17],[59,11,38,17,"PrivateValueStore"],[59,28,38,17],[60,2,39,0],[60,8,39,6,"isScreen"],[60,16,39,14],[60,19,39,17,"child"],[60,24,39,22],[60,28,39,26],[61,4,40,2],[61,11,40,9,"child"],[61,16,40,14],[61,17,40,15,"type"],[61,21,40,19],[61,26,40,24,"Screen"],[61,35,40,30],[61,36,40,30,"Screen"],[61,42,40,30],[62,2,41,0],[62,3,41,1],[63,2,42,0],[63,8,42,6,"isGroup"],[63,15,42,13],[63,18,42,16,"child"],[63,23,42,21],[63,27,42,25],[64,4,43,2],[64,11,43,9,"child"],[64,16,43,14],[64,17,43,15,"type"],[64,21,43,19],[64,26,43,24,"React"],[64,31,43,29],[64,32,43,30,"Fragment"],[64,40,43,38],[64,44,43,42,"child"],[64,49,43,47],[64,50,43,48,"type"],[64,54,43,52],[64,59,43,57,"Group"],[64,67,43,62],[64,68,43,62,"Group"],[64,73,43,62],[65,2,44,0],[65,3,44,1],[66,2,45,0],[66,8,45,6,"isValidKey"],[66,18,45,16],[66,21,45,19,"key"],[66,24,45,22],[66,28,45,26,"key"],[66,31,45,29],[66,36,45,34,"undefined"],[66,45,45,43],[66,49,45,47],[66,56,45,54,"key"],[66,59,45,57],[66,64,45,62],[66,72,45,70],[66,76,45,74,"key"],[66,79,45,77],[66,84,45,82],[66,86,45,84],[68,2,47,0],[69,0,48,0],[70,0,49,0],[71,0,50,0],[72,0,51,0],[73,2,52,0],[73,8,52,6,"getRouteConfigsFromChildren"],[73,35,52,33],[73,38,52,36,"getRouteConfigsFromChildren"],[73,39,52,37,"children"],[73,47,52,45],[73,49,52,47,"groupKey"],[73,57,52,55],[73,59,52,57,"groupOptions"],[73,71,52,69],[73,73,52,71,"groupLayout"],[73,84,52,82],[73,89,52,87],[74,4,53,2],[74,10,53,8,"configs"],[74,17,53,15],[74,20,53,18,"React"],[74,25,53,23],[74,26,53,24,"Children"],[74,34,53,32],[74,35,53,33,"toArray"],[74,42,53,40],[74,43,53,41,"children"],[74,51,53,49],[74,52,53,50],[74,53,53,51,"reduce"],[74,59,53,57],[74,60,53,58],[74,61,53,59,"acc"],[74,64,53,62],[74,66,53,64,"child"],[74,71,53,69],[74,76,53,74],[75,6,54,4],[75,10,54,8],[75,23,54,21,"React"],[75,28,54,26],[75,29,54,27,"isValidElement"],[75,43,54,41],[75,44,54,42,"child"],[75,49,54,47],[75,50,54,48],[75,52,54,50],[76,8,55,6],[76,12,55,10,"isScreen"],[76,20,55,18],[76,21,55,19,"child"],[76,26,55,24],[76,27,55,25],[76,29,55,27],[77,10,56,8],[78,10,57,8],[80,10,59,8],[80,14,59,12],[80,21,59,19,"child"],[80,26,59,24],[80,27,59,25,"props"],[80,32,59,30],[80,37,59,35],[80,45,59,43],[80,49,59,47,"child"],[80,54,59,52],[80,55,59,53,"props"],[80,60,59,58],[80,65,59,63],[80,69,59,67],[80,71,59,69],[81,12,60,10],[81,18,60,16],[81,22,60,20,"Error"],[81,27,60,25],[81,28,60,26],[81,64,60,62],[81,65,60,63],[82,10,61,8],[83,10,62,8],[83,14,62,12],[83,21,62,19,"child"],[83,26,62,24],[83,27,62,25,"props"],[83,32,62,30],[83,33,62,31,"name"],[83,37,62,35],[83,42,62,40],[83,50,62,48],[83,54,62,52,"child"],[83,59,62,57],[83,60,62,58,"props"],[83,65,62,63],[83,66,62,64,"name"],[83,70,62,68],[83,75,62,73],[83,77,62,75],[83,79,62,77],[84,12,63,10],[84,18,63,16],[84,22,63,20,"Error"],[84,27,63,25],[84,28,63,26],[84,52,63,50,"JSON"],[84,56,63,54],[84,57,63,55,"stringify"],[84,66,63,64],[84,67,63,65,"child"],[84,72,63,70],[84,73,63,71,"props"],[84,78,63,76],[84,79,63,77,"name"],[84,83,63,81],[84,84,63,82],[84,134,63,132],[84,135,63,133],[85,10,64,8],[86,10,65,8],[86,14,65,12,"child"],[86,19,65,17],[86,20,65,18,"props"],[86,25,65,23],[86,26,65,24,"navigationKey"],[86,39,65,37],[86,44,65,42,"undefined"],[86,53,65,51],[86,58,65,56],[86,65,65,63,"child"],[86,70,65,68],[86,71,65,69,"props"],[86,76,65,74],[86,77,65,75,"navigationKey"],[86,90,65,88],[86,95,65,93],[86,103,65,101],[86,107,65,105,"child"],[86,112,65,110],[86,113,65,111,"props"],[86,118,65,116],[86,119,65,117,"navigationKey"],[86,132,65,130],[86,137,65,135],[86,139,65,137],[86,140,65,138],[86,142,65,140],[87,12,66,10],[87,18,66,16],[87,22,66,20,"Error"],[87,27,66,25],[87,28,66,26],[87,68,66,66,"JSON"],[87,72,66,70],[87,73,66,71,"stringify"],[87,82,66,80],[87,83,66,81,"child"],[87,88,66,86],[87,89,66,87,"props"],[87,94,66,92],[87,95,66,93,"navigationKey"],[87,108,66,106],[87,109,66,107],[87,130,66,128,"child"],[87,135,66,133],[87,136,66,134,"props"],[87,141,66,139],[87,142,66,140,"name"],[87,146,66,144],[87,196,66,194],[87,197,66,195],[88,10,67,8],[89,10,68,8,"acc"],[89,13,68,11],[89,14,68,12,"push"],[89,18,68,16],[89,19,68,17],[90,12,69,10,"keys"],[90,16,69,14],[90,18,69,16],[90,19,69,17,"groupKey"],[90,27,69,25],[90,29,69,27,"child"],[90,34,69,32],[90,35,69,33,"props"],[90,40,69,38],[90,41,69,39,"navigationKey"],[90,54,69,52],[90,55,69,53],[91,12,70,10,"options"],[91,19,70,17],[91,21,70,19,"groupOptions"],[91,33,70,31],[92,12,71,10,"layout"],[92,18,71,16],[92,20,71,18,"groupLayout"],[92,31,71,29],[93,12,72,10,"props"],[93,17,72,15],[93,19,72,17,"child"],[93,24,72,22],[93,25,72,23,"props"],[94,10,73,8],[94,11,73,9],[94,12,73,10],[95,10,74,8],[95,17,74,15,"acc"],[95,20,74,18],[96,8,75,6],[97,8,76,6],[97,12,76,10,"isGroup"],[97,19,76,17],[97,20,76,18,"child"],[97,25,76,23],[97,26,76,24],[97,28,76,26],[98,10,77,8],[98,14,77,12],[98,15,77,13,"isValidKey"],[98,25,77,23],[98,26,77,24,"child"],[98,31,77,29],[98,32,77,30,"props"],[98,37,77,35],[98,38,77,36,"navigationKey"],[98,51,77,49],[98,52,77,50],[98,54,77,52],[99,12,78,10],[99,18,78,16],[99,22,78,20,"Error"],[99,27,78,25],[99,28,78,26],[99,68,78,66,"JSON"],[99,72,78,70],[99,73,78,71,"stringify"],[99,82,78,80],[99,83,78,81,"child"],[99,88,78,86],[99,89,78,87,"props"],[99,94,78,92],[99,95,78,93,"navigationKey"],[99,108,78,106],[99,109,78,107],[99,173,78,171],[99,174,78,172],[100,10,79,8],[102,10,81,8],[103,10,82,8],[104,10,83,8,"acc"],[104,13,83,11],[104,14,83,12,"push"],[104,18,83,16],[104,19,83,17],[104,22,83,20,"getRouteConfigsFromChildren"],[104,49,83,47],[104,50,83,48,"child"],[104,55,83,53],[104,56,83,54,"props"],[104,61,83,59],[104,62,83,60,"children"],[104,70,83,68],[104,72,83,70,"child"],[104,77,83,75],[104,78,83,76,"props"],[104,83,83,81],[104,84,83,82,"navigationKey"],[104,97,83,95],[105,10,84,8],[106,10,85,8],[107,10,86,8,"child"],[107,15,86,13],[107,16,86,14,"type"],[107,20,86,18],[107,25,86,23,"Group"],[107,33,86,28],[107,34,86,28,"Group"],[107,39,86,28],[107,42,86,31,"groupOptions"],[107,54,86,43],[107,57,86,46,"groupOptions"],[107,69,86,58],[107,73,86,62],[107,77,86,66],[107,80,86,69],[107,81,86,70],[107,84,86,73,"groupOptions"],[107,96,86,85],[107,98,86,87,"child"],[107,103,86,92],[107,104,86,93,"props"],[107,109,86,98],[107,110,86,99,"screenOptions"],[107,123,86,112],[107,124,86,113],[107,127,86,116],[107,128,86,117,"child"],[107,133,86,122],[107,134,86,123,"props"],[107,139,86,128],[107,140,86,129,"screenOptions"],[107,153,86,142],[107,154,86,143],[107,156,86,145],[107,163,86,152,"child"],[107,168,86,157],[107,169,86,158,"props"],[107,174,86,163],[107,175,86,164,"screenLayout"],[107,187,86,176],[107,192,86,181],[107,202,86,191],[107,205,86,194,"child"],[107,210,86,199],[107,211,86,200,"props"],[107,216,86,205],[107,217,86,206,"screenLayout"],[107,229,86,218],[107,232,86,221,"groupLayout"],[107,243,86,232],[107,244,86,233],[107,245,86,234],[108,10,87,8],[108,17,87,15,"acc"],[108,20,87,18],[109,8,88,6],[110,6,89,4],[111,6,90,4],[111,12,90,10],[111,16,90,14,"Error"],[111,21,90,19],[111,22,90,20],[111,122,90,120],[111,135,90,133],[111,149,90,133,"React"],[111,154,90,138],[111,155,90,139,"isValidElement"],[111,169,90,153],[111,170,90,154,"child"],[111,175,90,159],[111,176,90,160],[111,179,90,163],[111,183,90,167],[111,190,90,174,"child"],[111,195,90,179],[111,196,90,180,"type"],[111,200,90,184],[111,205,90,189],[111,213,90,197],[111,216,90,200,"child"],[111,221,90,205],[111,222,90,206,"type"],[111,226,90,210],[111,229,90,213,"child"],[111,234,90,218],[111,235,90,219,"type"],[111,239,90,223],[111,241,90,225,"name"],[111,245,90,229],[111,249,90,233,"child"],[111,254,90,238],[111,255,90,239,"props"],[111,260,90,244],[111,264,90,248],[111,268,90,252],[111,272,90,256],[111,279,90,263,"child"],[111,284,90,268],[111,285,90,269,"props"],[111,290,90,274],[111,295,90,279],[111,303,90,287],[111,307,90,291],[111,313,90,297],[111,317,90,301,"child"],[111,322,90,306],[111,323,90,307,"props"],[111,328,90,312],[111,332,90,316,"child"],[111,337,90,321],[111,338,90,322,"props"],[111,343,90,327],[111,345,90,329,"name"],[111,349,90,333],[111,352,90,336],[111,372,90,356,"child"],[111,377,90,361],[111,378,90,362,"props"],[111,383,90,367],[111,384,90,368,"name"],[111,388,90,372],[111,391,90,375],[111,394,90,378],[111,396,90,380],[111,398,90,382],[111,401,90,385],[111,408,90,392,"child"],[111,413,90,397],[111,418,90,402],[111,426,90,410],[111,429,90,413,"JSON"],[111,433,90,417],[111,434,90,418,"stringify"],[111,443,90,427],[111,444,90,428,"child"],[111,449,90,433],[111,450,90,434],[111,453,90,437],[111,457,90,441,"String"],[111,463,90,447],[111,464,90,448,"child"],[111,469,90,453],[111,470,90,454],[111,473,90,457],[111,565,90,549],[111,566,90,550],[112,4,91,2],[112,5,91,3],[112,7,91,5],[112,9,91,7],[112,10,91,8],[113,4,92,2],[113,8,92,6,"process"],[113,15,92,13],[113,16,92,14,"env"],[113,19,92,17],[113,20,92,18,"NODE_ENV"],[113,28,92,26],[113,33,92,31],[113,45,92,43],[113,47,92,45],[114,6,93,4,"configs"],[114,13,93,11],[114,14,93,12,"forEach"],[114,21,93,19],[114,22,93,20,"config"],[114,28,93,26],[114,32,93,30],[115,8,94,6],[115,14,94,12],[116,10,95,8,"name"],[116,14,95,12],[117,10,96,8,"children"],[117,18,96,16],[118,10,97,8,"component"],[118,19,97,17],[119,10,98,8,"getComponent"],[120,8,99,6],[120,9,99,7],[120,12,99,10,"config"],[120,18,99,16],[120,19,99,17,"props"],[120,24,99,22],[121,8,100,6],[121,12,100,10,"children"],[121,20,100,18],[121,24,100,22],[121,28,100,26],[121,32,100,30,"component"],[121,41,100,39],[121,46,100,44,"undefined"],[121,55,100,53],[121,59,100,57,"getComponent"],[121,71,100,69],[121,76,100,74,"undefined"],[121,85,100,83],[121,87,100,85],[122,10,101,8],[122,14,101,12,"children"],[122,22,101,20],[122,26,101,24],[122,30,101,28],[122,34,101,32,"component"],[122,43,101,41],[122,48,101,46,"undefined"],[122,57,101,55],[122,59,101,57],[123,12,102,10],[123,18,102,16],[123,22,102,20,"Error"],[123,27,102,25],[123,28,102,26],[123,89,102,87,"name"],[123,93,102,91],[123,129,102,127],[123,130,102,128],[124,10,103,8],[125,10,104,8],[125,14,104,12,"children"],[125,22,104,20],[125,26,104,24],[125,30,104,28],[125,34,104,32,"getComponent"],[125,46,104,44],[125,51,104,49,"undefined"],[125,60,104,58],[125,62,104,60],[126,12,105,10],[126,18,105,16],[126,22,105,20,"Error"],[126,27,105,25],[126,28,105,26],[126,92,105,90,"name"],[126,96,105,94],[126,132,105,130],[126,133,105,131],[127,10,106,8],[128,10,107,8],[128,14,107,12,"component"],[128,23,107,21],[128,28,107,26,"undefined"],[128,37,107,35],[128,41,107,39,"getComponent"],[128,53,107,51],[128,58,107,56,"undefined"],[128,67,107,65],[128,69,107,67],[129,12,108,10],[129,18,108,16],[129,22,108,20,"Error"],[129,27,108,25],[129,28,108,26],[129,93,108,91,"name"],[129,97,108,95],[129,133,108,131],[129,134,108,132],[130,10,109,8],[131,10,110,8],[131,14,110,12,"children"],[131,22,110,20],[131,26,110,24],[131,30,110,28],[131,34,110,32],[131,41,110,39,"children"],[131,49,110,47],[131,54,110,52],[131,64,110,62],[131,66,110,64],[132,12,111,10],[132,18,111,16],[132,22,111,20,"Error"],[132,27,111,25],[132,28,111,26],[132,88,111,86,"name"],[132,92,111,90],[132,145,111,143],[132,146,111,144],[133,10,112,8],[134,10,113,8],[134,14,113,12,"component"],[134,23,113,21],[134,28,113,26,"undefined"],[134,37,113,35],[134,41,113,39],[134,42,113,40],[134,46,113,40,"isValidElementType"],[134,54,113,58],[134,55,113,58,"isValidElementType"],[134,73,113,58],[134,75,113,59,"component"],[134,84,113,68],[134,85,113,69],[134,87,113,71],[135,12,114,10],[135,18,114,16],[135,22,114,20,"Error"],[135,27,114,25],[135,28,114,26],[135,89,114,87,"name"],[135,93,114,91],[135,133,114,131],[135,134,114,132],[136,10,115,8],[137,10,116,8],[137,14,116,12,"getComponent"],[137,26,116,24],[137,31,116,29,"undefined"],[137,40,116,38],[137,44,116,42],[137,51,116,49,"getComponent"],[137,63,116,61],[137,68,116,66],[137,78,116,76],[137,80,116,78],[138,12,117,10],[138,18,117,16],[138,22,117,20,"Error"],[138,27,117,25],[138,28,117,26],[138,92,117,90,"name"],[138,96,117,94],[138,151,117,149],[138,152,117,150],[139,10,118,8],[140,10,119,8],[140,14,119,12],[140,21,119,19,"component"],[140,30,119,28],[140,35,119,33],[140,45,119,43],[140,47,119,45],[141,12,120,10],[141,16,120,14,"component"],[141,25,120,23],[141,26,120,24,"name"],[141,30,120,28],[141,35,120,33],[141,46,120,44],[141,48,120,46],[142,14,121,12],[143,14,122,12],[144,14,123,12],[145,14,124,12,"console"],[145,21,124,19],[145,22,124,20,"warn"],[145,26,124,24],[145,27,124,25],[145,112,124,110,"name"],[145,116,124,114],[145,395,124,393],[145,396,124,394],[146,12,125,10],[146,13,125,11],[146,19,125,17],[146,23,125,21],[146,31,125,29],[146,32,125,30,"test"],[146,36,125,34],[146,37,125,35,"component"],[146,46,125,44],[146,47,125,45,"name"],[146,51,125,49],[146,52,125,50],[146,54,125,52],[147,14,126,12,"console"],[147,21,126,19],[147,22,126,20,"warn"],[147,26,126,24],[147,27,126,25],[147,61,126,59,"component"],[147,70,126,68],[147,71,126,69,"name"],[147,75,126,73],[147,96,126,94,"name"],[147,100,126,98],[147,301,126,299],[147,302,126,300],[148,12,127,10],[149,10,128,8],[150,8,129,6],[150,9,129,7],[150,15,129,13],[151,10,130,8],[151,16,130,14],[151,20,130,18,"Error"],[151,25,130,23],[151,26,130,24],[151,108,130,106,"name"],[151,112,130,110],[151,293,130,291],[151,294,130,292],[152,8,131,6],[153,6,132,4],[153,7,132,5],[153,8,132,6],[154,4,133,2],[155,4,134,2],[155,11,134,9,"configs"],[155,18,134,16],[156,2,135,0],[156,3,135,1],[158,2,137,0],[159,0,138,0],[160,0,139,0],[161,0,140,0],[162,0,141,0],[163,0,142,0],[164,0,143,0],[165,2,144,7],[165,11,144,16,"useNavigationBuilder"],[165,31,144,36,"useNavigationBuilder"],[165,32,144,37,"createRouter"],[165,44,144,49],[165,46,144,51,"options"],[165,53,144,58],[165,55,144,60],[166,4,145,2],[166,10,145,8,"navigatorKey"],[166,22,145,20],[166,25,145,23],[166,29,145,23,"useRegisterNavigator"],[166,52,145,43],[166,53,145,43,"useRegisterNavigator"],[166,73,145,43],[166,75,145,44],[166,76,145,45],[167,4,146,2],[167,10,146,8,"route"],[167,15,146,13],[167,18,146,16,"React"],[167,23,146,21],[167,24,146,22,"useContext"],[167,34,146,32],[167,35,146,33,"NavigationRouteContext"],[167,60,146,55],[167,61,146,55,"NavigationRouteContext"],[167,83,146,55],[167,84,146,56],[168,4,147,2],[168,10,147,8],[169,6,148,4,"children"],[169,14,148,12],[170,6,149,4,"layout"],[170,12,149,10],[171,6,150,4,"screenOptions"],[171,19,150,17],[172,6,151,4,"screenLayout"],[172,18,151,16],[173,6,152,4,"screenListeners"],[173,21,152,19],[174,6,153,4,"UNSTABLE_router"],[174,21,153,19],[175,6,154,4],[175,9,154,7,"rest"],[176,4,155,2],[176,5,155,3],[176,8,155,6,"options"],[176,15,155,13],[177,4,156,2],[177,10,156,8,"routeConfigs"],[177,22,156,20],[177,25,156,23,"getRouteConfigsFromChildren"],[177,52,156,50],[177,53,156,51,"children"],[177,61,156,59],[177,62,156,60],[178,4,157,2],[178,10,157,8,"router"],[178,16,157,14],[178,19,157,17],[178,23,157,17,"useLazyValue"],[178,38,157,29],[178,39,157,29,"useLazyValue"],[178,51,157,29],[178,53,157,30],[178,59,157,36],[179,6,158,4],[179,10,158,8,"rest"],[179,14,158,12],[179,15,158,13,"initialRouteName"],[179,31,158,29],[179,35,158,33],[179,39,158,37],[179,43,158,41,"routeConfigs"],[179,55,158,53],[179,56,158,54,"every"],[179,61,158,59],[179,62,158,60,"config"],[179,68,158,66],[179,72,158,70,"config"],[179,78,158,76],[179,79,158,77,"props"],[179,84,158,82],[179,85,158,83,"name"],[179,89,158,87],[179,94,158,92,"rest"],[179,98,158,96],[179,99,158,97,"initialRouteName"],[179,115,158,113],[179,116,158,114],[179,118,158,116],[180,8,159,6],[180,14,159,12],[180,18,159,16,"Error"],[180,23,159,21],[180,24,159,22],[180,57,159,55,"rest"],[180,61,159,59],[180,62,159,60,"initialRouteName"],[180,78,159,76],[180,111,159,109],[180,112,159,110],[181,6,160,4],[182,6,161,4],[182,12,161,10,"original"],[182,20,161,18],[182,23,161,21,"createRouter"],[182,35,161,33],[182,36,161,34,"rest"],[182,40,161,38],[182,41,161,39],[183,6,162,4],[183,10,162,8,"UNSTABLE_router"],[183,25,162,23],[183,29,162,27],[183,33,162,31],[183,35,162,33],[184,8,163,6],[184,14,163,12,"overrides"],[184,23,163,21],[184,26,163,24,"UNSTABLE_router"],[184,41,163,39],[184,42,163,40,"original"],[184,50,163,48],[184,51,163,49],[185,8,164,6],[185,15,164,13],[186,10,165,8],[186,13,165,11,"original"],[186,21,165,19],[187,10,166,8],[187,13,166,11,"overrides"],[188,8,167,6],[188,9,167,7],[189,6,168,4],[190,6,169,4],[190,13,169,11,"original"],[190,21,169,19],[191,4,170,2],[191,5,170,3],[191,6,170,4],[192,4,171,2],[192,10,171,8,"screens"],[192,17,171,15],[192,20,171,18,"routeConfigs"],[192,32,171,30],[192,33,171,31,"reduce"],[192,39,171,37],[192,40,171,38],[192,41,171,39,"acc"],[192,44,171,42],[192,46,171,44,"config"],[192,52,171,50],[192,57,171,55],[193,6,172,4],[193,10,172,8,"config"],[193,16,172,14],[193,17,172,15,"props"],[193,22,172,20],[193,23,172,21,"name"],[193,27,172,25],[193,31,172,29,"acc"],[193,34,172,32],[193,36,172,34],[194,8,173,6],[194,14,173,12],[194,18,173,16,"Error"],[194,23,173,21],[194,24,173,22],[194,133,173,131,"config"],[194,139,173,137],[194,140,173,138,"props"],[194,145,173,143],[194,146,173,144,"name"],[194,150,173,148],[194,154,173,152],[194,155,173,153],[195,6,174,4],[196,6,175,4,"acc"],[196,9,175,7],[196,10,175,8,"config"],[196,16,175,14],[196,17,175,15,"props"],[196,22,175,20],[196,23,175,21,"name"],[196,27,175,25],[196,28,175,26],[196,31,175,29,"config"],[196,37,175,35],[197,6,176,4],[197,13,176,11,"acc"],[197,16,176,14],[198,4,177,2],[198,5,177,3],[198,7,177,5],[198,8,177,6],[198,9,177,7],[198,10,177,8],[199,4,178,2],[199,10,178,8,"routeNames"],[199,20,178,18],[199,23,178,21,"routeConfigs"],[199,35,178,33],[199,36,178,34,"map"],[199,39,178,37],[199,40,178,38,"config"],[199,46,178,44],[199,50,178,48,"config"],[199,56,178,54],[199,57,178,55,"props"],[199,62,178,60],[199,63,178,61,"name"],[199,67,178,65],[199,68,178,66],[200,4,179,2],[200,10,179,8,"routeKeyList"],[200,22,179,20],[200,25,179,23,"routeNames"],[200,35,179,33],[200,36,179,34,"reduce"],[200,42,179,40],[200,43,179,41],[200,44,179,42,"acc"],[200,47,179,45],[200,49,179,47,"curr"],[200,53,179,51],[200,58,179,56],[201,6,180,4,"acc"],[201,9,180,7],[201,10,180,8,"curr"],[201,14,180,12],[201,15,180,13],[201,18,180,16,"screens"],[201,25,180,23],[201,26,180,24,"curr"],[201,30,180,28],[201,31,180,29],[201,32,180,30,"keys"],[201,36,180,34],[201,37,180,35,"map"],[201,40,180,38],[201,41,180,39,"key"],[201,44,180,42],[201,48,180,46,"key"],[201,51,180,49],[201,55,180,53],[201,57,180,55],[201,58,180,56],[201,59,180,57,"join"],[201,63,180,61],[201,64,180,62],[201,67,180,65],[201,68,180,66],[202,6,181,4],[202,13,181,11,"acc"],[202,16,181,14],[203,4,182,2],[203,5,182,3],[203,7,182,5],[203,8,182,6],[203,9,182,7],[203,10,182,8],[204,4,183,2],[204,10,183,8,"routeParamList"],[204,24,183,22],[204,27,183,25,"routeNames"],[204,37,183,35],[204,38,183,36,"reduce"],[204,44,183,42],[204,45,183,43],[204,46,183,44,"acc"],[204,49,183,47],[204,51,183,49,"curr"],[204,55,183,53],[204,60,183,58],[205,6,184,4],[205,12,184,10],[206,8,185,6,"initialParams"],[207,6,186,4],[207,7,186,5],[207,10,186,8,"screens"],[207,17,186,15],[207,18,186,16,"curr"],[207,22,186,20],[207,23,186,21],[207,24,186,22,"props"],[207,29,186,27],[208,6,187,4,"acc"],[208,9,187,7],[208,10,187,8,"curr"],[208,14,187,12],[208,15,187,13],[208,18,187,16,"initialParams"],[208,31,187,29],[209,6,188,4],[209,13,188,11,"acc"],[209,16,188,14],[210,4,189,2],[210,5,189,3],[210,7,189,5],[210,8,189,6],[210,9,189,7],[210,10,189,8],[211,4,190,2],[211,10,190,8,"routeGetIdList"],[211,24,190,22],[211,27,190,25,"routeNames"],[211,37,190,35],[211,38,190,36,"reduce"],[211,44,190,42],[211,45,190,43],[211,46,190,44,"acc"],[211,49,190,47],[211,51,190,49,"curr"],[211,55,190,53],[211,60,190,58,"Object"],[211,66,190,64],[211,67,190,65,"assign"],[211,73,190,71],[211,74,190,72,"acc"],[211,77,190,75],[211,79,190,77],[212,6,191,4],[212,7,191,5,"curr"],[212,11,191,9],[212,14,191,12,"screens"],[212,21,191,19],[212,22,191,20,"curr"],[212,26,191,24],[212,27,191,25],[212,28,191,26,"props"],[212,33,191,31],[212,34,191,32,"getId"],[213,4,192,2],[213,5,192,3],[213,6,192,4],[213,8,192,6],[213,9,192,7],[213,10,192,8],[213,11,192,9],[214,4,193,2],[214,8,193,6],[214,9,193,7,"routeNames"],[214,19,193,17],[214,20,193,18,"length"],[214,26,193,24],[214,28,193,26],[215,6,194,4],[215,12,194,10],[215,16,194,14,"Error"],[215,21,194,19],[215,22,194,20],[215,114,194,112],[215,115,194,113],[216,4,195,2],[217,4,196,2],[217,10,196,8,"isStateValid"],[217,22,196,20],[217,25,196,23,"React"],[217,30,196,28],[217,31,196,29,"useCallback"],[217,42,196,40],[217,43,196,41,"state"],[217,48,196,46],[217,52,196,50,"state"],[217,57,196,55],[217,58,196,56,"type"],[217,62,196,60],[217,67,196,65,"undefined"],[217,76,196,74],[217,80,196,78,"state"],[217,85,196,83],[217,86,196,84,"type"],[217,90,196,88],[217,95,196,93,"router"],[217,101,196,99],[217,102,196,100,"type"],[217,106,196,104],[217,108,196,106],[217,109,196,107,"router"],[217,115,196,113],[217,116,196,114,"type"],[217,120,196,118],[217,121,196,119],[217,122,196,120],[218,4,197,2],[218,10,197,8,"isStateInitialized"],[218,28,197,26],[218,31,197,29,"React"],[218,36,197,34],[218,37,197,35,"useCallback"],[218,48,197,46],[218,49,197,47,"state"],[218,54,197,52],[218,58,197,56,"state"],[218,63,197,61],[218,68,197,66,"undefined"],[218,77,197,75],[218,81,197,79,"state"],[218,86,197,84],[218,87,197,85,"stale"],[218,92,197,90],[218,97,197,95],[218,102,197,100],[218,106,197,104,"isStateValid"],[218,118,197,116],[218,119,197,117,"state"],[218,124,197,122],[218,125,197,123],[218,127,197,125],[218,128,197,126,"isStateValid"],[218,140,197,138],[218,141,197,139],[218,142,197,140],[219,4,198,2],[219,10,198,8],[220,6,199,4,"state"],[220,11,199,9],[220,13,199,11,"currentState"],[220,25,199,23],[221,6,200,4,"getState"],[221,14,200,12],[221,16,200,14,"getCurrentState"],[221,31,200,29],[222,6,201,4,"setState"],[222,14,201,12],[222,16,201,14,"setCurrentState"],[222,31,201,29],[223,6,202,4,"setKey"],[223,12,202,10],[224,6,203,4,"getKey"],[224,12,203,10],[225,6,204,4,"getIsInitial"],[226,4,205,2],[226,5,205,3],[226,8,205,6,"React"],[226,13,205,11],[226,14,205,12,"useContext"],[226,24,205,22],[226,25,205,23,"NavigationStateContext"],[226,50,205,45],[226,51,205,45,"NavigationStateContext"],[226,73,205,45],[226,74,205,46],[227,4,206,2],[227,10,206,8,"stateCleanedUp"],[227,24,206,22],[227,27,206,25,"React"],[227,32,206,30],[227,33,206,31,"useRef"],[227,39,206,37],[227,40,206,38],[227,45,206,43],[227,46,206,44],[228,4,207,2],[228,10,207,8,"setState"],[228,18,207,16],[228,21,207,19],[228,25,207,19,"useLatestCallback"],[228,42,207,36],[228,43,207,36,"default"],[228,50,207,36],[228,52,207,37,"state"],[228,57,207,42],[228,61,207,46],[229,6,208,4],[229,10,208,8,"stateCleanedUp"],[229,24,208,22],[229,25,208,23,"current"],[229,32,208,30],[229,34,208,32],[230,8,209,6],[231,8,210,6],[232,8,211,6],[233,8,212,6],[234,6,213,4],[235,6,214,4,"setCurrentState"],[235,21,214,19],[235,22,214,20,"state"],[235,27,214,25],[235,28,214,26],[236,4,215,2],[236,5,215,3],[236,6,215,4],[237,4,216,2],[237,10,216,8],[237,11,216,9,"initializedState"],[237,27,216,25],[237,29,216,27,"isFirstStateInitialization"],[237,55,216,53],[237,56,216,54],[237,59,216,57,"React"],[237,64,216,62],[237,65,216,63,"useMemo"],[237,72,216,70],[237,73,216,71],[237,79,216,77],[238,6,217,4],[238,12,217,10,"initialRouteParamList"],[238,33,217,31],[238,36,217,34,"routeNames"],[238,46,217,44],[238,47,217,45,"reduce"],[238,53,217,51],[238,54,217,52],[238,55,217,53,"acc"],[238,58,217,56],[238,60,217,58,"curr"],[238,64,217,62],[238,69,217,67],[239,8,218,6],[239,14,218,12],[240,10,219,8,"initialParams"],[241,8,220,6],[241,9,220,7],[241,12,220,10,"screens"],[241,19,220,17],[241,20,220,18,"curr"],[241,24,220,22],[241,25,220,23],[241,26,220,24,"props"],[241,31,220,29],[242,8,221,6],[242,14,221,12,"initialParamsFromParams"],[242,37,221,35],[242,40,221,38,"route"],[242,45,221,43],[242,47,221,45,"params"],[242,53,221,51],[242,55,221,53,"state"],[242,60,221,58],[242,64,221,62],[242,68,221,66],[242,72,221,70,"route"],[242,77,221,75],[242,79,221,77,"params"],[242,85,221,83],[242,87,221,85,"initial"],[242,94,221,92],[242,99,221,97],[242,104,221,102],[242,108,221,106,"route"],[242,113,221,111],[242,115,221,113,"params"],[242,121,221,119],[242,123,221,121,"screen"],[242,129,221,127],[242,134,221,132,"curr"],[242,138,221,136],[242,141,221,139,"route"],[242,146,221,144],[242,147,221,145,"params"],[242,153,221,151],[242,154,221,152,"params"],[242,160,221,158],[242,163,221,161,"undefined"],[242,172,221,170],[243,8,222,6,"acc"],[243,11,222,9],[243,12,222,10,"curr"],[243,16,222,14],[243,17,222,15],[243,20,222,18,"initialParams"],[243,33,222,31],[243,38,222,36,"undefined"],[243,47,222,45],[243,51,222,49,"initialParamsFromParams"],[243,74,222,72],[243,79,222,77,"undefined"],[243,88,222,86],[243,91,222,89],[244,10,223,8],[244,13,223,11,"initialParams"],[244,26,223,24],[245,10,224,8],[245,13,224,11,"initialParamsFromParams"],[246,8,225,6],[246,9,225,7],[246,12,225,10,"undefined"],[246,21,225,19],[247,8,226,6],[247,15,226,13,"acc"],[247,18,226,16],[248,6,227,4],[248,7,227,5],[248,9,227,7],[248,10,227,8],[248,11,227,9],[248,12,227,10],[250,6,229,4],[251,6,230,4],[252,6,231,4],[253,6,232,4],[254,6,233,4],[254,10,233,8],[254,11,233,9,"currentState"],[254,23,233,21],[254,28,233,26,"undefined"],[254,37,233,35],[254,41,233,39],[254,42,233,40,"isStateValid"],[254,54,233,52],[254,55,233,53,"currentState"],[254,67,233,65],[254,68,233,66],[254,73,233,71,"route"],[254,78,233,76],[254,80,233,78,"params"],[254,86,233,84],[254,88,233,86,"state"],[254,93,233,91],[254,97,233,95],[254,101,233,99],[254,105,233,103],[254,107,233,105],[254,114,233,112,"route"],[254,119,233,117],[254,121,233,119,"params"],[254,127,233,125],[254,129,233,127,"screen"],[254,135,233,133],[254,140,233,138],[254,148,233,146],[254,152,233,150,"route"],[254,157,233,155],[254,159,233,157,"params"],[254,165,233,163],[254,167,233,165,"initial"],[254,174,233,172],[254,179,233,177],[254,184,233,182],[254,185,233,183],[254,187,233,185],[255,8,234,6],[255,15,234,13],[255,16,234,14,"router"],[255,22,234,20],[255,23,234,21,"getInitialState"],[255,38,234,36],[255,39,234,37],[256,10,235,8,"routeNames"],[256,20,235,18],[257,10,236,8,"routeParamList"],[257,24,236,22],[257,26,236,24,"initialRouteParamList"],[257,47,236,45],[258,10,237,8,"routeGetIdList"],[259,8,238,6],[259,9,238,7],[259,10,238,8],[259,12,238,10],[259,16,238,14],[259,17,238,15],[260,6,239,4],[260,7,239,5],[260,13,239,11],[261,8,240,6],[261,12,240,10,"stateFromParams"],[261,27,240,25],[262,8,241,6],[262,12,241,10,"route"],[262,17,241,15],[262,19,241,17,"params"],[262,25,241,23],[262,27,241,25,"state"],[262,32,241,30],[262,36,241,34],[262,40,241,38],[262,42,241,40],[263,10,242,8,"stateFromParams"],[263,25,242,23],[263,28,242,26,"route"],[263,33,242,31],[263,34,242,32,"params"],[263,40,242,38],[263,41,242,39,"state"],[263,46,242,44],[264,8,243,6],[264,9,243,7],[264,15,243,13],[264,19,243,17],[264,26,243,24,"route"],[264,31,243,29],[264,33,243,31,"params"],[264,39,243,37],[264,41,243,39,"screen"],[264,47,243,45],[264,52,243,50],[264,60,243,58],[264,64,243,62,"route"],[264,69,243,67],[264,71,243,69,"params"],[264,77,243,75],[264,79,243,77,"initial"],[264,86,243,84],[264,91,243,89],[264,96,243,94],[264,98,243,96],[265,10,244,8,"stateFromParams"],[265,25,244,23],[265,28,244,26],[266,12,245,10,"index"],[266,17,245,15],[266,19,245,17],[266,20,245,18],[267,12,246,10,"routes"],[267,18,246,16],[267,20,246,18],[267,21,246,19],[268,14,247,12,"name"],[268,18,247,16],[268,20,247,18,"route"],[268,25,247,23],[268,26,247,24,"params"],[268,32,247,30],[268,33,247,31,"screen"],[268,39,247,37],[269,14,248,12,"params"],[269,20,248,18],[269,22,248,20,"route"],[269,27,248,25],[269,28,248,26,"params"],[269,34,248,32],[269,35,248,33,"params"],[269,41,248,39],[270,14,249,12,"path"],[270,18,249,16],[270,20,249,18,"route"],[270,25,249,23],[270,26,249,24,"params"],[270,32,249,30],[270,33,249,31,"path"],[271,12,250,10],[271,13,250,11],[272,10,251,8],[272,11,251,9],[273,8,252,6],[274,8,253,6],[274,15,253,13],[274,16,253,14,"router"],[274,22,253,20],[274,23,253,21,"getRehydratedState"],[274,41,253,39],[274,42,253,40,"stateFromParams"],[274,57,253,55],[274,61,253,59,"currentState"],[274,73,253,71],[274,75,253,73],[275,10,254,8,"routeNames"],[275,20,254,18],[276,10,255,8,"routeParamList"],[276,24,255,22],[276,26,255,24,"initialRouteParamList"],[276,47,255,45],[277,10,256,8,"routeGetIdList"],[278,8,257,6],[278,9,257,7],[278,10,257,8],[278,12,257,10],[278,17,257,15],[278,18,257,16],[279,6,258,4],[280,6,259,4],[281,6,260,4],[282,6,261,4],[283,6,262,4],[284,6,263,4],[285,6,264,4],[286,4,265,2],[286,5,265,3],[286,7,265,5],[286,8,265,6,"currentState"],[286,20,265,18],[286,22,265,20,"router"],[286,28,265,26],[286,30,265,28,"isStateValid"],[286,42,265,40],[286,43,265,41],[286,44,265,42],[287,4,266,2],[287,10,266,8,"previousRouteKeyListRef"],[287,33,266,31],[287,36,266,34,"React"],[287,41,266,39],[287,42,266,40,"useRef"],[287,48,266,46],[287,49,266,47,"routeKeyList"],[287,61,266,59],[287,62,266,60],[288,4,267,2,"React"],[288,9,267,7],[288,10,267,8,"useEffect"],[288,19,267,17],[288,20,267,18],[288,26,267,24],[289,6,268,4,"previousRouteKeyListRef"],[289,29,268,27],[289,30,268,28,"current"],[289,37,268,35],[289,40,268,38,"routeKeyList"],[289,52,268,50],[290,4,269,2],[290,5,269,3],[290,6,269,4],[291,4,270,2],[291,10,270,8,"previousRouteKeyList"],[291,30,270,28],[291,33,270,31,"previousRouteKeyListRef"],[291,56,270,54],[291,57,270,55,"current"],[291,64,270,62],[292,4,271,2],[292,8,271,6,"state"],[292,13,271,11],[293,4,272,2],[294,4,273,2],[295,4,274,2],[296,4,275,2,"isStateInitialized"],[296,22,275,20],[296,23,275,21,"currentState"],[296,35,275,33],[296,36,275,34],[296,39,275,37,"currentState"],[296,51,275,49],[296,54,275,52,"initializedState"],[296,70,275,68],[297,4,276,2],[297,8,276,6,"nextState"],[297,17,276,15],[297,20,276,18,"state"],[297,25,276,23],[298,4,277,2],[298,8,277,6],[298,9,277,7],[298,13,277,7,"isArrayEqual"],[298,28,277,19],[298,29,277,19,"isArrayEqual"],[298,41,277,19],[298,43,277,20,"state"],[298,48,277,25],[298,49,277,26,"routeNames"],[298,59,277,36],[298,61,277,38,"routeNames"],[298,71,277,48],[298,72,277,49],[298,76,277,53],[298,77,277,54],[298,81,277,54,"isRecordEqual"],[298,97,277,67],[298,98,277,67,"isRecordEqual"],[298,111,277,67],[298,113,277,68,"routeKeyList"],[298,125,277,80],[298,127,277,82,"previousRouteKeyList"],[298,147,277,102],[298,148,277,103],[298,150,277,105],[299,6,278,4],[300,6,279,4,"nextState"],[300,15,279,13],[300,18,279,16,"router"],[300,24,279,22],[300,25,279,23,"getStateForRouteNamesChange"],[300,52,279,50],[300,53,279,51,"state"],[300,58,279,56],[300,60,279,58],[301,8,280,6,"routeNames"],[301,18,280,16],[302,8,281,6,"routeParamList"],[302,22,281,20],[303,8,282,6,"routeGetIdList"],[303,22,282,20],[304,8,283,6,"routeKeyChanges"],[304,23,283,21],[304,25,283,23,"Object"],[304,31,283,29],[304,32,283,30,"keys"],[304,36,283,34],[304,37,283,35,"routeKeyList"],[304,49,283,47],[304,50,283,48],[304,51,283,49,"filter"],[304,57,283,55],[304,58,283,56,"name"],[304,62,283,60],[304,66,283,64,"name"],[304,70,283,68],[304,74,283,72,"previousRouteKeyList"],[304,94,283,92],[304,98,283,96,"routeKeyList"],[304,110,283,108],[304,111,283,109,"name"],[304,115,283,113],[304,116,283,114],[304,121,283,119,"previousRouteKeyList"],[304,141,283,139],[304,142,283,140,"name"],[304,146,283,144],[304,147,283,145],[305,6,284,4],[305,7,284,5],[305,8,284,6],[306,4,285,2],[307,4,286,2],[307,10,286,8,"previousNestedParamsRef"],[307,33,286,31],[307,36,286,34,"React"],[307,41,286,39],[307,42,286,40,"useRef"],[307,48,286,46],[307,49,286,47,"route"],[307,54,286,52],[307,56,286,54,"params"],[307,62,286,60],[307,63,286,61],[308,4,287,2,"React"],[308,9,287,7],[308,10,287,8,"useEffect"],[308,19,287,17],[308,20,287,18],[308,26,287,24],[309,6,288,4,"previousNestedParamsRef"],[309,29,288,27],[309,30,288,28,"current"],[309,37,288,35],[309,40,288,38,"route"],[309,45,288,43],[309,47,288,45,"params"],[309,53,288,51],[310,4,289,2],[310,5,289,3],[310,7,289,5],[310,8,289,6,"route"],[310,13,289,11],[310,15,289,13,"params"],[310,21,289,19],[310,22,289,20],[310,23,289,21],[311,4,290,2],[311,8,290,6,"route"],[311,13,290,11],[311,15,290,13,"params"],[311,21,290,19],[311,23,290,21],[312,6,291,4],[312,12,291,10,"previousParams"],[312,26,291,24],[312,29,291,27,"previousNestedParamsRef"],[312,52,291,50],[312,53,291,51,"current"],[312,60,291,58],[313,6,292,4],[313,10,292,8,"action"],[313,16,292,14],[314,6,293,4],[314,10,293,8],[314,17,293,15,"route"],[314,22,293,20],[314,23,293,21,"params"],[314,29,293,27],[314,30,293,28,"state"],[314,35,293,33],[314,40,293,38],[314,48,293,46],[314,52,293,50,"route"],[314,57,293,55],[314,58,293,56,"params"],[314,64,293,62],[314,65,293,63,"state"],[314,70,293,68],[314,74,293,72],[314,78,293,76],[314,82,293,80,"route"],[314,87,293,85],[314,88,293,86,"params"],[314,94,293,92],[314,99,293,97,"previousParams"],[314,113,293,111],[314,115,293,113],[315,8,294,6],[316,8,295,6,"action"],[316,14,295,12],[316,17,295,15,"CommonActions"],[316,40,295,28],[316,41,295,28,"CommonActions"],[316,54,295,28],[316,55,295,29,"reset"],[316,60,295,34],[316,61,295,35,"route"],[316,66,295,40],[316,67,295,41,"params"],[316,73,295,47],[316,74,295,48,"state"],[316,79,295,53],[316,80,295,54],[317,6,296,4],[317,7,296,5],[317,13,296,11],[317,17,296,15],[317,24,296,22,"route"],[317,29,296,27],[317,30,296,28,"params"],[317,36,296,34],[317,37,296,35,"screen"],[317,43,296,41],[317,48,296,46],[317,56,296,54],[317,61,296,59,"route"],[317,66,296,64],[317,67,296,65,"params"],[317,73,296,71],[317,74,296,72,"initial"],[317,81,296,79],[317,86,296,84],[317,91,296,89],[317,95,296,93,"isFirstStateInitialization"],[317,121,296,119],[317,125,296,123,"route"],[317,130,296,128],[317,131,296,129,"params"],[317,137,296,135],[317,142,296,140,"previousParams"],[317,156,296,154],[317,157,296,155],[317,159,296,157],[318,8,297,6],[319,8,298,6,"action"],[319,14,298,12],[319,17,298,15,"CommonActions"],[319,40,298,28],[319,41,298,28,"CommonActions"],[319,54,298,28],[319,55,298,29,"navigate"],[319,63,298,37],[319,64,298,38],[320,10,299,8,"name"],[320,14,299,12],[320,16,299,14,"route"],[320,21,299,19],[320,22,299,20,"params"],[320,28,299,26],[320,29,299,27,"screen"],[320,35,299,33],[321,10,300,8,"params"],[321,16,300,14],[321,18,300,16,"route"],[321,23,300,21],[321,24,300,22,"params"],[321,30,300,28],[321,31,300,29,"params"],[321,37,300,35],[322,10,301,8,"path"],[322,14,301,12],[322,16,301,14,"route"],[322,21,301,19],[322,22,301,20,"params"],[322,28,301,26],[322,29,301,27,"path"],[322,33,301,31],[323,10,302,8,"merge"],[323,15,302,13],[323,17,302,15,"route"],[323,22,302,20],[323,23,302,21,"params"],[323,29,302,27],[323,30,302,28,"merge"],[323,35,302,33],[324,10,303,8,"pop"],[324,13,303,11],[324,15,303,13,"route"],[324,20,303,18],[324,21,303,19,"params"],[324,27,303,25],[324,28,303,26,"pop"],[325,8,304,6],[325,9,304,7],[325,10,304,8],[326,6,305,4],[328,6,307,4],[329,6,308,4],[329,12,308,10,"updatedState"],[329,24,308,22],[329,27,308,25,"action"],[329,33,308,31],[329,36,308,34,"router"],[329,42,308,40],[329,43,308,41,"getStateForAction"],[329,60,308,58],[329,61,308,59,"nextState"],[329,70,308,68],[329,72,308,70,"action"],[329,78,308,76],[329,80,308,78],[330,8,309,6,"routeNames"],[330,18,309,16],[331,8,310,6,"routeParamList"],[331,22,310,20],[332,8,311,6,"routeGetIdList"],[333,6,312,4],[333,7,312,5],[333,8,312,6],[333,11,312,9],[333,15,312,13],[334,6,313,4,"nextState"],[334,15,313,13],[334,18,313,16,"updatedState"],[334,30,313,28],[334,35,313,33],[334,39,313,37],[334,42,313,40,"router"],[334,48,313,46],[334,49,313,47,"getRehydratedState"],[334,67,313,65],[334,68,313,66,"updatedState"],[334,80,313,78],[334,82,313,80],[335,8,314,6,"routeNames"],[335,18,314,16],[336,8,315,6,"routeParamList"],[336,22,315,20],[337,8,316,6,"routeGetIdList"],[338,6,317,4],[338,7,317,5],[338,8,317,6],[338,11,317,9,"nextState"],[338,20,317,18],[339,4,318,2],[340,4,319,2],[340,10,319,8,"shouldUpdate"],[340,22,319,20],[340,25,319,23,"state"],[340,30,319,28],[340,35,319,33,"nextState"],[340,44,319,42],[341,4,320,2],[341,8,320,2,"useScheduleUpdate"],[341,28,320,19],[341,29,320,19,"useScheduleUpdate"],[341,46,320,19],[341,48,320,20],[341,54,320,26],[342,6,321,4],[342,10,321,8,"shouldUpdate"],[342,22,321,20],[342,24,321,22],[343,8,322,6],[344,8,323,6,"setState"],[344,16,323,14],[344,17,323,15,"nextState"],[344,26,323,24],[344,27,323,25],[345,6,324,4],[346,4,325,2],[346,5,325,3],[346,6,325,4],[348,4,327,2],[349,4,328,2],[350,4,329,2],[351,4,330,2,"state"],[351,9,330,7],[351,12,330,10,"nextState"],[351,21,330,19],[352,4,331,2,"React"],[352,9,331,7],[352,10,331,8,"useEffect"],[352,19,331,17],[352,20,331,18],[352,26,331,24],[353,6,332,4],[354,6,333,4],[355,6,334,4,"stateCleanedUp"],[355,20,334,18],[355,21,334,19,"current"],[355,28,334,26],[355,31,334,29],[355,36,334,34],[356,6,335,4,"setKey"],[356,12,335,10],[356,13,335,11,"navigatorKey"],[356,25,335,23],[356,26,335,24],[357,6,336,4],[357,10,336,8],[357,11,336,9,"getIsInitial"],[357,23,336,21],[357,24,336,22],[357,25,336,23],[357,27,336,25],[358,8,337,6],[359,8,338,6],[360,8,339,6],[361,8,340,6,"setState"],[361,16,340,14],[361,17,340,15,"nextState"],[361,26,340,24],[361,27,340,25],[362,6,341,4],[363,6,342,4],[363,13,342,11],[363,19,342,17],[364,8,343,6],[365,8,344,6],[365,12,344,10,"getCurrentState"],[365,27,344,25],[365,28,344,26],[365,29,344,27],[365,34,344,32,"undefined"],[365,43,344,41],[365,47,344,45,"getKey"],[365,53,344,51],[365,54,344,52],[365,55,344,53],[365,60,344,58,"navigatorKey"],[365,72,344,70],[365,74,344,72],[366,10,345,8,"setCurrentState"],[366,25,345,23],[366,26,345,24,"undefined"],[366,35,345,33],[366,36,345,34],[367,10,346,8,"stateCleanedUp"],[367,24,346,22],[367,25,346,23,"current"],[367,32,346,30],[367,35,346,33],[367,39,346,37],[368,8,347,6],[369,6,348,4],[369,7,348,5],[370,6,349,4],[371,4,350,2],[371,5,350,3],[371,7,350,5],[371,9,350,7],[371,10,350,8],[373,4,352,2],[374,4,353,2],[375,4,354,2],[376,4,355,2],[377,4,356,2],[378,4,357,2],[378,10,357,8,"stateRef"],[378,18,357,16],[378,21,357,19,"React"],[378,26,357,24],[378,27,357,25,"useRef"],[378,33,357,31],[378,34,357,32,"state"],[378,39,357,37],[378,40,357,38],[379,4,358,2,"stateRef"],[379,12,358,10],[379,13,358,11,"current"],[379,20,358,18],[379,23,358,21,"state"],[379,28,358,26],[380,4,359,2],[380,8,359,2,"useClientLayoutEffect"],[380,32,359,23],[380,33,359,23,"useClientLayoutEffect"],[380,54,359,23],[380,56,359,24],[380,62,359,30],[381,6,360,4,"stateRef"],[381,14,360,12],[381,15,360,13,"current"],[381,22,360,20],[381,25,360,23],[381,29,360,27],[382,4,361,2],[382,5,361,3],[382,6,361,4],[383,4,362,2],[383,10,362,8,"getState"],[383,18,362,16],[383,21,362,19],[383,25,362,19,"useLatestCallback"],[383,42,362,36],[383,43,362,36,"default"],[383,50,362,36],[383,52,362,37],[383,58,362,43],[384,6,363,4],[384,12,363,10,"currentState"],[384,24,363,22],[384,27,363,25,"getCurrentState"],[384,42,363,40],[384,43,363,41],[384,44,363,42],[385,6,364,4],[385,13,364,11],[385,17,364,11,"deepFreeze"],[385,30,364,21],[385,31,364,21,"deepFreeze"],[385,41,364,21],[385,43,364,22,"isStateInitialized"],[385,61,364,40],[385,62,364,41,"currentState"],[385,74,364,53],[385,75,364,54],[385,78,364,57,"currentState"],[385,90,364,69],[385,93,364,72,"initializedState"],[385,109,364,88],[385,110,364,89],[386,4,365,2],[386,5,365,3],[386,6,365,4],[387,4,366,2],[387,10,366,8,"emitter"],[387,17,366,15],[387,20,366,18],[387,24,366,18,"useEventEmitter"],[387,42,366,33],[387,43,366,33,"useEventEmitter"],[387,58,366,33],[387,60,366,34,"e"],[387,61,366,35],[387,65,366,39],[388,6,367,4],[388,12,367,10,"routeNames"],[388,22,367,20],[388,25,367,23],[388,27,367,25],[389,6,368,4],[389,10,368,8,"route"],[389,15,368,13],[390,6,369,4],[390,10,369,8,"e"],[390,11,369,9],[390,12,369,10,"target"],[390,18,369,16],[390,20,369,18],[391,8,370,6,"route"],[391,13,370,11],[391,16,370,14,"state"],[391,21,370,19],[391,22,370,20,"routes"],[391,28,370,26],[391,29,370,27,"find"],[391,33,370,31],[391,34,370,32,"route"],[391,39,370,37],[391,43,370,41,"route"],[391,48,370,46],[391,49,370,47,"key"],[391,52,370,50],[391,57,370,55,"e"],[391,58,370,56],[391,59,370,57,"target"],[391,65,370,63],[391,66,370,64],[392,8,371,6],[392,12,371,10,"route"],[392,17,371,15],[392,19,371,17,"name"],[392,23,371,21],[392,25,371,23],[393,10,372,8,"routeNames"],[393,20,372,18],[393,21,372,19,"push"],[393,25,372,23],[393,26,372,24,"route"],[393,31,372,29],[393,32,372,30,"name"],[393,36,372,34],[393,37,372,35],[394,8,373,6],[395,6,374,4],[395,7,374,5],[395,13,374,11],[396,8,375,6,"route"],[396,13,375,11],[396,16,375,14,"state"],[396,21,375,19],[396,22,375,20,"routes"],[396,28,375,26],[396,29,375,27,"state"],[396,34,375,32],[396,35,375,33,"index"],[396,40,375,38],[396,41,375,39],[397,8,376,6,"routeNames"],[397,18,376,16],[397,19,376,17,"push"],[397,23,376,21],[397,24,376,22],[397,27,376,25,"Object"],[397,33,376,31],[397,34,376,32,"keys"],[397,38,376,36],[397,39,376,37,"screens"],[397,46,376,44],[397,47,376,45],[397,48,376,46,"filter"],[397,54,376,52],[397,55,376,53,"name"],[397,59,376,57],[397,63,376,61,"route"],[397,68,376,66],[397,70,376,68,"name"],[397,74,376,72],[397,79,376,77,"name"],[397,83,376,81],[397,84,376,82],[397,85,376,83],[398,6,377,4],[399,6,378,4],[399,10,378,8,"route"],[399,15,378,13],[399,19,378,17],[399,23,378,21],[399,25,378,23],[400,8,379,6],[401,6,380,4],[402,6,381,4],[402,12,381,10,"navigation"],[402,22,381,20],[402,25,381,23,"descriptors"],[402,36,381,34],[402,37,381,35,"route"],[402,42,381,40],[402,43,381,41,"key"],[402,46,381,44],[402,47,381,45],[402,48,381,46,"navigation"],[402,58,381,56],[403,6,382,4],[403,12,382,10,"listeners"],[403,21,382,19],[403,24,382,22],[403,26,382,24],[403,27,382,25,"concat"],[403,33,382,31],[404,6,383,4],[405,6,384,4],[405,9,384,7],[405,10,384,8,"screenListeners"],[405,25,384,23],[405,27,384,25],[405,30,384,28,"routeNames"],[405,40,384,38],[405,41,384,39,"map"],[405,44,384,42],[405,45,384,43,"name"],[405,49,384,47],[405,53,384,51],[406,8,385,6],[406,14,385,12],[407,10,386,8,"listeners"],[408,8,387,6],[408,9,387,7],[408,12,387,10,"screens"],[408,19,387,17],[408,20,387,18,"name"],[408,24,387,22],[408,25,387,23],[408,26,387,24,"props"],[408,31,387,29],[409,8,388,6],[409,15,388,13,"listeners"],[409,24,388,22],[410,6,389,4],[410,7,389,5],[410,8,389,6],[410,9,389,7],[410,10,389,8,"map"],[410,13,389,11],[410,14,389,12,"listeners"],[410,23,389,21],[410,27,389,25],[411,8,390,6],[411,14,390,12,"map"],[411,17,390,15],[411,20,390,18],[411,27,390,25,"listeners"],[411,36,390,34],[411,41,390,39],[411,51,390,49],[411,54,390,52,"listeners"],[411,63,390,61],[411,64,390,62],[412,10,391,8,"route"],[412,15,391,13],[412,17,391,15,"route"],[412,22,391,20],[413,10,392,8,"navigation"],[414,8,393,6],[414,9,393,7],[414,10,393,8],[414,13,393,11,"listeners"],[414,22,393,20],[415,8,394,6],[415,15,394,13,"map"],[415,18,394,16],[415,21,394,19,"Object"],[415,27,394,25],[415,28,394,26,"keys"],[415,32,394,30],[415,33,394,31,"map"],[415,36,394,34],[415,37,394,35],[415,38,394,36,"filter"],[415,44,394,42],[415,45,394,43,"type"],[415,49,394,47],[415,53,394,51,"type"],[415,57,394,55],[415,62,394,60,"e"],[415,63,394,61],[415,64,394,62,"type"],[415,68,394,66],[415,69,394,67],[415,70,394,68,"map"],[415,73,394,71],[415,74,394,72,"type"],[415,78,394,76],[415,82,394,80,"map"],[415,85,394,83],[415,88,394,86,"type"],[415,92,394,90],[415,93,394,91],[415,94,394,92],[415,97,394,95,"undefined"],[415,106,394,104],[416,6,395,4],[416,7,395,5],[416,8,395,6],[417,6,396,4],[418,6,397,4],[419,6,397,4],[419,7,398,5,"filter"],[419,13,398,11],[419,14,398,12],[419,15,398,13,"cb"],[419,17,398,15],[419,19,398,17,"i"],[419,20,398,18],[419,22,398,20,"self"],[419,26,398,24],[419,31,398,29,"cb"],[419,33,398,31],[419,37,398,35,"self"],[419,41,398,39],[419,42,398,40,"lastIndexOf"],[419,53,398,51],[419,54,398,52,"cb"],[419,56,398,54],[419,57,398,55],[419,62,398,60,"i"],[419,63,398,61],[419,64,398,62],[420,6,399,4,"listeners"],[420,15,399,13],[420,16,399,14,"forEach"],[420,23,399,21],[420,24,399,22,"listener"],[420,32,399,30],[420,36,399,34,"listener"],[420,44,399,42],[420,47,399,45,"e"],[420,48,399,46],[420,49,399,47],[420,50,399,48],[421,4,400,2],[421,5,400,3],[421,6,400,4],[422,4,401,2],[422,8,401,2,"useFocusEvents"],[422,25,401,16],[422,26,401,16,"useFocusEvents"],[422,40,401,16],[422,42,401,17],[423,6,402,4,"state"],[423,11,402,9],[424,6,403,4,"emitter"],[425,4,404,2],[425,5,404,3],[425,6,404,4],[426,4,405,2,"React"],[426,9,405,7],[426,10,405,8,"useEffect"],[426,19,405,17],[426,20,405,18],[426,26,405,24],[427,6,406,4,"emitter"],[427,13,406,11],[427,14,406,12,"emit"],[427,18,406,16],[427,19,406,17],[428,8,407,6,"type"],[428,12,407,10],[428,14,407,12],[428,21,407,19],[429,8,408,6,"data"],[429,12,408,10],[429,14,408,12],[430,10,409,8,"state"],[431,8,410,6],[432,6,411,4],[432,7,411,5],[432,8,411,6],[433,4,412,2],[433,5,412,3],[433,7,412,5],[433,8,412,6,"emitter"],[433,15,412,13],[433,17,412,15,"state"],[433,22,412,20],[433,23,412,21],[433,24,412,22],[434,4,413,2],[434,10,413,8],[435,6,414,4,"listeners"],[435,15,414,13],[435,17,414,15,"childListeners"],[435,31,414,29],[436,6,415,4,"addListener"],[437,4,416,2],[437,5,416,3],[437,8,416,6],[437,12,416,6,"useChildListeners"],[437,32,416,23],[437,33,416,23,"useChildListeners"],[437,50,416,23],[437,52,416,24],[437,53,416,25],[438,4,417,2],[438,10,417,8],[439,6,418,4,"keyedListeners"],[439,20,418,18],[440,6,419,4,"addKeyedListener"],[441,4,420,2],[441,5,420,3],[441,8,420,6],[441,12,420,6,"useKeyedChildListeners"],[441,37,420,28],[441,38,420,28,"useKeyedChildListeners"],[441,60,420,28],[441,62,420,29],[441,63,420,30],[442,4,421,2],[442,10,421,8,"onAction"],[442,18,421,16],[442,21,421,19],[442,25,421,19,"useOnAction"],[442,39,421,30],[442,40,421,30,"useOnAction"],[442,51,421,30],[442,53,421,31],[443,6,422,4,"router"],[443,12,422,10],[444,6,423,4,"getState"],[444,14,423,12],[445,6,424,4,"setState"],[445,14,424,12],[446,6,425,4,"key"],[446,9,425,7],[446,11,425,9,"route"],[446,16,425,14],[446,18,425,16,"key"],[446,21,425,19],[447,6,426,4,"actionListeners"],[447,21,426,19],[447,23,426,21,"childListeners"],[447,37,426,35],[447,38,426,36,"action"],[447,44,426,42],[448,6,427,4,"beforeRemoveListeners"],[448,27,427,25],[448,29,427,27,"keyedListeners"],[448,43,427,41],[448,44,427,42,"beforeRemove"],[448,56,427,54],[449,6,428,4,"routerConfigOptions"],[449,25,428,23],[449,27,428,25],[450,8,429,6,"routeNames"],[450,18,429,16],[451,8,430,6,"routeParamList"],[451,22,430,20],[452,8,431,6,"routeGetIdList"],[453,6,432,4],[453,7,432,5],[454,6,433,4,"emitter"],[455,4,434,2],[455,5,434,3],[455,6,434,4],[456,4,435,2],[456,10,435,8,"onRouteFocus"],[456,22,435,20],[456,25,435,23],[456,29,435,23,"useOnRouteFocus"],[456,47,435,38],[456,48,435,38,"useOnRouteFocus"],[456,63,435,38],[456,65,435,39],[457,6,436,4,"router"],[457,12,436,10],[458,6,437,4,"key"],[458,9,437,7],[458,11,437,9,"route"],[458,16,437,14],[458,18,437,16,"key"],[458,21,437,19],[459,6,438,4,"getState"],[459,14,438,12],[460,6,439,4,"setState"],[461,4,440,2],[461,5,440,3],[461,6,440,4],[462,4,441,2],[462,10,441,8,"navigation"],[462,20,441,18],[462,23,441,21],[462,27,441,21,"useNavigationHelpers"],[462,50,441,41],[462,51,441,41,"useNavigationHelpers"],[462,71,441,41],[462,73,441,42],[463,6,442,4,"id"],[463,8,442,6],[463,10,442,8,"options"],[463,17,442,15],[463,18,442,16,"id"],[463,20,442,18],[464,6,443,4,"onAction"],[464,14,443,12],[465,6,444,4,"getState"],[465,14,444,12],[466,6,445,4,"emitter"],[466,13,445,11],[467,6,446,4,"router"],[467,12,446,10],[468,6,447,4,"stateRef"],[469,4,448,2],[469,5,448,3],[469,6,448,4],[470,4,449,2],[470,8,449,2,"useFocusedListenersChildrenAdapter"],[470,45,449,36],[470,46,449,36,"useFocusedListenersChildrenAdapter"],[470,80,449,36],[470,82,449,37],[471,6,450,4,"navigation"],[471,16,450,14],[472,6,451,4,"focusedListeners"],[472,22,451,20],[472,24,451,22,"childListeners"],[472,38,451,36],[472,39,451,37,"focus"],[473,4,452,2],[473,5,452,3],[473,6,452,4],[474,4,453,2],[474,8,453,2,"useOnGetState"],[474,24,453,15],[474,25,453,15,"useOnGetState"],[474,38,453,15],[474,40,453,16],[475,6,454,4,"getState"],[475,14,454,12],[476,6,455,4,"getStateListeners"],[476,23,455,21],[476,25,455,23,"keyedListeners"],[476,39,455,37],[476,40,455,38,"getState"],[477,4,456,2],[477,5,456,3],[477,6,456,4],[478,4,457,2],[478,10,457,8],[479,6,458,4,"describe"],[479,14,458,12],[480,6,459,4,"descriptors"],[481,4,460,2],[481,5,460,3],[481,8,460,6],[481,12,460,6,"useDescriptors"],[481,29,460,20],[481,30,460,20,"useDescriptors"],[481,44,460,20],[481,46,460,21],[482,6,461,4,"state"],[482,11,461,9],[483,6,462,4,"screens"],[483,13,462,11],[484,6,463,4,"navigation"],[484,16,463,14],[485,6,464,4,"screenOptions"],[485,19,464,17],[486,6,465,4,"screenLayout"],[486,18,465,16],[487,6,466,4,"onAction"],[487,14,466,12],[488,6,467,4,"getState"],[488,14,467,12],[489,6,468,4,"setState"],[489,14,468,12],[490,6,469,4,"onRouteFocus"],[490,18,469,16],[491,6,470,4,"addListener"],[491,17,470,15],[492,6,471,4,"addKeyedListener"],[492,22,471,20],[493,6,472,4,"router"],[493,12,472,10],[494,6,473,4],[495,6,474,4,"emitter"],[496,4,475,2],[496,5,475,3],[496,6,475,4],[497,4,476,2],[497,8,476,2,"useCurrentRender"],[497,27,476,18],[497,28,476,18,"useCurrentRender"],[497,44,476,18],[497,46,476,19],[498,6,477,4,"state"],[498,11,477,9],[499,6,478,4,"navigation"],[499,16,478,14],[500,6,479,4,"descriptors"],[501,4,480,2],[501,5,480,3],[501,6,480,4],[502,4,481,2],[502,10,481,8,"NavigationContent"],[502,27,481,25],[502,30,481,28],[502,34,481,28,"useComponent"],[502,49,481,40],[502,50,481,40,"useComponent"],[502,62,481,40],[502,64,481,41,"children"],[502,72,481,49],[502,76,481,53],[503,6,482,4],[503,12,482,10,"element"],[503,19,482,17],[503,22,482,20,"layout"],[503,28,482,26],[503,32,482,30],[503,36,482,34],[503,39,482,37,"layout"],[503,45,482,43],[503,46,482,44],[504,8,483,6,"state"],[504,13,483,11],[505,8,484,6,"descriptors"],[505,19,484,17],[506,8,485,6,"navigation"],[506,18,485,16],[507,8,486,6,"children"],[508,6,487,4],[508,7,487,5],[508,8,487,6],[508,11,487,9,"children"],[508,19,487,17],[509,6,488,4],[509,13,488,11],[509,26,488,24],[509,30,488,24,"_jsx"],[509,46,488,28],[509,47,488,28,"jsx"],[509,50,488,28],[509,52,488,29,"NavigationHelpersContext"],[509,79,488,53],[509,80,488,53,"NavigationHelpersContext"],[509,104,488,53],[509,105,488,54,"Provider"],[509,113,488,62],[509,115,488,64],[510,8,489,6,"value"],[510,13,489,11],[510,15,489,13,"navigation"],[510,25,489,23],[511,8,490,6,"children"],[511,16,490,14],[511,18,490,16],[511,31,490,29],[511,35,490,29,"_jsx"],[511,51,490,33],[511,52,490,33,"jsx"],[511,55,490,33],[511,57,490,34,"NavigationStateListenerProvider"],[511,78,490,65],[511,79,490,65,"NavigationStateListenerProvider"],[511,110,490,65],[511,112,490,67],[512,10,491,8,"state"],[512,15,491,13],[512,17,491,15,"state"],[512,22,491,20],[513,10,492,8,"children"],[513,18,492,16],[513,20,492,18],[513,33,492,31],[513,37,492,31,"_jsx"],[513,53,492,35],[513,54,492,35,"jsx"],[513,57,492,35],[513,59,492,36,"PreventRemoveProvider"],[513,83,492,57],[513,84,492,57,"PreventRemoveProvider"],[513,105,492,57],[513,107,492,59],[514,12,493,10,"children"],[514,20,493,18],[514,22,493,20,"element"],[515,10,494,8],[515,11,494,9],[516,8,495,6],[516,9,495,7],[517,6,496,4],[517,7,496,5],[517,8,496,6],[518,4,497,2],[518,5,497,3],[518,6,497,4],[519,4,498,2],[519,11,498,9],[520,6,499,4,"state"],[520,11,499,9],[521,6,500,4,"navigation"],[521,16,500,14],[522,6,501,4,"describe"],[522,14,501,12],[523,6,502,4,"descriptors"],[523,17,502,15],[524,6,503,4,"NavigationContent"],[525,4,504,2],[525,5,504,3],[526,2,505,0],[527,0,505,1],[527,3]],"functionMap":{"names":["<global>","isScreen","isGroup","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useClientLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;iBCsC;CDE;gBEC;CFE;mBGC,iEH;oCIO;0DCC;GDsC;oBEE;KFuC;CJG;OOS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa+B;GbK;kBWM;WGW;KHM;GXE;wBeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBgB;CPQ"},"hasCjsExports":false},"type":"js/module"}]}