{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-is","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"nMRUu046PLZz3vjxw7Fgw3UH3xY=","exportNames":["*"],"imports":1}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"099N+Zv4K9pUFNBPk2MtNNMStD8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactIs = require(_dependencyMap[1], \"react-is\");\n  var _useRouteJs = require(_dependencyMap[2], \"./useRoute.js\");\n  var _reactJsxRuntime = require(_dependencyMap[3], \"react/jsx-runtime\");\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n\n  /**\n   * Infer the param list from the static navigation config.\n   */\n\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRouteJs.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n          screen,\n          if: _if,\n          ...rest\n        } = item;\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _reactJsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Screen, {\n          name: name,\n          ...props,\n          children: () => element\n        }, name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n      screens,\n      groups,\n      ...rest\n    } = config;\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, {\n          if: useIf,\n          ...group\n        }]) => {\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Group, {\n              navigationKey: key,\n              ...group,\n              children: children\n            }, key);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(Navigator, {\n        ...rest,\n        children: children\n      });\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":266,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,94,0,"exports"],[16,9,94,0],[16,10,94,0,"createComponentForStaticNavigation"],[16,44,94,0],[16,47,94,0,"createComponentForStaticNavigation"],[16,81,94,0],[17,2,168,0,"exports"],[17,9,168,0],[17,10,168,0,"createPathConfigForStaticNavigation"],[17,45,168,0],[17,48,168,0,"createPathConfigForStaticNavigation"],[17,83,168,0],[18,2,3,0],[18,6,3,0,"_react"],[18,12,3,0],[18,15,3,0,"require"],[18,22,3,0],[18,23,3,0,"_dependencyMap"],[18,37,3,0],[19,2,3,0],[19,6,3,0,"React"],[19,11,3,0],[19,14,3,0,"_interopNamespace"],[19,31,3,0],[19,32,3,0,"_react"],[19,38,3,0],[20,2,4,0],[20,6,4,0,"_reactIs"],[20,14,4,0],[20,17,4,0,"require"],[20,24,4,0],[20,25,4,0,"_dependencyMap"],[20,39,4,0],[21,2,5,0],[21,6,5,0,"_useRouteJs"],[21,17,5,0],[21,20,5,0,"require"],[21,27,5,0],[21,28,5,0,"_dependencyMap"],[21,42,5,0],[22,2,30,0],[22,6,30,0,"_reactJsxRuntime"],[22,22,30,0],[22,25,30,0,"require"],[22,32,30,0],[22,33,30,0,"_dependencyMap"],[22,47,30,0],[23,2,7,0],[24,0,8,0],[25,0,9,0],[26,0,10,0],[28,2,12,0],[29,0,13,0],[30,0,14,0],[31,0,15,0],[33,2,17,0],[34,0,18,0],[35,0,19,0],[36,0,20,0],[38,2,22,0],[39,0,23,0],[40,0,24,0],[41,0,25,0],[43,2,27,0],[44,0,28,0],[45,0,29,0],[47,2,31,0],[47,8,31,6,"MemoizedScreen"],[47,22,31,20],[47,25,31,23],[47,38,31,36,"React"],[47,43,31,41],[47,44,31,42,"memo"],[47,48,31,46],[47,49,31,47],[47,50,31,48],[48,4,32,2,"component"],[49,2,33,0],[49,3,33,1],[49,8,33,6],[50,4,34,2],[50,10,34,8,"route"],[50,15,34,13],[50,18,34,16],[50,22,34,16,"useRoute"],[50,33,34,24],[50,34,34,24,"useRoute"],[50,42,34,24],[50,44,34,25],[50,45,34,26],[51,4,35,2],[51,10,35,8,"children"],[51,18,35,16],[51,21,35,19],[51,34,35,32,"React"],[51,39,35,37],[51,40,35,38,"createElement"],[51,53,35,51],[51,54,35,52,"component"],[51,63,35,61],[51,65,35,63],[52,6,36,4,"route"],[53,4,37,2],[53,5,37,3],[53,6,37,4],[54,4,38,2],[54,11,38,9,"children"],[54,19,38,17],[55,2,39,0],[55,3,39,1],[55,4,39,2],[56,2,40,0,"MemoizedScreen"],[56,16,40,14],[56,17,40,15,"displayName"],[56,28,40,26],[56,31,40,29],[56,45,40,43],[57,2,41,0],[57,8,41,6,"getItemsFromScreens"],[57,27,41,25],[57,30,41,28,"getItemsFromScreens"],[57,31,41,29,"Screen"],[57,37,41,35],[57,39,41,37,"screens"],[57,46,41,44],[57,51,41,49],[58,4,42,2],[58,11,42,9,"Object"],[58,17,42,15],[58,18,42,16,"entries"],[58,25,42,23],[58,26,42,24,"screens"],[58,33,42,31],[58,34,42,32],[58,35,42,33,"map"],[58,38,42,36],[58,39,42,37],[58,40,42,38],[58,41,42,39,"name"],[58,45,42,43],[58,47,42,45,"item"],[58,51,42,49],[58,52,42,50],[58,57,42,55],[59,6,43,4],[59,10,43,8,"component"],[59,19,43,17],[60,6,44,4],[60,10,44,8,"props"],[60,15,44,13],[60,18,44,16],[60,19,44,17],[60,20,44,18],[61,6,45,4],[61,10,45,8,"useIf"],[61,15,45,13],[62,6,46,4],[62,10,46,8,"isNavigator"],[62,21,46,19],[62,24,46,22],[62,29,46,27],[63,6,47,4],[63,10,47,8],[63,18,47,16],[63,22,47,20,"item"],[63,26,47,24],[63,28,47,26],[64,8,48,6],[64,14,48,12],[65,10,49,8,"screen"],[65,16,49,14],[66,10,50,8,"if"],[66,12,50,10],[66,14,50,12,"_if"],[66,17,50,15],[67,10,51,8],[67,13,51,11,"rest"],[68,8,52,6],[68,9,52,7],[68,12,52,10,"item"],[68,16,52,14],[69,8,53,6,"useIf"],[69,13,53,11],[69,16,53,14,"_if"],[69,19,53,17],[70,8,54,6,"props"],[70,13,54,11],[70,16,54,14,"rest"],[70,20,54,18],[71,8,55,6],[71,12,55,10],[71,16,55,10,"isValidElementType"],[71,24,55,28],[71,25,55,28,"isValidElementType"],[71,43,55,28],[71,45,55,29,"screen"],[71,51,55,35],[71,52,55,36],[71,54,55,38],[72,10,56,8,"component"],[72,19,56,17],[72,22,56,20,"screen"],[72,28,56,26],[73,8,57,6],[73,9,57,7],[73,15,57,13],[73,19,57,17],[73,27,57,25],[73,31,57,29,"screen"],[73,37,57,35],[73,39,57,37],[74,10,58,8,"isNavigator"],[74,21,58,19],[74,24,58,22],[74,28,58,26],[75,10,59,8,"component"],[75,19,59,17],[75,22,59,20,"createComponentForStaticNavigation"],[75,56,59,54],[75,57,59,55,"screen"],[75,63,59,61],[75,65,59,63],[75,68,59,66,"name"],[75,72,59,70],[75,83,59,81],[75,84,59,82],[76,8,60,6],[77,6,61,4],[77,7,61,5],[77,13,61,11],[77,17,61,15],[77,21,61,15,"isValidElementType"],[77,29,61,33],[77,30,61,33,"isValidElementType"],[77,48,61,33],[77,50,61,34,"item"],[77,54,61,38],[77,55,61,39],[77,57,61,41],[78,8,62,6,"component"],[78,17,62,15],[78,20,62,18,"item"],[78,24,62,22],[79,6,63,4],[79,7,63,5],[79,13,63,11],[79,17,63,15],[79,25,63,23],[79,29,63,27,"item"],[79,33,63,31],[79,35,63,33],[80,8,64,6,"isNavigator"],[80,19,64,17],[80,22,64,20],[80,26,64,24],[81,8,65,6,"component"],[81,17,65,15],[81,20,65,18,"createComponentForStaticNavigation"],[81,54,65,52],[81,55,65,53,"item"],[81,59,65,57],[81,61,65,59],[81,64,65,62,"name"],[81,68,65,66],[81,79,65,77],[81,80,65,78],[82,6,66,4],[83,6,67,4],[83,10,67,8,"component"],[83,19,67,17],[83,23,67,21],[83,27,67,25],[83,29,67,27],[84,8,68,6],[84,14,68,12],[84,18,68,16,"Error"],[84,23,68,21],[84,24,68,22],[84,77,68,75,"name"],[84,81,68,79],[84,262,68,260],[84,263,68,261],[85,6,69,4],[86,6,70,4],[86,12,70,10,"element"],[86,19,70,17],[86,22,70,20,"isNavigator"],[86,33,70,31],[86,37,70,35],[86,50,70,48,"React"],[86,55,70,53],[86,56,70,54,"createElement"],[86,69,70,67],[86,70,70,68,"component"],[86,79,70,77],[86,81,70,79],[86,82,70,80],[86,83,70,81],[86,84,70,82],[86,88,70,86],[86,101,70,99],[86,105,70,99,"_jsx"],[86,121,70,103],[86,122,70,103,"jsx"],[86,125,70,103],[86,127,70,104,"MemoizedScreen"],[86,141,70,118],[86,143,70,120],[87,8,71,6,"component"],[87,17,71,15],[87,19,71,17,"component"],[88,6,72,4],[88,7,72,5],[88,8,72,6],[89,6,73,4],[89,13,73,11],[89,19,73,17],[90,8,74,6],[90,14,74,12,"shouldRender"],[90,26,74,24],[90,29,74,27,"useIf"],[90,34,74,32],[90,38,74,36],[90,42,74,40],[90,46,74,44,"useIf"],[90,51,74,49],[90,52,74,50],[90,53,74,51],[91,8,75,6],[91,12,75,10],[91,13,75,11,"shouldRender"],[91,25,75,23],[91,27,75,25],[92,10,76,8],[92,17,76,15],[92,21,76,19],[93,8,77,6],[94,8,78,6],[94,15,78,13],[94,28,78,26],[94,32,78,26,"_jsx"],[94,48,78,30],[94,49,78,30,"jsx"],[94,52,78,30],[94,54,78,31,"Screen"],[94,60,78,37],[94,62,78,39],[95,10,79,8,"name"],[95,14,79,12],[95,16,79,14,"name"],[95,20,79,18],[96,10,80,8],[96,13,80,11,"props"],[96,18,80,16],[97,10,81,8,"children"],[97,18,81,16],[97,20,81,18,"children"],[97,21,81,18],[97,26,81,24,"element"],[98,8,82,6],[98,9,82,7],[98,11,82,9,"name"],[98,15,82,13],[98,16,82,14],[99,6,83,4],[99,7,83,5],[100,4,84,2],[100,5,84,3],[100,6,84,4],[101,2,85,0],[101,3,85,1],[103,2,87,0],[104,0,88,0],[105,0,89,0],[106,0,90,0],[107,0,91,0],[108,0,92,0],[109,0,93,0],[110,2,94,7],[110,11,94,16,"createComponentForStaticNavigation"],[110,45,94,50,"createComponentForStaticNavigation"],[110,46,94,51,"tree"],[110,50,94,55],[110,52,94,57,"displayName"],[110,63,94,68],[110,65,94,70],[111,4,95,2],[111,10,95,8],[112,6,96,4,"Navigator"],[112,15,96,13],[113,6,97,4,"Group"],[113,11,97,9],[114,6,98,4,"Screen"],[114,12,98,10],[115,6,99,4,"config"],[116,4,100,2],[116,5,100,3],[116,8,100,6,"tree"],[116,12,100,10],[117,4,101,2],[117,10,101,8],[118,6,102,4,"screens"],[118,13,102,11],[119,6,103,4,"groups"],[119,12,103,10],[120,6,104,4],[120,9,104,7,"rest"],[121,4,105,2],[121,5,105,3],[121,8,105,6,"config"],[121,14,105,12],[122,4,106,2],[122,8,106,6,"screens"],[122,15,106,13],[122,19,106,17],[122,23,106,21],[122,27,106,25,"groups"],[122,33,106,31],[122,37,106,35],[122,41,106,39],[122,43,106,41],[123,6,107,4],[123,12,107,10],[123,16,107,14,"Error"],[123,21,107,19],[123,22,107,20],[123,153,107,151],[123,154,107,152],[124,4,108,2],[125,4,109,2],[125,10,109,8,"items"],[125,15,109,13],[125,18,109,16],[125,20,109,18],[127,4,111,2],[128,4,112,2],[129,4,113,2],[129,9,113,7],[129,15,113,13,"key"],[129,18,113,16],[129,22,113,20,"config"],[129,28,113,26],[129,30,113,28],[130,6,114,4],[130,10,114,8,"key"],[130,13,114,11],[130,18,114,16],[130,27,114,25],[130,31,114,29,"screens"],[130,38,114,36],[130,40,114,38],[131,8,115,6,"items"],[131,13,115,11],[131,14,115,12,"push"],[131,18,115,16],[131,19,115,17],[131,22,115,20,"getItemsFromScreens"],[131,41,115,39],[131,42,115,40,"Screen"],[131,48,115,46],[131,50,115,48,"screens"],[131,57,115,55],[131,58,115,56],[131,59,115,57],[132,6,116,4],[133,6,117,4],[133,10,117,8,"key"],[133,13,117,11],[133,18,117,16],[133,26,117,24],[133,30,117,28,"groups"],[133,36,117,34],[133,38,117,36],[134,8,118,6,"items"],[134,13,118,11],[134,14,118,12,"push"],[134,18,118,16],[134,19,118,17],[134,22,118,20,"Object"],[134,28,118,26],[134,29,118,27,"entries"],[134,36,118,34],[134,37,118,35,"groups"],[134,43,118,41],[134,44,118,42],[134,45,118,43,"map"],[134,48,118,46],[134,49,118,47],[134,50,118,48],[134,51,118,49,"key"],[134,54,118,52],[134,56,118,54],[135,10,119,8,"if"],[135,12,119,10],[135,14,119,12,"useIf"],[135,19,119,17],[136,10,120,8],[136,13,120,11,"group"],[137,8,121,6],[137,9,121,7],[137,10,121,8],[137,15,121,13],[138,10,122,8],[138,16,122,14,"groupItems"],[138,26,122,24],[138,29,122,27,"getItemsFromScreens"],[138,48,122,46],[138,49,122,47,"Screen"],[138,55,122,53],[138,57,122,55,"group"],[138,62,122,60],[138,63,122,61,"screens"],[138,70,122,68],[138,71,122,69],[139,10,123,8],[139,17,123,15],[139,23,123,21],[140,12,124,10],[141,12,125,10],[141,18,125,16,"children"],[141,26,125,24],[141,29,125,27,"groupItems"],[141,39,125,37],[141,40,125,38,"map"],[141,43,125,41],[141,44,125,42,"item"],[141,48,125,46],[141,52,125,50,"item"],[141,56,125,54],[141,57,125,55],[141,58,125,56],[141,59,125,57],[142,12,126,10],[142,18,126,16,"shouldRender"],[142,30,126,28],[142,33,126,31,"useIf"],[142,38,126,36],[142,42,126,40],[142,46,126,44],[142,50,126,48,"useIf"],[142,55,126,53],[142,56,126,54],[142,57,126,55],[143,12,127,10],[143,16,127,14],[143,17,127,15,"shouldRender"],[143,29,127,27],[143,31,127,29],[144,14,128,12],[144,21,128,19],[144,25,128,23],[145,12,129,10],[146,12,130,10],[146,19,130,17],[146,32,130,30],[146,36,130,30,"_jsx"],[146,52,130,34],[146,53,130,34,"jsx"],[146,56,130,34],[146,58,130,35,"Group"],[146,63,130,40],[146,65,130,42],[147,14,131,12,"navigationKey"],[147,27,131,25],[147,29,131,27,"key"],[147,32,131,30],[148,14,132,12],[148,17,132,15,"group"],[148,22,132,20],[149,14,133,12,"children"],[149,22,133,20],[149,24,133,22,"children"],[150,12,134,10],[150,13,134,11],[150,15,134,13,"key"],[150,18,134,16],[150,19,134,17],[151,10,135,8],[151,11,135,9],[152,8,136,6],[152,9,136,7],[152,10,136,8],[152,11,136,9],[153,6,137,4],[154,4,138,2],[155,4,139,2],[155,10,139,8,"NavigatorComponent"],[155,28,139,26],[155,31,139,29,"NavigatorComponent"],[155,32,139,29],[155,37,139,35],[156,6,140,4],[156,12,140,10,"children"],[156,20,140,18],[156,23,140,21,"items"],[156,28,140,26],[156,29,140,27,"map"],[156,32,140,30],[156,33,140,31,"item"],[156,37,140,35],[156,41,140,39,"item"],[156,45,140,43],[156,46,140,44],[156,47,140,45],[156,48,140,46],[157,6,141,4],[157,13,141,11],[157,26,141,24],[157,30,141,24,"_jsx"],[157,46,141,28],[157,47,141,28,"jsx"],[157,50,141,28],[157,52,141,29,"Navigator"],[157,61,141,38],[157,63,141,40],[158,8,142,6],[158,11,142,9,"rest"],[158,15,142,13],[159,8,143,6,"children"],[159,16,143,14],[159,18,143,16,"children"],[160,6,144,4],[160,7,144,5],[160,8,144,6],[161,4,145,2],[161,5,145,3],[162,4,146,2,"NavigatorComponent"],[162,22,146,20],[162,23,146,21,"displayName"],[162,34,146,32],[162,37,146,35,"displayName"],[162,48,146,46],[163,4,147,2],[163,11,147,9,"NavigatorComponent"],[163,29,147,27],[164,2,148,0],[165,2,149,0],[166,0,150,0],[167,0,151,0],[168,0,152,0],[169,0,153,0],[170,0,154,0],[171,0,155,0],[172,0,156,0],[173,0,157,0],[174,0,158,0],[175,0,159,0],[176,0,160,0],[177,0,161,0],[178,0,162,0],[179,0,163,0],[180,0,164,0],[181,0,165,0],[182,0,166,0],[183,0,167,0],[184,2,168,7],[184,11,168,16,"createPathConfigForStaticNavigation"],[184,46,168,51,"createPathConfigForStaticNavigation"],[184,47,168,52,"tree"],[184,51,168,56],[184,53,168,58,"options"],[184,60,168,65],[184,62,168,67,"auto"],[184,66,168,71],[184,68,168,73],[185,4,169,2],[185,8,169,6,"initialScreenConfig"],[185,27,169,25],[186,4,170,2],[186,10,170,8,"createPathConfigForTree"],[186,33,170,31],[186,36,170,34,"createPathConfigForTree"],[186,37,170,35,"t"],[186,38,170,36],[186,40,170,38,"o"],[186,41,170,39],[186,43,170,41,"skipInitialDetection"],[186,63,170,61],[186,68,170,66],[187,6,171,4],[187,12,171,10,"createPathConfigForScreens"],[187,38,171,36],[187,41,171,39,"createPathConfigForScreens"],[187,42,171,40,"screens"],[187,49,171,47],[187,51,171,49,"initialRouteName"],[187,67,171,65],[187,72,171,70],[188,8,172,6],[188,15,172,13,"Object"],[188,21,172,19],[188,22,172,20,"fromEntries"],[188,33,172,31],[188,34,172,32,"Object"],[188,40,172,38],[188,41,172,39,"entries"],[188,48,172,46],[188,49,172,47,"screens"],[188,56,172,54],[189,8,173,6],[190,8,174,6],[191,8,174,6],[191,9,175,7,"sort"],[191,13,175,11],[191,14,175,12],[191,15,175,13],[191,16,175,14,"a"],[191,17,175,15],[191,18,175,16],[191,20,175,18],[191,21,175,19,"b"],[191,22,175,20],[191,23,175,21],[191,28,175,26],[192,10,176,8],[192,14,176,12,"a"],[192,15,176,13],[192,20,176,18,"initialRouteName"],[192,36,176,34],[192,38,176,36],[193,12,177,10],[193,19,177,17],[193,20,177,18],[193,21,177,19],[194,10,178,8],[195,10,179,8],[195,14,179,12,"b"],[195,15,179,13],[195,20,179,18,"initialRouteName"],[195,36,179,34],[195,38,179,36],[196,12,180,10],[196,19,180,17],[196,20,180,18],[197,10,181,8],[198,10,182,8],[198,17,182,15],[198,18,182,16],[199,8,183,6],[199,9,183,7],[199,10,183,8],[199,11,183,9,"map"],[199,14,183,12],[199,15,183,13],[199,16,183,14],[199,17,183,15,"key"],[199,20,183,18],[199,22,183,20,"item"],[199,26,183,24],[199,27,183,25],[199,32,183,30],[200,10,184,8],[200,16,184,14,"screenConfig"],[200,28,184,26],[200,31,184,29],[200,32,184,30],[200,33,184,31],[201,10,185,8],[201,14,185,12],[201,23,185,21],[201,27,185,25,"item"],[201,31,185,29],[201,33,185,31],[202,12,186,10],[202,16,186,14],[202,23,186,21,"item"],[202,27,186,25],[202,28,186,26,"linking"],[202,35,186,33],[202,40,186,38],[202,48,186,46],[202,50,186,48],[203,14,187,12,"screenConfig"],[203,26,187,24],[203,27,187,25,"path"],[203,31,187,29],[203,34,187,32,"item"],[203,38,187,36],[203,39,187,37,"linking"],[203,46,187,44],[204,12,188,10],[204,13,188,11],[204,19,188,17],[205,14,189,12,"Object"],[205,20,189,18],[205,21,189,19,"assign"],[205,27,189,25],[205,28,189,26,"screenConfig"],[205,40,189,38],[205,42,189,40,"item"],[205,46,189,44],[205,47,189,45,"linking"],[205,54,189,52],[205,55,189,53],[206,12,190,10],[207,12,191,10],[207,16,191,14],[207,23,191,21,"screenConfig"],[207,35,191,33],[207,36,191,34,"path"],[207,40,191,38],[207,45,191,43],[207,53,191,51],[207,55,191,53],[208,14,192,12,"screenConfig"],[208,26,192,24],[208,27,192,25,"path"],[208,31,192,29],[208,34,192,32,"screenConfig"],[208,46,192,44],[208,47,192,45,"path"],[208,51,192,49],[208,52,192,50,"replace"],[208,59,192,57],[208,60,192,58],[208,65,192,63],[208,67,192,65],[208,69,192,67],[208,70,192,68],[208,71,192,69],[209,14,192,69],[209,15,193,13,"replace"],[209,22,193,20],[209,23,193,21],[209,28,193,26],[209,30,193,28],[209,32,193,30],[209,33,193,31],[209,34,193,32],[209,35,193,33],[210,12,194,10],[211,10,195,8],[212,10,196,8],[212,14,196,12,"screens"],[212,21,196,19],[213,10,197,8],[213,16,197,14,"skipInitialDetectionInChild"],[213,43,197,41],[213,46,197,44,"skipInitialDetection"],[213,66,197,64],[213,70,197,68,"screenConfig"],[213,82,197,80],[213,83,197,81,"path"],[213,87,197,85],[213,91,197,89],[213,95,197,93],[213,99,197,97,"screenConfig"],[213,111,197,109],[213,112,197,110,"path"],[213,116,197,114],[213,121,197,119],[213,123,197,121],[214,10,198,8],[214,14,198,12],[214,22,198,20],[214,26,198,24,"item"],[214,30,198,28],[214,32,198,30],[215,12,199,10,"screens"],[215,19,199,17],[215,22,199,20,"createPathConfigForTree"],[215,45,199,43],[215,46,199,44,"item"],[215,50,199,48],[215,52,199,50,"undefined"],[215,61,199,59],[215,63,199,61,"skipInitialDetectionInChild"],[215,90,199,88],[215,91,199,89],[216,10,200,8],[216,11,200,9],[216,17,200,15],[216,21,200,19],[216,29,200,27],[216,33,200,31,"item"],[216,37,200,35],[216,41,200,39],[216,49,200,47],[216,53,200,51,"item"],[216,57,200,55],[216,58,200,56,"screen"],[216,64,200,62],[216,69,200,67,"item"],[216,73,200,71],[216,74,200,72,"screen"],[216,80,200,78],[216,81,200,79,"config"],[216,87,200,85],[216,88,200,86,"screens"],[216,95,200,93],[216,99,200,97,"item"],[216,103,200,101],[216,104,200,102,"screen"],[216,110,200,108],[216,111,200,109,"config"],[216,117,200,115],[216,118,200,116,"groups"],[216,124,200,122],[216,125,200,123],[216,127,200,125],[217,12,201,10,"screens"],[217,19,201,17],[217,22,201,20,"createPathConfigForTree"],[217,45,201,43],[217,46,201,44,"item"],[217,50,201,48],[217,51,201,49,"screen"],[217,57,201,55],[217,59,201,57,"undefined"],[217,68,201,66],[217,70,201,68,"skipInitialDetectionInChild"],[217,97,201,95],[217,98,201,96],[218,10,202,8],[219,10,203,8],[219,14,203,12,"screens"],[219,21,203,19],[219,23,203,21],[220,12,204,10,"screenConfig"],[220,24,204,22],[220,25,204,23,"screens"],[220,32,204,30],[220,35,204,33,"screens"],[220,42,204,40],[221,10,205,8],[222,10,206,8],[222,14,206,12,"auto"],[222,18,206,16],[222,22,206,20],[222,23,206,21,"screenConfig"],[222,35,206,33],[222,36,206,34,"screens"],[222,43,206,41],[223,10,207,8],[224,10,208,8],[224,12,208,10],[224,21,208,19],[224,25,208,23,"item"],[224,29,208,27],[224,33,208,31,"item"],[224,37,208,35],[224,38,208,36,"linking"],[224,45,208,43],[224,49,208,47],[224,53,208,51],[224,54,208,52],[224,56,208,54],[225,12,209,10],[225,16,209,14,"screenConfig"],[225,28,209,26],[225,29,209,27,"path"],[225,33,209,31],[225,37,209,35],[225,41,209,39],[225,43,209,41],[226,14,210,12],[226,18,210,16],[226,19,210,17,"skipInitialDetection"],[226,39,210,37],[226,43,210,41,"screenConfig"],[226,55,210,53],[226,56,210,54,"path"],[226,60,210,58],[226,65,210,63],[226,67,210,65],[226,69,210,67],[227,16,211,14],[228,16,212,14],[229,16,213,14,"initialScreenConfig"],[229,35,213,33],[229,38,213,36,"undefined"],[229,47,213,45],[230,14,214,12],[231,12,215,10],[231,13,215,11],[231,19,215,17],[232,14,216,12],[232,18,216,16],[232,19,216,17,"skipInitialDetection"],[232,39,216,37],[232,43,216,41,"initialScreenConfig"],[232,62,216,60],[232,66,216,64],[232,70,216,68],[232,72,216,70],[233,16,217,14,"initialScreenConfig"],[233,35,217,33],[233,38,217,36,"screenConfig"],[233,50,217,48],[234,14,218,12],[235,14,219,12,"screenConfig"],[235,26,219,24],[235,27,219,25,"path"],[235,31,219,29],[235,34,219,32,"key"],[235,37,219,35],[235,38,219,36,"replace"],[235,45,219,43],[235,46,219,44],[235,57,219,55],[235,59,219,57],[235,64,219,62],[235,65,219,63],[235,66,219,64,"replace"],[235,73,219,71],[235,74,219,72],[235,78,219,76],[235,80,219,78],[235,82,219,80],[235,83,219,81],[235,84,219,82,"toLowerCase"],[235,95,219,93],[235,96,219,94],[235,97,219,95],[236,12,220,10],[237,10,221,8],[238,10,222,8],[238,17,222,15],[238,18,222,16,"key"],[238,21,222,19],[238,23,222,21,"screenConfig"],[238,35,222,33],[238,36,222,34],[239,8,223,6],[239,9,223,7],[239,10,223,8],[239,11,223,9,"filter"],[239,17,223,15],[239,18,223,16],[239,19,223,17],[239,22,223,20,"screen"],[239,28,223,26],[239,29,223,27],[239,34,223,32,"Object"],[239,40,223,38],[239,41,223,39,"keys"],[239,45,223,43],[239,46,223,44,"screen"],[239,52,223,50],[239,53,223,51],[239,54,223,52,"length"],[239,60,223,58],[239,63,223,61],[239,64,223,62],[239,65,223,63],[239,66,223,64],[240,6,224,4],[240,7,224,5],[241,6,225,4],[241,12,225,10,"screens"],[241,19,225,17],[241,22,225,20],[241,23,225,21],[241,24,225,22],[243,6,227,4],[244,6,228,4],[245,6,229,4],[245,11,229,9],[245,17,229,15,"key"],[245,20,229,18],[245,24,229,22,"t"],[245,25,229,23],[245,26,229,24,"config"],[245,32,229,30],[245,34,229,32],[246,8,230,6],[246,12,230,10,"key"],[246,15,230,13],[246,20,230,18],[246,29,230,27],[246,33,230,31,"t"],[246,34,230,32],[246,35,230,33,"config"],[246,41,230,39],[246,42,230,40,"screens"],[246,49,230,47],[246,51,230,49],[247,10,231,8,"Object"],[247,16,231,14],[247,17,231,15,"assign"],[247,23,231,21],[247,24,231,22,"screens"],[247,31,231,29],[247,33,231,31,"createPathConfigForScreens"],[247,59,231,57],[247,60,231,58,"t"],[247,61,231,59],[247,62,231,60,"config"],[247,68,231,66],[247,69,231,67,"screens"],[247,76,231,74],[247,78,231,76,"o"],[247,79,231,77],[247,81,231,79,"initialRouteName"],[247,97,231,95],[247,101,231,99,"t"],[247,102,231,100],[247,103,231,101,"config"],[247,109,231,107],[247,110,231,108,"initialRouteName"],[247,126,231,124],[247,127,231,125],[247,128,231,126],[248,8,232,6],[249,8,233,6],[249,12,233,10,"key"],[249,15,233,13],[249,20,233,18],[249,28,233,26],[249,32,233,30,"t"],[249,33,233,31],[249,34,233,32,"config"],[249,40,233,38],[249,41,233,39,"groups"],[249,47,233,45],[249,49,233,47],[250,10,234,8,"Object"],[250,16,234,14],[250,17,234,15,"entries"],[250,24,234,22],[250,25,234,23,"t"],[250,26,234,24],[250,27,234,25,"config"],[250,33,234,31],[250,34,234,32,"groups"],[250,40,234,38],[250,41,234,39],[250,42,234,40,"forEach"],[250,49,234,47],[250,50,234,48],[250,51,234,49],[250,54,234,52,"group"],[250,59,234,57],[250,60,234,58],[250,65,234,63],[251,12,235,10,"Object"],[251,18,235,16],[251,19,235,17,"assign"],[251,25,235,23],[251,26,235,24,"screens"],[251,33,235,31],[251,35,235,33,"createPathConfigForScreens"],[251,61,235,59],[251,62,235,60,"group"],[251,67,235,65],[251,68,235,66,"screens"],[251,75,235,73],[251,77,235,75,"o"],[251,78,235,76],[251,80,235,78,"initialRouteName"],[251,96,235,94],[251,100,235,98,"t"],[251,101,235,99],[251,102,235,100,"config"],[251,108,235,106],[251,109,235,107,"initialRouteName"],[251,125,235,123],[251,126,235,124],[251,127,235,125],[252,10,236,8],[252,11,236,9],[252,12,236,10],[253,8,237,6],[254,6,238,4],[255,6,239,4],[255,10,239,8,"Object"],[255,16,239,14],[255,17,239,15,"keys"],[255,21,239,19],[255,22,239,20,"screens"],[255,29,239,27],[255,30,239,28],[255,31,239,29,"length"],[255,37,239,35],[255,42,239,40],[255,43,239,41],[255,45,239,43],[256,8,240,6],[256,15,240,13,"undefined"],[256,24,240,22],[257,6,241,4],[258,6,242,4],[258,13,242,11,"screens"],[258,20,242,18],[259,4,243,2],[259,5,243,3],[260,4,244,2],[260,10,244,8,"screens"],[260,17,244,15],[260,20,244,18,"createPathConfigForTree"],[260,43,244,41],[260,44,244,42,"tree"],[260,48,244,46],[260,50,244,48,"options"],[260,57,244,55],[260,59,244,57],[260,64,244,62],[260,65,244,63],[261,4,245,2],[261,8,245,6,"auto"],[261,12,245,10],[261,16,245,14,"initialScreenConfig"],[261,35,245,33],[261,37,245,35],[262,6,246,4,"initialScreenConfig"],[262,25,246,23],[262,26,246,24,"path"],[262,30,246,28],[262,33,246,31],[262,35,246,33],[263,4,247,2],[264,4,248,2],[264,11,248,9,"screens"],[264,18,248,16],[265,2,249,0],[266,0,249,1],[266,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC8B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CVM"},"hasCjsExports":false},"type":"js/module"}]}