{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":196,"index":211}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":212},"end":{"line":4,"column":31,"index":243}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./LinkingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":244},"end":{"line":5,"column":53,"index":297}}],"key":"r/0Yvi+HouDAqn4vN4m4I6AMfEI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useLinkBuilder = useLinkBuilder;\n  var _reactNavigationCore = require(_dependencyMap[0], \"@react-navigation/core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _LinkingContextJs = require(_dependencyMap[2], \"./LinkingContext.js\");\n  /**\n   * Helpers to build href or action based on the linking options.\n   *\n   * @returns `buildHref` to build an `href` for screen and `buildAction` to build an action from an `href`.\n   */\n  function useLinkBuilder() {\n    const navigation = React.useContext(_reactNavigationCore.NavigationHelpersContext);\n    const route = React.useContext(_reactNavigationCore.NavigationRouteContext);\n    const {\n      options\n    } = React.useContext(_LinkingContextJs.LinkingContext);\n    const focusedRouteState = (0, _reactNavigationCore.useStateForPath)();\n    const getPathFromStateHelper = options?.getPathFromState ?? _reactNavigationCore.getPathFromState;\n    const getStateFromPathHelper = options?.getStateFromPath ?? _reactNavigationCore.getStateFromPath;\n    const getActionFromStateHelper = options?.getActionFromState ?? _reactNavigationCore.getActionFromState;\n    const buildHref = React.useCallback((name, params) => {\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      // Check that we're inside:\n      // - navigator's context\n      // - route context of the navigator (could be a screen, tab, etc.)\n      // - route matches the state for path (from the screen's context)\n      // This ensures that we're inside a screen\n      const isScreen = navigation && route?.key && focusedRouteState ? route.key === (0, _reactNavigationCore.findFocusedRoute)(focusedRouteState)?.key && navigation.getState().routes.some(r => r.key === route.key) : false;\n      const stateForRoute = {\n        routes: [{\n          name,\n          params\n        }]\n      };\n      const constructState = state => {\n        if (state) {\n          const route = state.routes[0];\n\n          // If we're inside a screen and at the innermost route\n          // We need to replace the state with the provided one\n          // This assumes that we're navigating to a sibling route\n          if (isScreen && !route.state) {\n            return stateForRoute;\n          }\n\n          // Otherwise, dive into the nested state of the route\n          return {\n            routes: [{\n              ...route,\n              state: constructState(route.state)\n            }]\n          };\n        }\n\n        // Once there is no more nested state, we're at the innermost route\n        // We can add a state based on provided parameters\n        // This assumes that we're navigating to a child of this route\n        // In this case, the helper is used in a navigator for its routes\n        return stateForRoute;\n      };\n      const state = constructState(focusedRouteState);\n      const path = getPathFromStateHelper(state, options?.config);\n      return path;\n    }, [options?.enabled, options?.config, route?.key, navigation, focusedRouteState, getPathFromStateHelper]);\n    const buildAction = React.useCallback(href => {\n      if (!href.startsWith('/')) {\n        throw new Error(`The href must start with '/' (${href}).`);\n      }\n      const state = getStateFromPathHelper(href, options?.config);\n      if (state) {\n        const action = getActionFromStateHelper(state, options?.config);\n        return action ?? _reactNavigationCore.CommonActions.reset(state);\n      } else {\n        throw new Error('Failed to parse the href to a navigation state.');\n      }\n    }, [options?.config, getStateFromPathHelper, getActionFromStateHelper]);\n    return {\n      buildHref,\n      buildAction\n    };\n  }\n});","lineCount":100,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,11,0,"exports"],[16,9,11,0],[16,10,11,0,"useLinkBuilder"],[16,24,11,0],[16,27,11,0,"useLinkBuilder"],[16,41,11,0],[17,2,3,0],[17,6,3,0,"_reactNavigationCore"],[17,26,3,0],[17,29,3,0,"require"],[17,36,3,0],[17,37,3,0,"_dependencyMap"],[17,51,3,0],[18,2,4,0],[18,6,4,0,"_react"],[18,12,4,0],[18,15,4,0,"require"],[18,22,4,0],[18,23,4,0,"_dependencyMap"],[18,37,4,0],[19,2,4,0],[19,6,4,0,"React"],[19,11,4,0],[19,14,4,0,"_interopNamespace"],[19,31,4,0],[19,32,4,0,"_react"],[19,38,4,0],[20,2,5,0],[20,6,5,0,"_LinkingContextJs"],[20,23,5,0],[20,26,5,0,"require"],[20,33,5,0],[20,34,5,0,"_dependencyMap"],[20,48,5,0],[21,2,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[25,0,10,0],[26,2,11,7],[26,11,11,16,"useLinkBuilder"],[26,25,11,30,"useLinkBuilder"],[26,26,11,30],[26,28,11,33],[27,4,12,2],[27,10,12,8,"navigation"],[27,20,12,18],[27,23,12,21,"React"],[27,28,12,26],[27,29,12,27,"useContext"],[27,39,12,37],[27,40,12,38,"NavigationHelpersContext"],[27,60,12,62],[27,61,12,62,"NavigationHelpersContext"],[27,85,12,62],[27,86,12,63],[28,4,13,2],[28,10,13,8,"route"],[28,15,13,13],[28,18,13,16,"React"],[28,23,13,21],[28,24,13,22,"useContext"],[28,34,13,32],[28,35,13,33,"NavigationRouteContext"],[28,55,13,55],[28,56,13,55,"NavigationRouteContext"],[28,78,13,55],[28,79,13,56],[29,4,14,2],[29,10,14,8],[30,6,15,4,"options"],[31,4,16,2],[31,5,16,3],[31,8,16,6,"React"],[31,13,16,11],[31,14,16,12,"useContext"],[31,24,16,22],[31,25,16,23,"LinkingContext"],[31,42,16,37],[31,43,16,37,"LinkingContext"],[31,57,16,37],[31,58,16,38],[32,4,17,2],[32,10,17,8,"focusedRouteState"],[32,27,17,25],[32,30,17,28],[32,34,17,28,"useStateForPath"],[32,54,17,43],[32,55,17,43,"useStateForPath"],[32,70,17,43],[32,72,17,44],[32,73,17,45],[33,4,18,2],[33,10,18,8,"getPathFromStateHelper"],[33,32,18,30],[33,35,18,33,"options"],[33,42,18,40],[33,44,18,42,"getPathFromState"],[33,60,18,58],[33,64,18,62,"getPathFromState"],[33,84,18,78],[33,85,18,78,"getPathFromState"],[33,101,18,78],[34,4,19,2],[34,10,19,8,"getStateFromPathHelper"],[34,32,19,30],[34,35,19,33,"options"],[34,42,19,40],[34,44,19,42,"getStateFromPath"],[34,60,19,58],[34,64,19,62,"getStateFromPath"],[34,84,19,78],[34,85,19,78,"getStateFromPath"],[34,101,19,78],[35,4,20,2],[35,10,20,8,"getActionFromStateHelper"],[35,34,20,32],[35,37,20,35,"options"],[35,44,20,42],[35,46,20,44,"getActionFromState"],[35,64,20,62],[35,68,20,66,"getActionFromState"],[35,88,20,84],[35,89,20,84,"getActionFromState"],[35,107,20,84],[36,4,21,2],[36,10,21,8,"buildHref"],[36,19,21,17],[36,22,21,20,"React"],[36,27,21,25],[36,28,21,26,"useCallback"],[36,39,21,37],[36,40,21,38],[36,41,21,39,"name"],[36,45,21,43],[36,47,21,45,"params"],[36,53,21,51],[36,58,21,56],[37,6,22,4],[37,10,22,8,"options"],[37,17,22,15],[37,19,22,17,"enabled"],[37,26,22,24],[37,31,22,29],[37,36,22,34],[37,38,22,36],[38,8,23,6],[38,15,23,13,"undefined"],[38,24,23,22],[39,6,24,4],[41,6,26,4],[42,6,27,4],[43,6,28,4],[44,6,29,4],[45,6,30,4],[46,6,31,4],[46,12,31,10,"isScreen"],[46,20,31,18],[46,23,31,21,"navigation"],[46,33,31,31],[46,37,31,35,"route"],[46,42,31,40],[46,44,31,42,"key"],[46,47,31,45],[46,51,31,49,"focusedRouteState"],[46,68,31,66],[46,71,31,69,"route"],[46,76,31,74],[46,77,31,75,"key"],[46,80,31,78],[46,85,31,83],[46,89,31,83,"findFocusedRoute"],[46,109,31,99],[46,110,31,99,"findFocusedRoute"],[46,126,31,99],[46,128,31,100,"focusedRouteState"],[46,145,31,117],[46,146,31,118],[46,148,31,120,"key"],[46,151,31,123],[46,155,31,127,"navigation"],[46,165,31,137],[46,166,31,138,"getState"],[46,174,31,146],[46,175,31,147],[46,176,31,148],[46,177,31,149,"routes"],[46,183,31,155],[46,184,31,156,"some"],[46,188,31,160],[46,189,31,161,"r"],[46,190,31,162],[46,194,31,166,"r"],[46,195,31,167],[46,196,31,168,"key"],[46,199,31,171],[46,204,31,176,"route"],[46,209,31,181],[46,210,31,182,"key"],[46,213,31,185],[46,214,31,186],[46,217,31,189],[46,222,31,194],[47,6,32,4],[47,12,32,10,"stateForRoute"],[47,25,32,23],[47,28,32,26],[48,8,33,6,"routes"],[48,14,33,12],[48,16,33,14],[48,17,33,15],[49,10,34,8,"name"],[49,14,34,12],[50,10,35,8,"params"],[51,8,36,6],[51,9,36,7],[52,6,37,4],[52,7,37,5],[53,6,38,4],[53,12,38,10,"constructState"],[53,26,38,24],[53,29,38,27,"state"],[53,34,38,32],[53,38,38,36],[54,8,39,6],[54,12,39,10,"state"],[54,17,39,15],[54,19,39,17],[55,10,40,8],[55,16,40,14,"route"],[55,21,40,19],[55,24,40,22,"state"],[55,29,40,27],[55,30,40,28,"routes"],[55,36,40,34],[55,37,40,35],[55,38,40,36],[55,39,40,37],[57,10,42,8],[58,10,43,8],[59,10,44,8],[60,10,45,8],[60,14,45,12,"isScreen"],[60,22,45,20],[60,26,45,24],[60,27,45,25,"route"],[60,32,45,30],[60,33,45,31,"state"],[60,38,45,36],[60,40,45,38],[61,12,46,10],[61,19,46,17,"stateForRoute"],[61,32,46,30],[62,10,47,8],[64,10,49,8],[65,10,50,8],[65,17,50,15],[66,12,51,10,"routes"],[66,18,51,16],[66,20,51,18],[66,21,51,19],[67,14,52,12],[67,17,52,15,"route"],[67,22,52,20],[68,14,53,12,"state"],[68,19,53,17],[68,21,53,19,"constructState"],[68,35,53,33],[68,36,53,34,"route"],[68,41,53,39],[68,42,53,40,"state"],[68,47,53,45],[69,12,54,10],[69,13,54,11],[70,10,55,8],[70,11,55,9],[71,8,56,6],[73,8,58,6],[74,8,59,6],[75,8,60,6],[76,8,61,6],[77,8,62,6],[77,15,62,13,"stateForRoute"],[77,28,62,26],[78,6,63,4],[78,7,63,5],[79,6,64,4],[79,12,64,10,"state"],[79,17,64,15],[79,20,64,18,"constructState"],[79,34,64,32],[79,35,64,33,"focusedRouteState"],[79,52,64,50],[79,53,64,51],[80,6,65,4],[80,12,65,10,"path"],[80,16,65,14],[80,19,65,17,"getPathFromStateHelper"],[80,41,65,39],[80,42,65,40,"state"],[80,47,65,45],[80,49,65,47,"options"],[80,56,65,54],[80,58,65,56,"config"],[80,64,65,62],[80,65,65,63],[81,6,66,4],[81,13,66,11,"path"],[81,17,66,15],[82,4,67,2],[82,5,67,3],[82,7,67,5],[82,8,67,6,"options"],[82,15,67,13],[82,17,67,15,"enabled"],[82,24,67,22],[82,26,67,24,"options"],[82,33,67,31],[82,35,67,33,"config"],[82,41,67,39],[82,43,67,41,"route"],[82,48,67,46],[82,50,67,48,"key"],[82,53,67,51],[82,55,67,53,"navigation"],[82,65,67,63],[82,67,67,65,"focusedRouteState"],[82,84,67,82],[82,86,67,84,"getPathFromStateHelper"],[82,108,67,106],[82,109,67,107],[82,110,67,108],[83,4,68,2],[83,10,68,8,"buildAction"],[83,21,68,19],[83,24,68,22,"React"],[83,29,68,27],[83,30,68,28,"useCallback"],[83,41,68,39],[83,42,68,40,"href"],[83,46,68,44],[83,50,68,48],[84,6,69,4],[84,10,69,8],[84,11,69,9,"href"],[84,15,69,13],[84,16,69,14,"startsWith"],[84,26,69,24],[84,27,69,25],[84,30,69,28],[84,31,69,29],[84,33,69,31],[85,8,70,6],[85,14,70,12],[85,18,70,16,"Error"],[85,23,70,21],[85,24,70,22],[85,57,70,55,"href"],[85,61,70,59],[85,65,70,63],[85,66,70,64],[86,6,71,4],[87,6,72,4],[87,12,72,10,"state"],[87,17,72,15],[87,20,72,18,"getStateFromPathHelper"],[87,42,72,40],[87,43,72,41,"href"],[87,47,72,45],[87,49,72,47,"options"],[87,56,72,54],[87,58,72,56,"config"],[87,64,72,62],[87,65,72,63],[88,6,73,4],[88,10,73,8,"state"],[88,15,73,13],[88,17,73,15],[89,8,74,6],[89,14,74,12,"action"],[89,20,74,18],[89,23,74,21,"getActionFromStateHelper"],[89,47,74,45],[89,48,74,46,"state"],[89,53,74,51],[89,55,74,53,"options"],[89,62,74,60],[89,64,74,62,"config"],[89,70,74,68],[89,71,74,69],[90,8,75,6],[90,15,75,13,"action"],[90,21,75,19],[90,25,75,23,"CommonActions"],[90,45,75,36],[90,46,75,36,"CommonActions"],[90,59,75,36],[90,60,75,37,"reset"],[90,65,75,42],[90,66,75,43,"state"],[90,71,75,48],[90,72,75,49],[91,6,76,4],[91,7,76,5],[91,13,76,11],[92,8,77,6],[92,14,77,12],[92,18,77,16,"Error"],[92,23,77,21],[92,24,77,22],[92,73,77,71],[92,74,77,72],[93,6,78,4],[94,4,79,2],[94,5,79,3],[94,7,79,5],[94,8,79,6,"options"],[94,15,79,13],[94,17,79,15,"config"],[94,23,79,21],[94,25,79,23,"getStateFromPathHelper"],[94,47,79,45],[94,49,79,47,"getActionFromStateHelper"],[94,73,79,71],[94,74,79,72],[94,75,79,73],[95,4,80,2],[95,11,80,9],[96,6,81,4,"buildHref"],[96,15,81,13],[97,6,82,4,"buildAction"],[98,4,83,2],[98,5,83,3],[99,2,84,0],[100,0,84,1],[100,3]],"functionMap":{"names":["<global>","useLinkBuilder","buildHref","navigation.getState.routes.some$argument_0","constructState","buildAction"],"mappings":"AAA;OCU;sCCU;iKCU,wBD;2BEO;KFyB;GDI;wCIC;GJW;CDK"},"hasCjsExports":false},"type":"js/module"}]}