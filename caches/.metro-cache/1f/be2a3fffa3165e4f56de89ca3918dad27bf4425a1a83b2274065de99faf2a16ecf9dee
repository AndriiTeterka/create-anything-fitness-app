{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":240},"end":{"line":11,"column":31,"index":271}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/NativeEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"eTF52IbKshB2LvkGjXImGpuTZc0=","exportNames":["*"],"imports":1}},{"name":"./LogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":324},"end":{"line":14,"column":40,"index":364}}],"key":"RwknKpSLDy9ayXhlPxw1CmbUPgg=","exportNames":["*"],"imports":1}},{"name":"./LogContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":421},"end":{"line":16,"column":42,"index":463}}],"key":"08zCGMU0YDPffrVErZBYDWsetf4=","exportNames":["*"],"imports":1}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":464},"end":{"line":17,"column":56,"index":520}}],"key":"jpYn6rgG/TatMWMr3MolKhrm4tY=","exportNames":["*"],"imports":1}},{"name":"../modules/NativeLogBox","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":619},"end":{"line":19,"column":51,"index":670}}],"key":"p3b5WMmEyWxm6gOiGn9fL7Jt3qU=","exportNames":["*"],"imports":1}},{"name":"../modules/parseErrorStack","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":671},"end":{"line":20,"column":57,"index":728}}],"key":"mfxaFYAQGgcp6uWAwEF5cgtcAXk=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}},{"name":"../modules/ExceptionsManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":85,"column":28,"index":2199},"end":{"line":85,"column":67,"index":2238}}],"key":"O+gFX/law9ujkyw2t64+bdXM/Ng=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use client';\n  \"use strict\";\n\n  var _jsxFileName = \"C:\\\\Users\\\\ateterka\\\\create-anything-fitness-app\\\\node_modules\\\\@expo\\\\metro-runtime\\\\src\\\\error-overlay\\\\Data\\\\LogBoxData.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.reportUnexpectedLogBoxError = reportUnexpectedLogBoxError;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.addLog = addLog;\n  exports.addException = addException;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.clear = clear;\n  exports.setSelectedLog = setSelectedLog;\n  exports.clearWarnings = clearWarnings;\n  exports.clearErrors = clearErrors;\n  exports.dismiss = dismiss;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.setDisabled = setDisabled;\n  exports.isDisabled = isDisabled;\n  exports.observe = observe;\n  exports.withSubscription = withSubscription;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsNativeEventEmitter = require(_dependencyMap[1], \"react-native-web/dist/exports/NativeEventEmitter\");\n  var NativeEventEmitter = _interopDefault(_reactNativeWebDistExportsNativeEventEmitter);\n  var _LogBoxLog = require(_dependencyMap[2], \"./LogBoxLog\");\n  var _LogContext = require(_dependencyMap[3], \"./LogContext\");\n  var _parseLogBoxLog = require(_dependencyMap[4], \"./parseLogBoxLog\");\n  var _modulesNativeLogBox = require(_dependencyMap[5], \"../modules/NativeLogBox\");\n  var NativeLogBox = _interopDefault(_modulesNativeLogBox);\n  var _modulesParseErrorStack = require(_dependencyMap[6], \"../modules/parseErrorStack\");\n  var parseErrorStack = _interopDefault(_modulesParseErrorStack);\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  const observers = new Set();\n  const ignorePatterns = new Set();\n  let logs = new Set();\n  let updateTimeout = null;\n  let _isDisabled = false;\n  let _selectedIndex = -1;\n  const LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    const ExceptionsManager = require(_dependencyMap[8], \"../modules/ExceptionsManager\").default;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error);\n  }\n  function reportUnexpectedLogBoxError(error, componentStack) {\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    return reportLogBoxError(error, componentStack);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (const pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setTimeout(() => {\n        updateTimeout = null;\n        const nextState = getNextState();\n        observers.forEach(({\n          observer\n        }) => observer(nextState));\n      }, 0);\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    const lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      const OPTIMISTIC_WAIT_TIME = 1000;\n      let addPendingLog = () => {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        addPendingLog = null;\n      };\n      const optimisticTimeout = setTimeout(() => {\n        if (addPendingLog) {\n          addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n\n      // TODO: HANDLE THIS\n      newLog.symbolicate('component');\n      newLog.symbolicate('stack', status => {\n        if (addPendingLog && status !== 'PENDING') {\n          addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    const errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setTimeout(() => {\n      try {\n        const stack = (0, parseErrorStack.default)(errorForStackTrace?.stack);\n        appendNewLog(new _LogBoxLog.LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportUnexpectedLogBoxError(error);\n      }\n    }, 0);\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setTimeout(() => {\n      try {\n        appendNewLog(new _LogBoxLog.LogBoxLog((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportUnexpectedLogBoxError(loggingError);\n      }\n    }, 0);\n  }\n  function symbolicateLogNow(type, log) {\n    log.symbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(type, log) {\n    log.retrySymbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(type, log) {\n    log.symbolicate(type);\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    const oldIndex = _selectedIndex;\n    let newIndex = proposedNewIndex;\n    const logArray = Array.from(logs);\n    let index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (NativeLogBox.default) {\n      setTimeout(() => {\n        if (oldIndex < 0 && newIndex >= 0) {\n          NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    const newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    const newLogs = Array.from(logs).filter(log => log.level !== 'error' && log.level !== 'fatal');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    const existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(pattern => {\n      if (pattern instanceof RegExp) {\n        for (const existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(log => !isMessageIgnored(log.message.content)));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    const subscription = {\n      observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  const emitter = new NativeEventEmitter.default({\n    addListener() {},\n    removeListeners() {}\n  });\n  function withSubscription(WrappedComponent) {\n    class LogBoxStateSubscription extends React.Component {\n      static getDerivedStateFromError() {\n        return {\n          hasError: true\n        };\n      }\n      constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'development') {\n          emitter.addListener('devLoadingView:hide', () => {\n            if (this.state.hasError) {\n              this.retry();\n            }\n          });\n        }\n      }\n      componentDidCatch(err, errorInfo) {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        reportLogBoxError(err, errorInfo.componentStack);\n      }\n      state = {\n        logs: new Set(),\n        isDisabled: false,\n        hasError: false,\n        selectedLogIndex: -1\n      };\n      retry = () => {\n        return new Promise(resolve => {\n          this.setState({\n            hasError: false\n          }, () => {\n            resolve();\n          });\n        });\n      };\n      render() {\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_LogContext.LogContext.Provider, {\n          value: {\n            selectedLogIndex: this.state.selectedLogIndex,\n            isDisabled: this.state.isDisabled,\n            logs: Array.from(this.state.logs)\n          },\n          children: [this.state.hasError ? null : this.props.children, /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(WrappedComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this);\n      }\n      componentDidMount() {\n        this._subscription = observe(data => {\n          // Ignore the initial empty log\n          if (data.selectedLogIndex === -1) return;\n          React.startTransition(() => {\n            this.setState(data);\n          });\n        });\n      }\n      componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.unsubscribe();\n        }\n      }\n      _handleDismiss = () => {\n        // Here we handle the cases when the log is dismissed and it\n        // was either the last log, or when the current index\n        // is now outside the bounds of the log array.\n        const {\n          selectedLogIndex,\n          logs: stateLogs\n        } = this.state;\n        const logsArray = Array.from(stateLogs);\n        if (selectedLogIndex != null) {\n          if (logsArray.length - 1 <= 0) {\n            setSelectedLog(-1);\n          } else if (selectedLogIndex >= logsArray.length - 1) {\n            setSelectedLog(selectedLogIndex - 1);\n          }\n          dismiss(logsArray[selectedLogIndex]);\n        }\n      };\n      _handleMinimize = () => {\n        setSelectedLog(-1);\n      };\n      _handleSetSelectedLog = index => {\n        setSelectedLog(index);\n      };\n    }\n\n    // @ts-expect-error\n    return LogBoxStateSubscription;\n  }\n});","lineCount":414,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[10,2,9,0],[10,14,9,12],[11,2,9,13],[13,2,9,13],[13,6,9,13,"_jsxFileName"],[13,18,9,13],[14,2,9,13,"Object"],[14,8,9,13],[14,9,9,13,"defineProperty"],[14,23,9,13],[14,24,9,13,"exports"],[14,31,9,13],[15,4,9,13,"value"],[15,9,9,13],[16,2,9,13],[17,2,9,13],[17,11,9,13,"_interopNamespace"],[17,29,9,13,"e"],[17,30,9,13],[18,4,9,13],[18,8,9,13,"e"],[18,9,9,13],[18,13,9,13,"e"],[18,14,9,13],[18,15,9,13,"__esModule"],[18,25,9,13],[18,34,9,13,"e"],[18,35,9,13],[19,4,9,13],[19,8,9,13,"n"],[19,9,9,13],[20,4,9,13],[20,8,9,13,"e"],[20,9,9,13],[20,11,9,13,"Object"],[20,17,9,13],[20,18,9,13,"keys"],[20,22,9,13],[20,23,9,13,"e"],[20,24,9,13],[20,26,9,13,"forEach"],[20,33,9,13],[20,44,9,13,"k"],[20,45,9,13],[21,6,9,13,"n"],[21,7,9,13],[21,8,9,13,"k"],[21,9,9,13],[21,13,9,13,"e"],[21,14,9,13],[21,15,9,13,"k"],[21,16,9,13],[22,4,9,13],[23,4,9,13,"n"],[23,5,9,13],[23,6,9,13,"default"],[23,13,9,13],[23,16,9,13,"e"],[23,17,9,13],[24,4,9,13],[24,11,9,13,"n"],[24,12,9,13],[25,2,9,13],[26,2,9,13],[26,11,9,13,"_interopDefault"],[26,27,9,13,"e"],[26,28,9,13],[27,4,9,13],[27,11,9,13,"e"],[27,12,9,13],[27,16,9,13,"e"],[27,17,9,13],[27,18,9,13,"__esModule"],[27,28,9,13],[27,31,9,13,"e"],[27,32,9,13],[28,6,9,13,"default"],[28,13,9,13],[28,15,9,13,"e"],[29,4,9,13],[30,2,9,13],[31,2,84,0,"exports"],[31,9,84,0],[31,10,84,0,"reportLogBoxError"],[31,27,84,0],[31,30,84,0,"reportLogBoxError"],[31,47,84,0],[32,2,93,0,"exports"],[32,9,93,0],[32,10,93,0,"reportUnexpectedLogBoxError"],[32,37,93,0],[32,40,93,0,"reportUnexpectedLogBoxError"],[32,67,93,0],[33,2,98,0,"exports"],[33,9,98,0],[33,10,98,0,"isLogBoxErrorMessage"],[33,30,98,0],[33,33,98,0,"isLogBoxErrorMessage"],[33,53,98,0],[34,2,102,0,"exports"],[34,9,102,0],[34,10,102,0,"isMessageIgnored"],[34,26,102,0],[34,29,102,0,"isMessageIgnored"],[34,45,102,0],[35,2,184,0,"exports"],[35,9,184,0],[35,10,184,0,"addLog"],[35,16,184,0],[35,19,184,0,"addLog"],[35,25,184,0],[36,2,209,0,"exports"],[36,9,209,0],[36,10,209,0,"addException"],[36,22,209,0],[36,25,209,0,"addException"],[36,37,209,0],[37,2,221,0,"exports"],[37,9,221,0],[37,10,221,0,"symbolicateLogNow"],[37,27,221,0],[37,30,221,0,"symbolicateLogNow"],[37,47,221,0],[38,2,227,0,"exports"],[38,9,227,0],[38,10,227,0,"retrySymbolicateLogNow"],[38,32,227,0],[38,35,227,0,"retrySymbolicateLogNow"],[38,57,227,0],[39,2,233,0,"exports"],[39,9,233,0],[39,10,233,0,"symbolicateLogLazy"],[39,28,233,0],[39,31,233,0,"symbolicateLogLazy"],[39,49,233,0],[40,2,237,0,"exports"],[40,9,237,0],[40,10,237,0,"clear"],[40,15,237,0],[40,18,237,0,"clear"],[40,23,237,0],[41,2,244,0,"exports"],[41,9,244,0],[41,10,244,0,"setSelectedLog"],[41,24,244,0],[41,27,244,0,"setSelectedLog"],[41,41,244,0],[42,2,271,0,"exports"],[42,9,271,0],[42,10,271,0,"clearWarnings"],[42,23,271,0],[42,26,271,0,"clearWarnings"],[42,39,271,0],[43,2,280,0,"exports"],[43,9,280,0],[43,10,280,0,"clearErrors"],[43,21,280,0],[43,24,280,0,"clearErrors"],[43,35,280,0],[44,2,288,0,"exports"],[44,9,288,0],[44,10,288,0,"dismiss"],[44,17,288,0],[44,20,288,0,"dismiss"],[44,27,288,0],[45,2,295,0,"exports"],[45,9,295,0],[45,10,295,0,"getIgnorePatterns"],[45,27,295,0],[45,30,295,0,"getIgnorePatterns"],[45,47,295,0],[46,2,299,0,"exports"],[46,9,299,0],[46,10,299,0,"addIgnorePatterns"],[46,27,299,0],[46,30,299,0,"addIgnorePatterns"],[46,47,299,0],[47,2,328,0,"exports"],[47,9,328,0],[47,10,328,0,"setDisabled"],[47,21,328,0],[47,24,328,0,"setDisabled"],[47,35,328,0],[48,2,336,0,"exports"],[48,9,336,0],[48,10,336,0,"isDisabled"],[48,20,336,0],[48,23,336,0,"isDisabled"],[48,33,336,0],[49,2,340,0,"exports"],[49,9,340,0],[49,10,340,0,"observe"],[49,17,340,0],[49,20,340,0,"observe"],[49,27,340,0],[50,2,358,0,"exports"],[50,9,358,0],[50,10,358,0,"withSubscription"],[50,26,358,0],[50,29,358,0,"withSubscription"],[50,45,358,0],[51,2,11,0],[51,6,11,0,"_react"],[51,12,11,0],[51,15,11,0,"require"],[51,22,11,0],[51,23,11,0,"_dependencyMap"],[51,37,11,0],[52,2,11,0],[52,6,11,0,"React"],[52,11,11,0],[52,14,11,0,"_interopNamespace"],[52,31,11,0],[52,32,11,0,"_react"],[52,38,11,0],[53,2,11,31],[53,6,11,31,"_reactNativeWebDistExportsNativeEventEmitter"],[53,50,11,31],[53,53,11,31,"require"],[53,60,11,31],[53,61,11,31,"_dependencyMap"],[53,75,11,31],[54,2,11,31],[54,6,11,31,"NativeEventEmitter"],[54,24,11,31],[54,27,11,31,"_interopDefault"],[54,42,11,31],[54,43,11,31,"_reactNativeWebDistExportsNativeEventEmitter"],[54,87,11,31],[55,2,14,0],[55,6,14,0,"_LogBoxLog"],[55,16,14,0],[55,19,14,0,"require"],[55,26,14,0],[55,27,14,0,"_dependencyMap"],[55,41,14,0],[56,2,16,0],[56,6,16,0,"_LogContext"],[56,17,16,0],[56,20,16,0,"require"],[56,27,16,0],[56,28,16,0,"_dependencyMap"],[56,42,16,0],[57,2,17,0],[57,6,17,0,"_parseLogBoxLog"],[57,21,17,0],[57,24,17,0,"require"],[57,31,17,0],[57,32,17,0,"_dependencyMap"],[57,46,17,0],[58,2,19,0],[58,6,19,0,"_modulesNativeLogBox"],[58,26,19,0],[58,29,19,0,"require"],[58,36,19,0],[58,37,19,0,"_dependencyMap"],[58,51,19,0],[59,2,19,0],[59,6,19,0,"NativeLogBox"],[59,18,19,0],[59,21,19,0,"_interopDefault"],[59,36,19,0],[59,37,19,0,"_modulesNativeLogBox"],[59,57,19,0],[60,2,20,0],[60,6,20,0,"_modulesParseErrorStack"],[60,29,20,0],[60,32,20,0,"require"],[60,39,20,0],[60,40,20,0,"_dependencyMap"],[60,54,20,0],[61,2,20,0],[61,6,20,0,"parseErrorStack"],[61,21,20,0],[61,24,20,0,"_interopDefault"],[61,39,20,0],[61,40,20,0,"_modulesParseErrorStack"],[61,63,20,0],[62,2,20,57],[62,6,20,57,"_reactJsxDevRuntime"],[62,25,20,57],[62,28,20,57,"require"],[62,35,20,57],[62,36,20,57,"_dependencyMap"],[62,50,20,57],[63,2,66,0],[63,8,66,6,"observers"],[63,17,66,50],[63,20,66,53],[63,24,66,57,"Set"],[63,27,66,60],[63,28,66,61],[63,29,66,62],[64,2,67,0],[64,8,67,6,"ignorePatterns"],[64,22,67,40],[64,25,67,43],[64,29,67,47,"Set"],[64,32,67,50],[64,33,67,51],[64,34,67,52],[65,2,68,0],[65,6,68,4,"logs"],[65,10,68,20],[65,13,68,23],[65,17,68,27,"Set"],[65,20,68,30],[65,21,68,31],[65,22,68,32],[66,2,69,0],[66,6,69,4,"updateTimeout"],[66,19,69,55],[66,22,69,58],[66,26,69,62],[67,2,70,0],[67,6,70,4,"_isDisabled"],[67,17,70,15],[67,20,70,18],[67,25,70,23],[68,2,71,0],[68,6,71,4,"_selectedIndex"],[68,20,71,18],[68,23,71,21],[68,24,71,22],[68,25,71,23],[69,2,73,0],[69,8,73,6,"LOGBOX_ERROR_MESSAGE"],[69,28,73,26],[69,31,74,2],[69,103,74,74],[70,2,76,0],[70,11,76,9,"getNextState"],[70,23,76,21,"getNextState"],[70,24,76,21],[70,26,76,24],[71,4,77,2],[71,11,77,9],[72,6,78,4,"logs"],[72,10,78,8],[73,6,79,4,"isDisabled"],[73,16,79,14],[73,18,79,16,"_isDisabled"],[73,29,79,27],[74,6,80,4,"selectedLogIndex"],[74,22,80,20],[74,24,80,22,"_selectedIndex"],[75,4,81,2],[75,5,81,3],[76,2,82,0],[77,2,84,7],[77,11,84,16,"reportLogBoxError"],[77,28,84,33,"reportLogBoxError"],[77,29,84,34,"error"],[77,34,84,54],[77,36,84,56,"componentStack"],[77,50,84,79],[77,52,84,87],[78,4,85,2],[78,10,85,8,"ExceptionsManager"],[78,27,85,25],[78,30,85,28,"require"],[78,37,85,35],[78,38,85,35,"_dependencyMap"],[78,52,85,35],[78,87,85,66],[78,88,85,67],[78,89,85,68,"default"],[78,96,85,75],[79,4,87,2],[79,8,87,6,"componentStack"],[79,22,87,20],[79,26,87,24],[79,30,87,28],[79,32,87,30],[80,6,88,4,"error"],[80,11,88,9],[80,12,88,10,"componentStack"],[80,26,88,24],[80,29,88,27,"componentStack"],[80,43,88,41],[81,4,89,2],[82,4,90,2,"ExceptionsManager"],[82,21,90,19],[82,22,90,20,"handleException"],[82,37,90,35],[82,38,90,36,"error"],[82,43,90,41],[82,44,90,42],[83,2,91,0],[84,2,93,7],[84,11,93,16,"reportUnexpectedLogBoxError"],[84,38,93,43,"reportUnexpectedLogBoxError"],[84,39,93,44,"error"],[84,44,93,64],[84,46,93,66,"componentStack"],[84,60,93,89],[84,62,93,97],[85,4,94,2,"error"],[85,9,94,7],[85,10,94,8,"message"],[85,17,94,15],[85,20,94,18],[85,23,94,21,"LOGBOX_ERROR_MESSAGE"],[85,43,94,41],[85,50,94,48,"error"],[85,55,94,53],[85,56,94,54,"message"],[85,63,94,61],[85,65,94,63],[86,4,95,2],[86,11,95,9,"reportLogBoxError"],[86,28,95,26],[86,29,95,27,"error"],[86,34,95,32],[86,36,95,34,"componentStack"],[86,50,95,48],[86,51,95,49],[87,2,96,0],[88,2,98,7],[88,11,98,16,"isLogBoxErrorMessage"],[88,31,98,36,"isLogBoxErrorMessage"],[88,32,98,37,"message"],[88,39,98,52],[88,41,98,63],[89,4,99,2],[89,11,99,9],[89,18,99,16,"message"],[89,25,99,23],[89,30,99,28],[89,38,99,36],[89,42,99,40,"message"],[89,49,99,47],[89,50,99,48,"includes"],[89,58,99,56],[89,59,99,57,"LOGBOX_ERROR_MESSAGE"],[89,79,99,77],[89,80,99,78],[90,2,100,0],[91,2,102,7],[91,11,102,16,"isMessageIgnored"],[91,27,102,32,"isMessageIgnored"],[91,28,102,33,"message"],[91,35,102,48],[91,37,102,59],[92,4,103,2],[92,9,103,7],[92,15,103,13,"pattern"],[92,22,103,20],[92,26,103,24,"ignorePatterns"],[92,40,103,38],[92,42,103,40],[93,6,104,4],[93,10,105,7,"pattern"],[93,17,105,14],[93,29,105,26,"RegExp"],[93,35,105,32],[93,39,105,36,"pattern"],[93,46,105,43],[93,47,105,44,"test"],[93,51,105,48],[93,52,105,49,"message"],[93,59,105,56],[93,60,105,57],[93,64,106,7],[93,71,106,14,"pattern"],[93,78,106,21],[93,83,106,26],[93,91,106,34],[93,95,106,38,"message"],[93,102,106,45],[93,103,106,46,"includes"],[93,111,106,54],[93,112,106,55,"pattern"],[93,119,106,62],[93,120,106,64],[93,122,107,6],[94,8,108,6],[94,15,108,13],[94,19,108,17],[95,6,109,4],[96,4,110,2],[97,4,111,2],[97,11,111,9],[97,16,111,14],[98,2,112,0],[99,2,114,0],[99,11,114,9,"handleUpdate"],[99,23,114,21,"handleUpdate"],[99,24,114,21],[99,26,114,30],[100,4,115,2],[100,8,115,6,"updateTimeout"],[100,21,115,19],[100,25,115,23],[100,29,115,27],[100,31,115,29],[101,6,116,4,"updateTimeout"],[101,19,116,17],[101,22,116,20,"setTimeout"],[101,32,116,30],[101,33,116,31],[101,39,116,37],[102,8,117,6,"updateTimeout"],[102,21,117,19],[102,24,117,22],[102,28,117,26],[103,8,118,6],[103,14,118,12,"nextState"],[103,23,118,21],[103,26,118,24,"getNextState"],[103,38,118,36],[103,39,118,37],[103,40,118,38],[104,8,119,6,"observers"],[104,17,119,15],[104,18,119,16,"forEach"],[104,25,119,23],[104,26,119,24],[104,27,119,25],[105,10,119,27,"observer"],[106,8,119,36],[106,9,119,37],[106,14,119,42,"observer"],[106,22,119,50],[106,23,119,51,"nextState"],[106,32,119,60],[106,33,119,61],[106,34,119,62],[107,6,120,4],[107,7,120,5],[107,9,120,7],[107,10,120,8],[107,11,120,9],[108,4,121,2],[109,2,122,0],[110,2,124,0],[110,11,124,9,"appendNewLog"],[110,23,124,21,"appendNewLog"],[110,24,124,22,"newLog"],[110,30,124,39],[110,32,124,47],[111,4,125,2],[112,4,126,2],[113,4,127,2],[113,8,127,6,"isMessageIgnored"],[113,24,127,22],[113,25,127,23,"newLog"],[113,31,127,29],[113,32,127,30,"message"],[113,39,127,37],[113,40,127,38,"content"],[113,47,127,45],[113,48,127,46],[113,50,127,48],[114,6,128,4],[115,4,129,2],[117,4,131,2],[118,4,132,2],[119,4,133,2],[120,4,134,2],[120,10,134,8,"lastLog"],[120,17,134,15],[120,20,134,18,"Array"],[120,25,134,23],[120,26,134,24,"from"],[120,30,134,28],[120,31,134,29,"logs"],[120,35,134,33],[120,36,134,34],[120,37,134,35,"pop"],[120,40,134,38],[120,41,134,39],[120,42,134,40],[121,4,135,2],[121,8,135,6,"lastLog"],[121,15,135,13],[121,19,135,17,"lastLog"],[121,26,135,24],[121,27,135,25,"category"],[121,35,135,33],[121,40,135,38,"newLog"],[121,46,135,44],[121,47,135,45,"category"],[121,55,135,53],[121,57,135,55],[122,6,136,4,"lastLog"],[122,13,136,11],[122,14,136,12,"incrementCount"],[122,28,136,26],[122,29,136,27],[122,30,136,28],[123,6,137,4,"handleUpdate"],[123,18,137,16],[123,19,137,17],[123,20,137,18],[124,6,138,4],[125,4,139,2],[126,4,141,2],[126,8,141,6,"newLog"],[126,14,141,12],[126,15,141,13,"level"],[126,20,141,18],[126,25,141,23],[126,32,141,30],[126,34,141,32],[127,6,142,4],[128,6,143,4],[129,6,144,4],[130,6,145,4],[130,12,145,10,"OPTIMISTIC_WAIT_TIME"],[130,32,145,30],[130,35,145,33],[130,39,145,37],[131,6,147,4],[131,10,147,8,"addPendingLog"],[131,23,147,42],[131,26,147,45,"addPendingLog"],[131,27,147,45],[131,32,147,51],[132,8,148,6,"logs"],[132,12,148,10],[132,13,148,11,"add"],[132,16,148,14],[132,17,148,15,"newLog"],[132,23,148,21],[132,24,148,22],[133,8,149,6],[133,12,149,10,"_selectedIndex"],[133,26,149,24],[133,29,149,27],[133,30,149,28],[133,32,149,30],[134,10,150,8,"setSelectedLog"],[134,24,150,22],[134,25,150,23,"logs"],[134,29,150,27],[134,30,150,28,"size"],[134,34,150,32],[134,37,150,35],[134,38,150,36],[134,39,150,37],[135,8,151,6],[135,9,151,7],[135,15,151,13],[136,10,152,8,"handleUpdate"],[136,22,152,20],[136,23,152,21],[136,24,152,22],[137,8,153,6],[138,8,154,6,"addPendingLog"],[138,21,154,19],[138,24,154,22],[138,28,154,26],[139,6,155,4],[139,7,155,5],[140,6,157,4],[140,12,157,10,"optimisticTimeout"],[140,29,157,27],[140,32,157,30,"setTimeout"],[140,42,157,40],[140,43,157,41],[140,49,157,47],[141,8,158,6],[141,12,158,10,"addPendingLog"],[141,25,158,23],[141,27,158,25],[142,10,159,8,"addPendingLog"],[142,23,159,21],[142,24,159,22],[142,25,159,23],[143,8,160,6],[144,6,161,4],[144,7,161,5],[144,9,161,7,"OPTIMISTIC_WAIT_TIME"],[144,29,161,27],[144,30,161,28],[146,6,163,4],[147,6,164,4,"newLog"],[147,12,164,10],[147,13,164,11,"symbolicate"],[147,24,164,22],[147,25,164,23],[147,36,164,34],[147,37,164,35],[148,6,166,4,"newLog"],[148,12,166,10],[148,13,166,11,"symbolicate"],[148,24,166,22],[148,25,166,23],[148,32,166,30],[148,34,166,33,"status"],[148,40,166,39],[148,44,166,44],[149,8,167,6],[149,12,167,10,"addPendingLog"],[149,25,167,23],[149,29,167,27,"status"],[149,35,167,33],[149,40,167,38],[149,49,167,47],[149,51,167,49],[150,10,168,8,"addPendingLog"],[150,23,168,21],[150,24,168,22],[150,25,168,23],[151,10,169,8,"clearTimeout"],[151,22,169,20],[151,23,169,21,"optimisticTimeout"],[151,40,169,38],[151,41,169,39],[152,8,170,6],[152,9,170,7],[152,15,170,13],[152,19,170,17,"status"],[152,25,170,23],[152,30,170,28],[152,39,170,37],[152,41,170,39],[153,10,171,8],[154,10,172,8,"handleUpdate"],[154,22,172,20],[154,23,172,21],[154,24,172,22],[155,8,173,6],[156,6,174,4],[156,7,174,5],[156,8,174,6],[157,4,175,2],[157,5,175,3],[157,11,175,9],[157,15,175,13,"newLog"],[157,21,175,19],[157,22,175,20,"level"],[157,27,175,25],[157,32,175,30],[157,40,175,38],[157,42,175,40],[158,6,176,4,"logs"],[158,10,176,8],[158,11,176,9,"add"],[158,14,176,12],[158,15,176,13,"newLog"],[158,21,176,19],[158,22,176,20],[159,6,177,4,"setSelectedLog"],[159,20,177,18],[159,21,177,19,"logs"],[159,25,177,23],[159,26,177,24,"size"],[159,30,177,28],[159,33,177,31],[159,34,177,32],[159,35,177,33],[160,4,178,2],[160,5,178,3],[160,11,178,9],[161,6,179,4,"logs"],[161,10,179,8],[161,11,179,9,"add"],[161,14,179,12],[161,15,179,13,"newLog"],[161,21,179,19],[161,22,179,20],[162,6,180,4,"handleUpdate"],[162,18,180,16],[162,19,180,17],[162,20,180,18],[163,4,181,2],[164,2,182,0],[165,2,184,7],[165,11,184,16,"addLog"],[165,17,184,22,"addLog"],[165,18,184,23,"log"],[165,21,184,35],[165,23,184,43],[166,4,185,2],[166,10,185,8,"errorForStackTrace"],[166,28,185,26],[166,31,185,29],[166,35,185,33,"Error"],[166,40,185,38],[166,41,185,39],[166,42,185,40],[168,4,187,2],[169,4,188,2],[170,4,189,2,"setTimeout"],[170,14,189,12],[170,15,189,13],[170,21,189,19],[171,6,190,4],[171,10,190,8],[172,8,191,6],[172,14,191,12,"stack"],[172,19,191,17],[172,22,191,20],[172,26,191,20,"parseErrorStack"],[172,41,191,35],[172,42,191,35,"default"],[172,49,191,35],[172,51,191,36,"errorForStackTrace"],[172,69,191,54],[172,71,191,56,"stack"],[172,76,191,61],[172,77,191,62],[173,8,193,6,"appendNewLog"],[173,20,193,18],[173,21,194,8],[173,25,194,12,"LogBoxLog"],[173,35,194,21],[173,36,194,21,"LogBoxLog"],[173,45,194,21],[173,46,194,22],[174,10,195,10,"level"],[174,15,195,15],[174,17,195,17,"log"],[174,20,195,20],[174,21,195,21,"level"],[174,26,195,26],[175,10,196,10,"message"],[175,17,196,17],[175,19,196,19,"log"],[175,22,196,22],[175,23,196,23,"message"],[175,30,196,30],[176,10,197,10,"isComponentError"],[176,26,197,26],[176,28,197,28],[176,33,197,33],[177,10,198,10,"stack"],[177,15,198,15],[178,10,199,10,"category"],[178,18,199,18],[178,20,199,20,"log"],[178,23,199,23],[178,24,199,24,"category"],[178,32,199,32],[179,10,200,10,"componentStack"],[179,24,200,24],[179,26,200,26,"log"],[179,29,200,29],[179,30,200,30,"componentStack"],[180,8,201,8],[180,9,201,9],[180,10,202,6],[180,11,202,7],[181,6,203,4],[181,7,203,5],[181,8,203,6],[181,15,203,13,"error"],[181,20,203,18],[181,22,203,20],[182,8,204,6,"reportUnexpectedLogBoxError"],[182,35,204,33],[182,36,204,34,"error"],[182,41,204,39],[182,42,204,40],[183,6,205,4],[184,4,206,2],[184,5,206,3],[184,7,206,5],[184,8,206,6],[184,9,206,7],[185,2,207,0],[186,2,209,7],[186,11,209,16,"addException"],[186,23,209,28,"addException"],[186,24,209,29,"error"],[186,29,209,57],[186,31,209,65],[187,4,210,2],[188,4,211,2],[189,4,212,2,"setTimeout"],[189,14,212,12],[189,15,212,13],[189,21,212,19],[190,6,213,4],[190,10,213,8],[191,8,214,6,"appendNewLog"],[191,20,214,18],[191,21,214,19],[191,25,214,23,"LogBoxLog"],[191,35,214,32],[191,36,214,32,"LogBoxLog"],[191,45,214,32],[191,46,214,33],[191,50,214,33,"parseLogBoxException"],[191,65,214,53],[191,66,214,53,"parseLogBoxException"],[191,86,214,53],[191,88,214,54,"error"],[191,93,214,59],[191,94,214,60],[191,95,214,61],[191,96,214,62],[192,6,215,4],[192,7,215,5],[192,8,215,6],[192,15,215,13,"loggingError"],[192,27,215,25],[192,29,215,27],[193,8,216,6,"reportUnexpectedLogBoxError"],[193,35,216,33],[193,36,216,34,"loggingError"],[193,48,216,46],[193,49,216,47],[194,6,217,4],[195,4,218,2],[195,5,218,3],[195,7,218,5],[195,8,218,6],[195,9,218,7],[196,2,219,0],[197,2,221,7],[197,11,221,16,"symbolicateLogNow"],[197,28,221,33,"symbolicateLogNow"],[197,29,221,34,"type"],[197,33,221,49],[197,35,221,51,"log"],[197,38,221,65],[197,40,221,67],[198,4,222,2,"log"],[198,7,222,5],[198,8,222,6,"symbolicate"],[198,19,222,17],[198,20,222,18,"type"],[198,24,222,22],[198,26,222,24],[198,32,222,30],[199,6,223,4,"handleUpdate"],[199,18,223,16],[199,19,223,17],[199,20,223,18],[200,4,224,2],[200,5,224,3],[200,6,224,4],[201,2,225,0],[202,2,227,7],[202,11,227,16,"retrySymbolicateLogNow"],[202,33,227,38,"retrySymbolicateLogNow"],[202,34,227,39,"type"],[202,38,227,54],[202,40,227,56,"log"],[202,43,227,70],[202,45,227,72],[203,4,228,2,"log"],[203,7,228,5],[203,8,228,6,"retrySymbolicate"],[203,24,228,22],[203,25,228,23,"type"],[203,29,228,27],[203,31,228,29],[203,37,228,35],[204,6,229,4,"handleUpdate"],[204,18,229,16],[204,19,229,17],[204,20,229,18],[205,4,230,2],[205,5,230,3],[205,6,230,4],[206,2,231,0],[207,2,233,7],[207,11,233,16,"symbolicateLogLazy"],[207,29,233,34,"symbolicateLogLazy"],[207,30,233,35,"type"],[207,34,233,50],[207,36,233,52,"log"],[207,39,233,66],[207,41,233,68],[208,4,234,2,"log"],[208,7,234,5],[208,8,234,6,"symbolicate"],[208,19,234,17],[208,20,234,18,"type"],[208,24,234,22],[208,25,234,23],[209,2,235,0],[210,2,237,7],[210,11,237,16,"clear"],[210,16,237,21,"clear"],[210,17,237,21],[210,19,237,30],[211,4,238,2],[211,8,238,6,"logs"],[211,12,238,10],[211,13,238,11,"size"],[211,17,238,15],[211,20,238,18],[211,21,238,19],[211,23,238,21],[212,6,239,4,"logs"],[212,10,239,8],[212,13,239,11],[212,17,239,15,"Set"],[212,20,239,18],[212,21,239,19],[212,22,239,20],[213,6,240,4,"setSelectedLog"],[213,20,240,18],[213,21,240,19],[213,22,240,20],[213,23,240,21],[213,24,240,22],[214,4,241,2],[215,2,242,0],[216,2,244,7],[216,11,244,16,"setSelectedLog"],[216,25,244,30,"setSelectedLog"],[216,26,244,31,"proposedNewIndex"],[216,42,244,55],[216,44,244,63],[217,4,245,2],[217,10,245,8,"oldIndex"],[217,18,245,16],[217,21,245,19,"_selectedIndex"],[217,35,245,33],[218,4,246,2],[218,8,246,6,"newIndex"],[218,16,246,14],[218,19,246,17,"proposedNewIndex"],[218,35,246,33],[219,4,248,2],[219,10,248,8,"logArray"],[219,18,248,16],[219,21,248,19,"Array"],[219,26,248,24],[219,27,248,25,"from"],[219,31,248,29],[219,32,248,30,"logs"],[219,36,248,34],[219,37,248,35],[220,4,249,2],[220,8,249,6,"index"],[220,13,249,11],[220,16,249,14,"logArray"],[220,24,249,22],[220,25,249,23,"length"],[220,31,249,29],[220,34,249,32],[220,35,249,33],[221,4,250,2],[221,11,250,9,"index"],[221,16,250,14],[221,20,250,18],[221,21,250,19],[221,23,250,21],[222,6,251,4],[223,6,252,4],[223,10,252,8,"logArray"],[223,18,252,16],[223,19,252,17,"index"],[223,24,252,22],[223,25,252,23],[223,26,252,24,"level"],[223,31,252,29],[223,36,252,34],[223,44,252,42],[223,46,252,44],[224,8,253,6,"newIndex"],[224,16,253,14],[224,19,253,17,"index"],[224,24,253,22],[225,8,254,6],[226,6,255,4],[227,6,256,4,"index"],[227,11,256,9],[227,15,256,13],[227,16,256,14],[228,4,257,2],[229,4,258,2,"_selectedIndex"],[229,18,258,16],[229,21,258,19,"newIndex"],[229,29,258,27],[230,4,259,2,"handleUpdate"],[230,16,259,14],[230,17,259,15],[230,18,259,16],[231,4,260,2],[231,8,260,6,"NativeLogBox"],[231,20,260,18],[231,21,260,18,"default"],[231,28,260,18],[231,30,260,20],[232,6,261,4,"setTimeout"],[232,16,261,14],[232,17,261,15],[232,23,261,21],[233,8,262,6],[233,12,262,10,"oldIndex"],[233,20,262,18],[233,23,262,21],[233,24,262,22],[233,28,262,26,"newIndex"],[233,36,262,34],[233,40,262,38],[233,41,262,39],[233,43,262,41],[234,10,263,8,"NativeLogBox"],[234,22,263,20],[234,23,263,20,"default"],[234,30,263,20],[234,31,263,21,"show"],[234,35,263,25],[234,36,263,26],[234,37,263,27],[235,8,264,6],[235,9,264,7],[235,15,264,13],[235,19,264,17,"oldIndex"],[235,27,264,25],[235,31,264,29],[235,32,264,30],[235,36,264,34,"newIndex"],[235,44,264,42],[235,47,264,45],[235,48,264,46],[235,50,264,48],[236,10,265,8,"NativeLogBox"],[236,22,265,20],[236,23,265,20,"default"],[236,30,265,20],[236,31,265,21,"hide"],[236,35,265,25],[236,36,265,26],[236,37,265,27],[237,8,266,6],[238,6,267,4],[238,7,267,5],[238,9,267,7],[238,10,267,8],[238,11,267,9],[239,4,268,2],[240,2,269,0],[241,2,271,7],[241,11,271,16,"clearWarnings"],[241,24,271,29,"clearWarnings"],[241,25,271,29],[241,27,271,38],[242,4,272,2],[242,10,272,8,"newLogs"],[242,17,272,15],[242,20,272,18,"Array"],[242,25,272,23],[242,26,272,24,"from"],[242,30,272,28],[242,31,272,29,"logs"],[242,35,272,33],[242,36,272,34],[242,37,272,35,"filter"],[242,43,272,41],[242,44,272,43,"log"],[242,47,272,46],[242,51,272,51,"log"],[242,54,272,54],[242,55,272,55,"level"],[242,60,272,60],[242,65,272,65],[242,71,272,71],[242,72,272,72],[243,4,273,2],[243,8,273,6,"newLogs"],[243,15,273,13],[243,16,273,14,"length"],[243,22,273,20],[243,27,273,25,"logs"],[243,31,273,29],[243,32,273,30,"size"],[243,36,273,34],[243,38,273,36],[244,6,274,4,"logs"],[244,10,274,8],[244,13,274,11],[244,17,274,15,"Set"],[244,20,274,18],[244,21,274,19,"newLogs"],[244,28,274,26],[244,29,274,27],[245,6,275,4,"setSelectedLog"],[245,20,275,18],[245,21,275,19],[245,22,275,20],[245,23,275,21],[245,24,275,22],[246,6,276,4,"handleUpdate"],[246,18,276,16],[246,19,276,17],[246,20,276,18],[247,4,277,2],[248,2,278,0],[249,2,280,7],[249,11,280,16,"clearErrors"],[249,22,280,27,"clearErrors"],[249,23,280,27],[249,25,280,36],[250,4,281,2],[250,10,281,8,"newLogs"],[250,17,281,15],[250,20,281,18,"Array"],[250,25,281,23],[250,26,281,24,"from"],[250,30,281,28],[250,31,281,29,"logs"],[250,35,281,33],[250,36,281,34],[250,37,281,35,"filter"],[250,43,281,41],[250,44,281,43,"log"],[250,47,281,46],[250,51,281,51,"log"],[250,54,281,54],[250,55,281,55,"level"],[250,60,281,60],[250,65,281,65],[250,72,281,72],[250,76,281,76,"log"],[250,79,281,79],[250,80,281,80,"level"],[250,85,281,85],[250,90,281,90],[250,97,281,97],[250,98,281,98],[251,4,282,2],[251,8,282,6,"newLogs"],[251,15,282,13],[251,16,282,14,"length"],[251,22,282,20],[251,27,282,25,"logs"],[251,31,282,29],[251,32,282,30,"size"],[251,36,282,34],[251,38,282,36],[252,6,283,4,"logs"],[252,10,283,8],[252,13,283,11],[252,17,283,15,"Set"],[252,20,283,18],[252,21,283,19,"newLogs"],[252,28,283,26],[252,29,283,27],[253,6,284,4,"setSelectedLog"],[253,20,284,18],[253,21,284,19],[253,22,284,20],[253,23,284,21],[253,24,284,22],[254,4,285,2],[255,2,286,0],[256,2,288,7],[256,11,288,16,"dismiss"],[256,18,288,23,"dismiss"],[256,19,288,24,"log"],[256,22,288,38],[256,24,288,46],[257,4,289,2],[257,8,289,6,"logs"],[257,12,289,10],[257,13,289,11,"has"],[257,16,289,14],[257,17,289,15,"log"],[257,20,289,18],[257,21,289,19],[257,23,289,21],[258,6,290,4,"logs"],[258,10,290,8],[258,11,290,9,"delete"],[258,17,290,15],[258,18,290,16,"log"],[258,21,290,19],[258,22,290,20],[259,6,291,4,"handleUpdate"],[259,18,291,16],[259,19,291,17],[259,20,291,18],[260,4,292,2],[261,2,293,0],[262,2,295,7],[262,11,295,16,"getIgnorePatterns"],[262,28,295,33,"getIgnorePatterns"],[262,29,295,33],[262,31,295,53],[263,4,296,2],[263,11,296,9,"Array"],[263,16,296,14],[263,17,296,15,"from"],[263,21,296,19],[263,22,296,20,"ignorePatterns"],[263,36,296,34],[263,37,296,35],[264,2,297,0],[265,2,299,7],[265,11,299,16,"addIgnorePatterns"],[265,28,299,33,"addIgnorePatterns"],[265,29,299,34,"patterns"],[265,37,299,59],[265,39,299,67],[266,4,300,2],[266,10,300,8,"existingSize"],[266,22,300,20],[266,25,300,23,"ignorePatterns"],[266,39,300,37],[266,40,300,38,"size"],[266,44,300,42],[267,4,301,2],[268,4,302,2],[269,4,303,2,"patterns"],[269,12,303,10],[269,13,303,11,"forEach"],[269,20,303,18],[269,21,303,20,"pattern"],[269,28,303,42],[269,32,303,47],[270,6,304,4],[270,10,304,8,"pattern"],[270,17,304,15],[270,29,304,27,"RegExp"],[270,35,304,33],[270,37,304,35],[271,8,305,6],[271,13,305,11],[271,19,305,17,"existingPattern"],[271,34,305,32],[271,38,305,36,"ignorePatterns"],[271,52,305,50],[271,54,305,52],[272,10,306,8],[272,14,307,10,"existingPattern"],[272,29,307,25],[272,41,307,37,"RegExp"],[272,47,307,43],[272,51,308,10,"existingPattern"],[272,66,308,25],[272,67,308,26,"toString"],[272,75,308,34],[272,76,308,35],[272,77,308,36],[272,82,308,41,"pattern"],[272,89,308,48],[272,90,308,49,"toString"],[272,98,308,57],[272,99,308,58],[272,100,308,59],[272,102,309,10],[273,12,310,10],[274,10,311,8],[275,8,312,6],[276,8,313,6,"ignorePatterns"],[276,22,313,20],[276,23,313,21,"add"],[276,26,313,24],[276,27,313,25,"pattern"],[276,34,313,32],[276,35,313,33],[277,6,314,4],[278,6,315,4,"ignorePatterns"],[278,20,315,18],[278,21,315,19,"add"],[278,24,315,22],[278,25,315,23,"pattern"],[278,32,315,30],[278,33,315,31],[279,4,316,2],[279,5,316,3],[279,6,316,4],[280,4,317,2],[280,8,317,6,"ignorePatterns"],[280,22,317,20],[280,23,317,21,"size"],[280,27,317,25],[280,32,317,30,"existingSize"],[280,44,317,42],[280,46,317,44],[281,6,318,4],[282,4,319,2],[283,4,320,2],[284,4,321,2],[285,4,322,2],[286,4,323,2],[287,4,324,2,"logs"],[287,8,324,6],[287,11,324,9],[287,15,324,13,"Set"],[287,18,324,16],[287,19,324,17,"Array"],[287,24,324,22],[287,25,324,23,"from"],[287,29,324,27],[287,30,324,28,"logs"],[287,34,324,32],[287,35,324,33],[287,36,324,34,"filter"],[287,42,324,40],[287,43,324,42,"log"],[287,46,324,45],[287,50,324,50],[287,51,324,51,"isMessageIgnored"],[287,67,324,67],[287,68,324,68,"log"],[287,71,324,71],[287,72,324,72,"message"],[287,79,324,79],[287,80,324,80,"content"],[287,87,324,87],[287,88,324,88],[287,89,324,89],[287,90,324,90],[288,4,325,2,"handleUpdate"],[288,16,325,14],[288,17,325,15],[288,18,325,16],[289,2,326,0],[290,2,328,7],[290,11,328,16,"setDisabled"],[290,22,328,27,"setDisabled"],[290,23,328,28,"value"],[290,28,328,42],[290,30,328,50],[291,4,329,2],[291,8,329,6,"value"],[291,13,329,11],[291,18,329,16,"_isDisabled"],[291,29,329,27],[291,31,329,29],[292,6,330,4],[293,4,331,2],[294,4,332,2,"_isDisabled"],[294,15,332,13],[294,18,332,16,"value"],[294,23,332,21],[295,4,333,2,"handleUpdate"],[295,16,333,14],[295,17,333,15],[295,18,333,16],[296,2,334,0],[297,2,336,7],[297,11,336,16,"isDisabled"],[297,21,336,26,"isDisabled"],[297,22,336,26],[297,24,336,38],[298,4,337,2],[298,11,337,9,"_isDisabled"],[298,22,337,20],[299,2,338,0],[300,2,340,7],[300,11,340,16,"observe"],[300,18,340,23,"observe"],[300,19,340,24,"observer"],[300,27,340,42],[300,29,340,58],[301,4,341,2],[301,10,341,8,"subscription"],[301,22,341,20],[301,25,341,23],[302,6,341,25,"observer"],[303,4,341,34],[303,5,341,35],[304,4,342,2,"observers"],[304,13,342,11],[304,14,342,12,"add"],[304,17,342,15],[304,18,342,16,"subscription"],[304,30,342,28],[304,31,342,29],[305,4,344,2,"observer"],[305,12,344,10],[305,13,344,11,"getNextState"],[305,25,344,23],[305,26,344,24],[305,27,344,25],[305,28,344,26],[306,4,346,2],[306,11,346,9],[307,6,347,4,"unsubscribe"],[307,17,347,15,"unsubscribe"],[307,18,347,15],[307,20,347,24],[308,8,348,6,"observers"],[308,17,348,15],[308,18,348,16,"delete"],[308,24,348,22],[308,25,348,23,"subscription"],[308,37,348,35],[308,38,348,36],[309,6,349,4],[310,4,350,2],[310,5,350,3],[311,2,351,0],[312,2,353,0],[312,8,353,6,"emitter"],[312,15,353,13],[312,18,353,16],[312,22,353,20,"NativeEventEmitter"],[312,40,353,38],[312,41,353,38,"default"],[312,48,353,38],[312,49,353,39],[313,4,354,2,"addListener"],[313,15,354,13,"addListener"],[313,16,354,13],[313,18,354,16],[313,19,354,17],[313,20,354,18],[314,4,355,2,"removeListeners"],[314,19,355,17,"removeListeners"],[314,20,355,17],[314,22,355,20],[314,23,355,21],[315,2,356,0],[315,3,356,1],[315,4,356,2],[316,2,358,7],[316,11,358,16,"withSubscription"],[316,27,358,32,"withSubscription"],[316,28,358,33,"WrappedComponent"],[316,44,358,67],[316,46,358,94],[317,4,359,2],[317,10,359,8,"LogBoxStateSubscription"],[317,33,359,31],[317,42,359,40,"React"],[317,47,359,45],[317,48,359,46,"Component"],[317,57,359,55],[317,58,359,95],[318,6,360,4],[318,13,360,11,"getDerivedStateFromError"],[318,37,360,35,"getDerivedStateFromError"],[318,38,360,35],[318,40,360,38],[319,8,361,6],[319,15,361,13],[320,10,361,15,"hasError"],[320,18,361,23],[320,20,361,25],[321,8,361,30],[321,9,361,31],[322,6,362,4],[323,6,364,4,"constructor"],[323,17,364,15,"constructor"],[323,18,364,16,"props"],[323,23,364,29],[323,25,364,31],[324,8,365,6],[324,13,365,11],[324,14,365,12,"props"],[324,19,365,17],[324,20,365,18],[325,8,367,6],[325,12,367,10,"process"],[325,19,367,17],[325,20,367,18,"env"],[325,23,367,21],[325,24,367,22,"NODE_ENV"],[325,32,367,30],[325,37,367,35],[325,50,367,48],[325,52,367,50],[326,10,368,8,"emitter"],[326,17,368,15],[326,18,368,16,"addListener"],[326,29,368,27],[326,30,368,28],[326,51,368,49],[326,53,368,51],[326,59,368,57],[327,12,369,10],[327,16,369,14],[327,20,369,18],[327,21,369,19,"state"],[327,26,369,24],[327,27,369,25,"hasError"],[327,35,369,33],[327,37,369,35],[328,14,370,12],[328,18,370,16],[328,19,370,17,"retry"],[328,24,370,22],[328,25,370,23],[328,26,370,24],[329,12,371,10],[330,10,372,8],[330,11,372,9],[330,12,372,10],[331,8,373,6],[332,6,374,4],[333,6,376,4,"componentDidCatch"],[333,23,376,21,"componentDidCatch"],[333,24,376,22,"err"],[333,27,376,32],[333,29,376,34,"errorInfo"],[333,38,376,77],[333,40,376,79],[334,8,377,6],[335,0,378,0],[336,8,379,6,"reportLogBoxError"],[336,25,379,23],[336,26,379,24,"err"],[336,29,379,27],[336,31,379,29,"errorInfo"],[336,40,379,38],[336,41,379,39,"componentStack"],[336,55,379,53],[336,56,379,54],[337,6,380,4],[338,6,384,4,"state"],[338,11,384,9],[338,14,384,12],[339,8,385,6,"logs"],[339,12,385,10],[339,14,385,12],[339,18,385,16,"Set"],[339,21,385,19],[339,22,385,31],[339,23,385,32],[340,8,386,6,"isDisabled"],[340,18,386,16],[340,20,386,18],[340,25,386,23],[341,8,387,6,"hasError"],[341,16,387,14],[341,18,387,16],[341,23,387,21],[342,8,388,6,"selectedLogIndex"],[342,24,388,22],[342,26,388,24],[342,27,388,25],[343,6,389,4],[343,7,389,5],[344,6,391,4,"retry"],[344,11,391,9],[344,14,391,12,"retry"],[344,15,391,12],[344,20,391,18],[345,8,392,6],[345,15,392,13],[345,19,392,17,"Promise"],[345,26,392,24],[345,27,392,32,"resolve"],[345,34,392,39],[345,38,392,44],[346,10,393,8],[346,14,393,12],[346,15,393,13,"setState"],[346,23,393,21],[346,24,393,22],[347,12,393,24,"hasError"],[347,20,393,32],[347,22,393,34],[348,10,393,40],[348,11,393,41],[348,13,393,43],[348,19,393,49],[349,12,394,10,"resolve"],[349,19,394,17],[349,20,394,18],[349,21,394,19],[350,10,395,8],[350,11,395,9],[350,12,395,10],[351,8,396,6],[351,9,396,7],[351,10,396,8],[352,6,397,4],[352,7,397,5],[353,6,399,4,"render"],[353,12,399,10,"render"],[353,13,399,10],[353,15,399,13],[354,8,400,6],[354,28,401,8],[354,32,401,8,"_reactJsxDevRuntime"],[354,51,401,8],[354,52,401,8,"jsxDEV"],[354,58,401,8],[354,60,401,9,"_LogContext"],[354,71,401,19],[354,72,401,19,"LogContext"],[354,82,401,19],[354,83,401,20,"Provider"],[354,91,401,28],[355,10,402,10,"value"],[355,15,402,15],[355,17,402,17],[356,12,403,12,"selectedLogIndex"],[356,28,403,28],[356,30,403,30],[356,34,403,34],[356,35,403,35,"state"],[356,40,403,40],[356,41,403,41,"selectedLogIndex"],[356,57,403,57],[357,12,404,12,"isDisabled"],[357,22,404,22],[357,24,404,24],[357,28,404,28],[357,29,404,29,"state"],[357,34,404,34],[357,35,404,35,"isDisabled"],[357,45,404,45],[358,12,405,12,"logs"],[358,16,405,16],[358,18,405,18,"Array"],[358,23,405,23],[358,24,405,24,"from"],[358,28,405,28],[358,29,405,29],[358,33,405,33],[358,34,405,34,"state"],[358,39,405,39],[358,40,405,40,"logs"],[358,44,405,44],[359,10,406,10],[359,11,406,12],[360,10,406,12,"children"],[360,18,406,12],[360,21,407,11],[360,25,407,15],[360,26,407,16,"state"],[360,31,407,21],[360,32,407,22,"hasError"],[360,40,407,30],[360,43,407,33],[360,47,407,37],[360,50,407,40],[360,54,407,44],[360,55,407,45,"props"],[360,60,407,50],[360,61,407,51,"children"],[360,69,407,59],[360,84,408,10],[360,88,408,10,"_reactJsxDevRuntime"],[360,107,408,10],[360,108,408,10,"jsxDEV"],[360,114,408,10],[360,116,408,11,"WrappedComponent"],[360,132,408,27],[361,12,408,27,"fileName"],[361,20,408,27],[361,22,408,27,"_jsxFileName"],[361,34,408,27],[362,12,408,27,"lineNumber"],[362,22,408,27],[363,12,408,27,"columnNumber"],[363,24,408,27],[364,10,408,27],[364,17,408,29],[364,18,408,30],[365,8,408,30],[366,10,408,30,"fileName"],[366,18,408,30],[366,20,408,30,"_jsxFileName"],[366,32,408,30],[367,10,408,30,"lineNumber"],[367,20,408,30],[368,10,408,30,"columnNumber"],[368,22,408,30],[369,8,408,30],[369,15,409,29],[369,16,409,30],[370,6,411,4],[371,6,413,4,"componentDidMount"],[371,23,413,21,"componentDidMount"],[371,24,413,21],[371,26,413,30],[372,8,414,6],[372,12,414,10],[372,13,414,11,"_subscription"],[372,26,414,24],[372,29,414,27,"observe"],[372,36,414,34],[372,37,414,36,"data"],[372,41,414,40],[372,45,414,45],[373,10,415,8],[374,10,416,8],[374,14,416,12,"data"],[374,18,416,16],[374,19,416,17,"selectedLogIndex"],[374,35,416,33],[374,40,416,38],[374,41,416,39],[374,42,416,40],[374,44,416,42],[375,10,417,8,"React"],[375,15,417,13],[375,16,417,14,"startTransition"],[375,31,417,29],[375,32,417,30],[375,38,417,36],[376,12,418,10],[376,16,418,14],[376,17,418,15,"setState"],[376,25,418,23],[376,26,418,24,"data"],[376,30,418,28],[376,31,418,29],[377,10,419,8],[377,11,419,9],[377,12,419,10],[378,8,420,6],[378,9,420,7],[378,10,420,8],[379,6,421,4],[380,6,423,4,"componentWillUnmount"],[380,26,423,24,"componentWillUnmount"],[380,27,423,24],[380,29,423,33],[381,8,424,6],[381,12,424,10],[381,16,424,14],[381,17,424,15,"_subscription"],[381,30,424,28],[381,34,424,32],[381,38,424,36],[381,40,424,38],[382,10,425,8],[382,14,425,12],[382,15,425,13,"_subscription"],[382,28,425,26],[382,29,425,27,"unsubscribe"],[382,40,425,38],[382,41,425,39],[382,42,425,40],[383,8,426,6],[384,6,427,4],[385,6,429,4,"_handleDismiss"],[385,20,429,18],[385,23,429,21,"_handleDismiss"],[385,24,429,21],[385,29,429,33],[386,8,430,6],[387,8,431,6],[388,8,432,6],[389,8,433,6],[389,14,433,12],[390,10,433,14,"selectedLogIndex"],[390,26,433,30],[391,10,433,32,"logs"],[391,14,433,36],[391,16,433,38,"stateLogs"],[392,8,433,48],[392,9,433,49],[392,12,433,52],[392,16,433,56],[392,17,433,57,"state"],[392,22,433,62],[393,8,434,6],[393,14,434,12,"logsArray"],[393,23,434,21],[393,26,434,24,"Array"],[393,31,434,29],[393,32,434,30,"from"],[393,36,434,34],[393,37,434,35,"stateLogs"],[393,46,434,44],[393,47,434,45],[394,8,435,6],[394,12,435,10,"selectedLogIndex"],[394,28,435,26],[394,32,435,30],[394,36,435,34],[394,38,435,36],[395,10,436,8],[395,14,436,12,"logsArray"],[395,23,436,21],[395,24,436,22,"length"],[395,30,436,28],[395,33,436,31],[395,34,436,32],[395,38,436,36],[395,39,436,37],[395,41,436,39],[396,12,437,10,"setSelectedLog"],[396,26,437,24],[396,27,437,25],[396,28,437,26],[396,29,437,27],[396,30,437,28],[397,10,438,8],[397,11,438,9],[397,17,438,15],[397,21,438,19,"selectedLogIndex"],[397,37,438,35],[397,41,438,39,"logsArray"],[397,50,438,48],[397,51,438,49,"length"],[397,57,438,55],[397,60,438,58],[397,61,438,59],[397,63,438,61],[398,12,439,10,"setSelectedLog"],[398,26,439,24],[398,27,439,25,"selectedLogIndex"],[398,43,439,41],[398,46,439,44],[398,47,439,45],[398,48,439,46],[399,10,440,8],[400,10,442,8,"dismiss"],[400,17,442,15],[400,18,442,16,"logsArray"],[400,27,442,25],[400,28,442,26,"selectedLogIndex"],[400,44,442,42],[400,45,442,43],[400,46,442,44],[401,8,443,6],[402,6,444,4],[402,7,444,5],[403,6,446,4,"_handleMinimize"],[403,21,446,19],[403,24,446,22,"_handleMinimize"],[403,25,446,22],[403,30,446,34],[404,8,447,6,"setSelectedLog"],[404,22,447,20],[404,23,447,21],[404,24,447,22],[404,25,447,23],[404,26,447,24],[405,6,448,4],[405,7,448,5],[406,6,450,4,"_handleSetSelectedLog"],[406,27,450,25],[406,30,450,29,"index"],[406,35,450,42],[406,39,450,53],[407,8,451,6,"setSelectedLog"],[407,22,451,20],[407,23,451,21,"index"],[407,28,451,26],[407,29,451,27],[408,6,452,4],[408,7,452,5],[409,4,453,2],[411,4,455,2],[412,4,456,2],[412,11,456,9,"LogBoxStateSubscription"],[412,34,456,32],[413,2,457,0],[414,0,457,1],[414,3]],"functionMap":{"names":["<global>","getNextState","reportLogBoxError","reportUnexpectedLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setTimeout$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","newLog.symbolicate$argument_1","addLog","addException","symbolicateLogNow","log.symbolicate$argument_1","retrySymbolicateLogNow","log.retrySymbolicate$argument_1","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","NativeEventEmitter$argument_0.addListener","NativeEventEmitter$argument_0.removeListeners","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#constructor","emitter.addListener$argument_1","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#retry","Promise$argument_0","setState$argument_1","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","React.startTransition$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;AC2E;CDM;OEE;CFO;OGE;CHG;OIE;CJE;OKE;CLU;AME;+BCE;wBCG,qCD;KDC;CNE;ASE;6CCuB;KDQ;yCFE;KEI;gCEK;KFQ;CTQ;OYE;aLK;GKiB;CZC;OaE;aNG;GMM;CbC;OcE;wBCC;GDE;CdC;OgBE;6BCC;GDE;ChBC;OkBE;ClBE;OmBE;CnBK;OoBE;ebiB;KaM;CpBE;OqBE;0CCC,6BD;CrBM;OuBE;0CDC,uDC;CvBK;OwBE;CxBK;OyBE;CzBE;O0BE;mBCI;GDa;yCJQ,+CI;C1BE;O4BE;C5BM;O6BE;C7BE;O8BE;ICO;KDE;C9BE;EgCG,gBhC;EiCC,oBjC;OkCG;ECC;ICC;KDE;IEE;mDCI;SDI;KFE;IIE;KJI;YKW;+BCC;2CCC;SDE;ODC;KLC;IQE;KRY;ISE;mCCC;8BCG;SDE;ODC;KTC;IYE;KZI;qBaE;Kbe;sBcE;KdE;4BeE;KfE;GDC;ClCI"},"hasCjsExports":false},"type":"js/module"}]}