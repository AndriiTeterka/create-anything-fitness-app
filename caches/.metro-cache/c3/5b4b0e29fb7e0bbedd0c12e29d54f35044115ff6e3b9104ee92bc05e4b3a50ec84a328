{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":64,"index":98}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":99},"end":{"line":3,"column":69,"index":168}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useScheduleStore\", {\n    enumerable: true,\n    get: function () {\n      return useScheduleStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[1], \"zustand/middleware\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var dateKey = date => typeof date === 'string' ? date : new Date(date).toISOString().split('T')[0];\n  var __setStateRef;\n  var useScheduleStore = (0, _zustand.create)((0, _zustandMiddleware.persist)((set, get) => {\n    __setStateRef = set;\n    return {\n      selectedDate: dateKey(new Date()),\n      eventsByDate: {},\n      hydrated: false,\n      // Selectors / setters\n      setSelectedDate: date => set({\n        selectedDate: dateKey(date)\n      }),\n      setEventsForDate: (date, items) => set(state => {\n        var key = dateKey(date);\n        return {\n          eventsByDate: {\n            ...state.eventsByDate,\n            [key]: items\n          }\n        };\n      }),\n      addEvent: (date, item) => set(state => {\n        var key = dateKey(date);\n        var prev = state.eventsByDate[key] || [];\n        return {\n          eventsByDate: {\n            ...state.eventsByDate,\n            [key]: [...prev, item]\n          }\n        };\n      }),\n      removeEvent: (date, id) => set(state => {\n        var key = dateKey(date);\n        var prev = state.eventsByDate[key] || [];\n        return {\n          eventsByDate: {\n            ...state.eventsByDate,\n            [key]: prev.filter(e => e.id !== id)\n          }\n        };\n      }),\n      clearAll: () => set({\n        eventsByDate: {}\n      }),\n      // Demo data until backend/state is wired\n      seedDemoData: () => {\n        var today = new Date();\n        var tomorrow = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n        var inTwoDays = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 2);\n        var schedule = {\n          [dateKey(today)]: [{\n            id: 'w1',\n            title: 'Upper Body Strength',\n            time: '07:00',\n            duration: '45 min'\n          }, {\n            id: 'w2',\n            title: 'Core Stability',\n            time: '18:00',\n            duration: '20 min'\n          }],\n          [dateKey(tomorrow)]: [{\n            id: 'w3',\n            title: 'Morning Cardio',\n            time: '06:30',\n            duration: '30 min'\n          }],\n          [dateKey(inTwoDays)]: [{\n            id: 'w4',\n            title: 'Lower Body Power',\n            time: '17:30',\n            duration: '40 min'\n          }]\n        };\n        set({\n          eventsByDate: schedule\n        });\n      }\n    };\n  }, {\n    name: 'schedule-store-v1',\n    storage: (0, _zustandMiddleware.createJSONStorage)(() => AsyncStorage.default),\n    partialize: state => ({\n      selectedDate: state.selectedDate,\n      eventsByDate: state.eventsByDate\n    }),\n    onRehydrateStorage: () => (_state, _error) => {\n      // Called after hydration completes or errors\n      try {\n        __setStateRef?.({\n          hydrated: true\n        });\n      } catch {}\n    }\n  }));\n});","lineCount":117,"map":[[12,2,10,0,"Object"],[12,8,10,0],[12,9,10,0,"defineProperty"],[12,23,10,0],[12,24,10,0,"exports"],[12,31,10,0],[13,4,10,0,"enumerable"],[13,14,10,0],[14,4,10,0,"get"],[14,7,10,0],[14,18,10,0,"get"],[14,19,10,0],[15,6,10,0],[15,13,10,0,"useScheduleStore"],[15,29,10,0],[16,4,10,0],[17,2,10,0],[18,2,1,0],[18,6,1,0,"_zustand"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_zustandMiddleware"],[19,24,2,0],[19,27,2,0,"require"],[19,34,2,0],[19,35,2,0,"_dependencyMap"],[19,49,2,0],[20,2,3,0],[20,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[20,42,3,0],[20,45,3,0,"require"],[20,52,3,0],[20,53,3,0,"_dependencyMap"],[20,67,3,0],[21,2,3,0],[21,6,3,0,"AsyncStorage"],[21,18,3,0],[21,21,3,0,"_interopDefault"],[21,36,3,0],[21,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[21,73,3,0],[22,2,5,0],[22,6,5,6,"dateKey"],[22,13,5,13],[22,16,5,17,"date"],[22,20,5,21],[22,24,6,2],[22,31,6,9,"date"],[22,35,6,13],[22,40,6,18],[22,48,6,26],[22,51,6,29,"date"],[22,55,6,33],[22,58,6,36],[22,62,6,40,"Date"],[22,66,6,44],[22,67,6,45,"date"],[22,71,6,49],[22,72,6,50],[22,73,6,51,"toISOString"],[22,84,6,62],[22,85,6,63],[22,86,6,64],[22,87,6,65,"split"],[22,92,6,70],[22,93,6,71],[22,96,6,74],[22,97,6,75],[22,98,6,76],[22,99,6,77],[22,100,6,78],[23,2,8,0],[23,6,8,4,"__setStateRef"],[23,19,8,17],[24,2,10,7],[24,6,10,13,"useScheduleStore"],[24,22,10,29],[24,25,10,32],[24,29,10,32,"create"],[24,37,10,38],[24,38,10,38,"create"],[24,44,10,38],[24,46,11,2],[24,50,11,2,"persist"],[24,68,11,9],[24,69,11,9,"persist"],[24,76,11,9],[24,78,12,4],[24,79,12,5,"set"],[24,82,12,8],[24,84,12,10,"get"],[24,87,12,13],[24,92,12,18],[25,4,13,6,"__setStateRef"],[25,17,13,19],[25,20,13,22,"set"],[25,23,13,25],[26,4,14,6],[26,11,14,14],[27,6,15,6,"selectedDate"],[27,18,15,18],[27,20,15,20,"dateKey"],[27,27,15,27],[27,28,15,28],[27,32,15,32,"Date"],[27,36,15,36],[27,37,15,37],[27,38,15,38],[27,39,15,39],[28,6,16,6,"eventsByDate"],[28,18,16,18],[28,20,16,20],[28,21,16,21],[28,22,16,22],[29,6,17,6,"hydrated"],[29,14,17,14],[29,16,17,16],[29,21,17,21],[30,6,19,6],[31,6,20,6,"setSelectedDate"],[31,21,20,21],[31,23,20,24,"date"],[31,27,20,28],[31,31,20,33,"set"],[31,34,20,36],[31,35,20,37],[32,8,20,39,"selectedDate"],[32,20,20,51],[32,22,20,53,"dateKey"],[32,29,20,60],[32,30,20,61,"date"],[32,34,20,65],[33,6,20,67],[33,7,20,68],[33,8,20,69],[34,6,21,6,"setEventsForDate"],[34,22,21,22],[34,24,21,24,"setEventsForDate"],[34,25,21,25,"date"],[34,29,21,29],[34,31,21,31,"items"],[34,36,21,36],[34,41,22,8,"set"],[34,44,22,11],[34,45,22,13,"state"],[34,50,22,18],[34,54,22,23],[35,8,23,10],[35,12,23,16,"key"],[35,15,23,19],[35,18,23,22,"dateKey"],[35,25,23,29],[35,26,23,30,"date"],[35,30,23,34],[35,31,23,35],[36,8,24,10],[36,15,24,17],[37,10,24,19,"eventsByDate"],[37,22,24,31],[37,24,24,33],[38,12,24,35],[38,15,24,38,"state"],[38,20,24,43],[38,21,24,44,"eventsByDate"],[38,33,24,56],[39,12,24,58],[39,13,24,59,"key"],[39,16,24,62],[39,19,24,65,"items"],[40,10,24,71],[41,8,24,73],[41,9,24,74],[42,6,25,8],[42,7,25,9],[42,8,25,10],[43,6,26,6,"addEvent"],[43,14,26,14],[43,16,26,16,"addEvent"],[43,17,26,17,"date"],[43,21,26,21],[43,23,26,23,"item"],[43,27,26,27],[43,32,27,8,"set"],[43,35,27,11],[43,36,27,13,"state"],[43,41,27,18],[43,45,27,23],[44,8,28,10],[44,12,28,16,"key"],[44,15,28,19],[44,18,28,22,"dateKey"],[44,25,28,29],[44,26,28,30,"date"],[44,30,28,34],[44,31,28,35],[45,8,29,10],[45,12,29,16,"prev"],[45,16,29,20],[45,19,29,23,"state"],[45,24,29,28],[45,25,29,29,"eventsByDate"],[45,37,29,41],[45,38,29,42,"key"],[45,41,29,45],[45,42,29,46],[45,46,29,50],[45,48,29,52],[46,8,30,10],[46,15,30,17],[47,10,30,19,"eventsByDate"],[47,22,30,31],[47,24,30,33],[48,12,30,35],[48,15,30,38,"state"],[48,20,30,43],[48,21,30,44,"eventsByDate"],[48,33,30,56],[49,12,30,58],[49,13,30,59,"key"],[49,16,30,62],[49,19,30,65],[49,20,30,66],[49,23,30,69,"prev"],[49,27,30,73],[49,29,30,75,"item"],[49,33,30,79],[50,10,30,81],[51,8,30,83],[51,9,30,84],[52,6,31,8],[52,7,31,9],[52,8,31,10],[53,6,32,6,"removeEvent"],[53,17,32,17],[53,19,32,19,"removeEvent"],[53,20,32,20,"date"],[53,24,32,24],[53,26,32,26,"id"],[53,28,32,28],[53,33,33,8,"set"],[53,36,33,11],[53,37,33,13,"state"],[53,42,33,18],[53,46,33,23],[54,8,34,10],[54,12,34,16,"key"],[54,15,34,19],[54,18,34,22,"dateKey"],[54,25,34,29],[54,26,34,30,"date"],[54,30,34,34],[54,31,34,35],[55,8,35,10],[55,12,35,16,"prev"],[55,16,35,20],[55,19,35,23,"state"],[55,24,35,28],[55,25,35,29,"eventsByDate"],[55,37,35,41],[55,38,35,42,"key"],[55,41,35,45],[55,42,35,46],[55,46,35,50],[55,48,35,52],[56,8,36,10],[56,15,36,17],[57,10,37,12,"eventsByDate"],[57,22,37,24],[57,24,37,26],[58,12,37,28],[58,15,37,31,"state"],[58,20,37,36],[58,21,37,37,"eventsByDate"],[58,33,37,49],[59,12,37,51],[59,13,37,52,"key"],[59,16,37,55],[59,19,37,58,"prev"],[59,23,37,62],[59,24,37,63,"filter"],[59,30,37,69],[59,31,37,71,"e"],[59,32,37,72],[59,36,37,77,"e"],[59,37,37,78],[59,38,37,79,"id"],[59,40,37,81],[59,45,37,86,"id"],[59,47,37,88],[60,10,37,90],[61,8,38,10],[61,9,38,11],[62,6,39,8],[62,7,39,9],[62,8,39,10],[63,6,40,6,"clearAll"],[63,14,40,14],[63,16,40,16,"clearAll"],[63,17,40,16],[63,22,40,22,"set"],[63,25,40,25],[63,26,40,26],[64,8,40,28,"eventsByDate"],[64,20,40,40],[64,22,40,42],[64,23,40,43],[65,6,40,45],[65,7,40,46],[65,8,40,47],[66,6,42,6],[67,6,43,6,"seedDemoData"],[67,18,43,18],[67,20,43,20,"seedDemoData"],[67,21,43,20],[67,26,43,26],[68,8,44,8],[68,12,44,14,"today"],[68,17,44,19],[68,20,44,22],[68,24,44,26,"Date"],[68,28,44,30],[68,29,44,31],[68,30,44,32],[69,8,45,8],[69,12,45,14,"tomorrow"],[69,20,45,22],[69,23,45,25],[69,27,45,29,"Date"],[69,31,45,33],[69,32,45,34,"today"],[69,37,45,39],[69,38,45,40,"getFullYear"],[69,49,45,51],[69,50,45,52],[69,51,45,53],[69,53,45,55,"today"],[69,58,45,60],[69,59,45,61,"getMonth"],[69,67,45,69],[69,68,45,70],[69,69,45,71],[69,71,45,73,"today"],[69,76,45,78],[69,77,45,79,"getDate"],[69,84,45,86],[69,85,45,87],[69,86,45,88],[69,89,45,91],[69,90,45,92],[69,91,45,93],[70,8,46,8],[70,12,46,14,"inTwoDays"],[70,21,46,23],[70,24,46,26],[70,28,46,30,"Date"],[70,32,46,34],[70,33,46,35,"today"],[70,38,46,40],[70,39,46,41,"getFullYear"],[70,50,46,52],[70,51,46,53],[70,52,46,54],[70,54,46,56,"today"],[70,59,46,61],[70,60,46,62,"getMonth"],[70,68,46,70],[70,69,46,71],[70,70,46,72],[70,72,46,74,"today"],[70,77,46,79],[70,78,46,80,"getDate"],[70,85,46,87],[70,86,46,88],[70,87,46,89],[70,90,46,92],[70,91,46,93],[70,92,46,94],[71,8,48,8],[71,12,48,14,"schedule"],[71,20,48,22],[71,23,48,25],[72,10,49,10],[72,11,49,11,"dateKey"],[72,18,49,18],[72,19,49,19,"today"],[72,24,49,24],[72,25,49,25],[72,28,49,28],[72,29,50,12],[73,12,50,14,"id"],[73,14,50,16],[73,16,50,18],[73,20,50,22],[74,12,50,24,"title"],[74,17,50,29],[74,19,50,31],[74,40,50,52],[75,12,50,54,"time"],[75,16,50,58],[75,18,50,60],[75,25,50,67],[76,12,50,69,"duration"],[76,20,50,77],[76,22,50,79],[77,10,50,88],[77,11,50,89],[77,13,51,12],[78,12,51,14,"id"],[78,14,51,16],[78,16,51,18],[78,20,51,22],[79,12,51,24,"title"],[79,17,51,29],[79,19,51,31],[79,35,51,47],[80,12,51,49,"time"],[80,16,51,53],[80,18,51,55],[80,25,51,62],[81,12,51,64,"duration"],[81,20,51,72],[81,22,51,74],[82,10,51,83],[82,11,51,84],[82,12,52,11],[83,10,53,10],[83,11,53,11,"dateKey"],[83,18,53,18],[83,19,53,19,"tomorrow"],[83,27,53,27],[83,28,53,28],[83,31,53,31],[83,32,54,12],[84,12,54,14,"id"],[84,14,54,16],[84,16,54,18],[84,20,54,22],[85,12,54,24,"title"],[85,17,54,29],[85,19,54,31],[85,35,54,47],[86,12,54,49,"time"],[86,16,54,53],[86,18,54,55],[86,25,54,62],[87,12,54,64,"duration"],[87,20,54,72],[87,22,54,74],[88,10,54,83],[88,11,54,84],[88,12,55,11],[89,10,56,10],[89,11,56,11,"dateKey"],[89,18,56,18],[89,19,56,19,"inTwoDays"],[89,28,56,28],[89,29,56,29],[89,32,56,32],[89,33,57,12],[90,12,57,14,"id"],[90,14,57,16],[90,16,57,18],[90,20,57,22],[91,12,57,24,"title"],[91,17,57,29],[91,19,57,31],[91,37,57,49],[92,12,57,51,"time"],[92,16,57,55],[92,18,57,57],[92,25,57,64],[93,12,57,66,"duration"],[93,20,57,74],[93,22,57,76],[94,10,57,85],[94,11,57,86],[95,8,59,8],[95,9,59,9],[96,8,61,8,"set"],[96,11,61,11],[96,12,61,12],[97,10,61,14,"eventsByDate"],[97,22,61,26],[97,24,61,28,"schedule"],[98,8,61,37],[98,9,61,38],[98,10,61,39],[99,6,62,6],[100,4,63,4],[100,5,63,5],[101,2,64,4],[101,3,64,5],[101,5,65,4],[102,4,66,6,"name"],[102,8,66,10],[102,10,66,12],[102,29,66,31],[103,4,67,6,"storage"],[103,11,67,13],[103,13,67,15],[103,17,67,15,"createJSONStorage"],[103,35,67,32],[103,36,67,32,"createJSONStorage"],[103,53,67,32],[103,55,67,33],[103,61,67,39,"AsyncStorage"],[103,73,67,51],[103,74,67,51,"default"],[103,81,67,51],[103,82,67,52],[104,4,68,6,"partialize"],[104,14,68,16],[104,16,68,19,"state"],[104,21,68,24],[104,26,68,30],[105,6,69,8,"selectedDate"],[105,18,69,20],[105,20,69,22,"state"],[105,25,69,27],[105,26,69,28,"selectedDate"],[105,38,69,40],[106,6,70,8,"eventsByDate"],[106,18,70,20],[106,20,70,22,"state"],[106,25,70,27],[106,26,70,28,"eventsByDate"],[107,4,71,6],[107,5,71,7],[107,6,71,8],[108,4,72,6,"onRehydrateStorage"],[108,22,72,24],[108,24,72,26,"onRehydrateStorage"],[108,25,72,26],[108,30,72,32],[108,31,72,33,"_state"],[108,37,72,39],[108,39,72,41,"_error"],[108,45,72,47],[108,50,72,52],[109,6,73,8],[110,6,74,8],[110,10,74,12],[111,8,75,10,"__setStateRef"],[111,21,75,23],[111,24,75,26],[112,10,75,28,"hydrated"],[112,18,75,36],[112,20,75,38],[113,8,75,43],[113,9,75,44],[113,10,75,45],[114,6,76,8],[114,7,76,9],[114,8,76,10],[114,14,76,16],[114,15,76,17],[115,4,77,6],[116,2,78,4],[116,3,79,2],[116,4,80,0],[116,5,80,1],[117,0,80,2],[117,3]],"functionMap":{"names":["<global>","dateKey","persist$argument_0","setSelectedDate","setEventsForDate","set$argument_0","addEvent","removeEvent","prev.filter$argument_0","clearAll","seedDemoData","createJSONStorage$argument_0","persist$argument_1.partialize","persist$argument_1.onRehydrateStorage","<anonymous>"],"mappings":"AAA;gBCI;8EDC;IEM;uBCQ,8CD;wBEC;YCC;SDG,CF;gBIC;YDC;SCI,CJ;mBKC;YFC;sEGI,kBH;SEE,CL;gBOC,+BP;oBQG;ORmB;KFE;iCWG,kBX;kBYC;QZG;0BaC,MC;OdK"},"hasCjsExports":false},"type":"js/module"}]}