{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./DeprecatedNavigationInChildContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":93,"index":140}}],"key":"q52xm1L6GcwAHIDdgCYRmHsHIPQ=","exportNames":["*"],"imports":1}},{"name":"./NavigationBuilderContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":141},"end":{"line":5,"column":73,"index":214}}],"key":"vvb+tbs8cGp9hlTxgL5PZCjRz5E=","exportNames":["*"],"imports":1}},{"name":"./useOnPreventRemove.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":215},"end":{"line":6,"column":82,"index":297}}],"key":"PbhCaGdR39Jz0OkkS237FN1qkxU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useOnAction = useOnAction;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _DeprecatedNavigationInChildContextJs = require(_dependencyMap[1], \"./DeprecatedNavigationInChildContext.js\");\n  var _NavigationBuilderContextJs = require(_dependencyMap[2], \"./NavigationBuilderContext.js\");\n  var _useOnPreventRemoveJs = require(_dependencyMap[3], \"./useOnPreventRemove.js\");\n  /**\n   * Hook to handle actions for a navigator, including state updates and bubbling.\n   *\n   * Bubbling an action is achieved in 2 ways:\n   * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n   * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n   *\n   * When the action handler handles as action, it returns `true`, otherwise `false`.\n   */\n  function useOnAction({\n    router,\n    getState,\n    setState,\n    key,\n    actionListeners,\n    beforeRemoveListeners,\n    routerConfigOptions,\n    emitter\n  }) {\n    const {\n      onAction: onActionParent,\n      onRouteFocus: onRouteFocusParent,\n      addListener: addListenerParent,\n      onDispatchAction\n    } = React.useContext(_NavigationBuilderContextJs.NavigationBuilderContext);\n    const navigationInChildEnabled = React.useContext(_DeprecatedNavigationInChildContextJs.DeprecatedNavigationInChildContext);\n    const routerConfigOptionsRef = React.useRef(routerConfigOptions);\n    React.useEffect(() => {\n      routerConfigOptionsRef.current = routerConfigOptions;\n    });\n    const onAction = React.useCallback((action, visitedNavigators = new Set()) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n      visitedNavigators.add(state.key);\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(state, action, routerConfigOptionsRef.current);\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result = result === null && action.target === state.key ? state : result;\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n          if (state !== result) {\n            const isPrevented = (0, _useOnPreventRemoveJs.shouldPreventRemove)(emitter, beforeRemoveListeners, state.routes, result.routes, action);\n            if (isPrevented) {\n              return true;\n            }\n            setState(result);\n          }\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n          return true;\n        }\n      }\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n      if (typeof action.target === 'string' ||\n      // For backward compatibility\n      action.type === 'NAVIGATE_DEPRECATED' || navigationInChildEnabled) {\n        // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n        // Handling this when target isn't specified is deprecated and will be removed in the future\n        for (let i = actionListeners.length - 1; i >= 0; i--) {\n          const listener = actionListeners[i];\n          if (listener(action, visitedNavigators)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }, [actionListeners, beforeRemoveListeners, emitter, getState, navigationInChildEnabled, key, onActionParent, onDispatchAction, onRouteFocusParent, router, setState]);\n    (0, _useOnPreventRemoveJs.useOnPreventRemove)({\n      getState,\n      emitter,\n      beforeRemoveListeners\n    });\n    React.useEffect(() => addListenerParent?.('action', onAction), [addListenerParent, onAction]);\n    return onAction;\n  }\n});","lineCount":115,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,16,0,"exports"],[16,9,16,0],[16,10,16,0,"useOnAction"],[16,21,16,0],[16,24,16,0,"useOnAction"],[16,35,16,0],[17,2,3,0],[17,6,3,0,"_react"],[17,12,3,0],[17,15,3,0,"require"],[17,22,3,0],[17,23,3,0,"_dependencyMap"],[17,37,3,0],[18,2,3,0],[18,6,3,0,"React"],[18,11,3,0],[18,14,3,0,"_interopNamespace"],[18,31,3,0],[18,32,3,0,"_react"],[18,38,3,0],[19,2,4,0],[19,6,4,0,"_DeprecatedNavigationInChildContextJs"],[19,43,4,0],[19,46,4,0,"require"],[19,53,4,0],[19,54,4,0,"_dependencyMap"],[19,68,4,0],[20,2,5,0],[20,6,5,0,"_NavigationBuilderContextJs"],[20,33,5,0],[20,36,5,0,"require"],[20,43,5,0],[20,44,5,0,"_dependencyMap"],[20,58,5,0],[21,2,6,0],[21,6,6,0,"_useOnPreventRemoveJs"],[21,27,6,0],[21,30,6,0,"require"],[21,37,6,0],[21,38,6,0,"_dependencyMap"],[21,52,6,0],[22,2,7,0],[23,0,8,0],[24,0,9,0],[25,0,10,0],[26,0,11,0],[27,0,12,0],[28,0,13,0],[29,0,14,0],[30,0,15,0],[31,2,16,7],[31,11,16,16,"useOnAction"],[31,22,16,27,"useOnAction"],[31,23,16,28],[32,4,17,2,"router"],[32,10,17,8],[33,4,18,2,"getState"],[33,12,18,10],[34,4,19,2,"setState"],[34,12,19,10],[35,4,20,2,"key"],[35,7,20,5],[36,4,21,2,"actionListeners"],[36,19,21,17],[37,4,22,2,"beforeRemoveListeners"],[37,25,22,23],[38,4,23,2,"routerConfigOptions"],[38,23,23,21],[39,4,24,2,"emitter"],[40,2,25,0],[40,3,25,1],[40,5,25,3],[41,4,26,2],[41,10,26,8],[42,6,27,4,"onAction"],[42,14,27,12],[42,16,27,14,"onActionParent"],[42,30,27,28],[43,6,28,4,"onRouteFocus"],[43,18,28,16],[43,20,28,18,"onRouteFocusParent"],[43,38,28,36],[44,6,29,4,"addListener"],[44,17,29,15],[44,19,29,17,"addListenerParent"],[44,36,29,34],[45,6,30,4,"onDispatchAction"],[46,4,31,2],[46,5,31,3],[46,8,31,6,"React"],[46,13,31,11],[46,14,31,12,"useContext"],[46,24,31,22],[46,25,31,23,"NavigationBuilderContext"],[46,52,31,47],[46,53,31,47,"NavigationBuilderContext"],[46,77,31,47],[46,78,31,48],[47,4,32,2],[47,10,32,8,"navigationInChildEnabled"],[47,34,32,32],[47,37,32,35,"React"],[47,42,32,40],[47,43,32,41,"useContext"],[47,53,32,51],[47,54,32,52,"DeprecatedNavigationInChildContext"],[47,91,32,86],[47,92,32,86,"DeprecatedNavigationInChildContext"],[47,126,32,86],[47,127,32,87],[48,4,33,2],[48,10,33,8,"routerConfigOptionsRef"],[48,32,33,30],[48,35,33,33,"React"],[48,40,33,38],[48,41,33,39,"useRef"],[48,47,33,45],[48,48,33,46,"routerConfigOptions"],[48,67,33,65],[48,68,33,66],[49,4,34,2,"React"],[49,9,34,7],[49,10,34,8,"useEffect"],[49,19,34,17],[49,20,34,18],[49,26,34,24],[50,6,35,4,"routerConfigOptionsRef"],[50,28,35,26],[50,29,35,27,"current"],[50,36,35,34],[50,39,35,37,"routerConfigOptions"],[50,58,35,56],[51,4,36,2],[51,5,36,3],[51,6,36,4],[52,4,37,2],[52,10,37,8,"onAction"],[52,18,37,16],[52,21,37,19,"React"],[52,26,37,24],[52,27,37,25,"useCallback"],[52,38,37,36],[52,39,37,37],[52,40,37,38,"action"],[52,46,37,44],[52,48,37,46,"visitedNavigators"],[52,65,37,63],[52,68,37,66],[52,72,37,70,"Set"],[52,75,37,73],[52,76,37,74],[52,77,37,75],[52,82,37,80],[53,6,38,4],[53,12,38,10,"state"],[53,17,38,15],[53,20,38,18,"getState"],[53,28,38,26],[53,29,38,27],[53,30,38,28],[55,6,40,4],[56,6,41,4],[57,6,42,4],[57,10,42,8,"visitedNavigators"],[57,27,42,25],[57,28,42,26,"has"],[57,31,42,29],[57,32,42,30,"state"],[57,37,42,35],[57,38,42,36,"key"],[57,41,42,39],[57,42,42,40],[57,44,42,42],[58,8,43,6],[58,15,43,13],[58,20,43,18],[59,6,44,4],[60,6,45,4,"visitedNavigators"],[60,23,45,21],[60,24,45,22,"add"],[60,27,45,25],[60,28,45,26,"state"],[60,33,45,31],[60,34,45,32,"key"],[60,37,45,35],[60,38,45,36],[61,6,46,4],[61,10,46,8],[61,17,46,15,"action"],[61,23,46,21],[61,24,46,22,"target"],[61,30,46,28],[61,35,46,33],[61,43,46,41],[61,47,46,45,"action"],[61,53,46,51],[61,54,46,52,"target"],[61,60,46,58],[61,65,46,63,"state"],[61,70,46,68],[61,71,46,69,"key"],[61,74,46,72],[61,76,46,74],[62,8,47,6],[62,12,47,10,"result"],[62,18,47,16],[62,21,47,19,"router"],[62,27,47,25],[62,28,47,26,"getStateForAction"],[62,45,47,43],[62,46,47,44,"state"],[62,51,47,49],[62,53,47,51,"action"],[62,59,47,57],[62,61,47,59,"routerConfigOptionsRef"],[62,83,47,81],[62,84,47,82,"current"],[62,91,47,89],[62,92,47,90],[64,8,49,6],[65,8,50,6],[66,8,51,6,"result"],[66,14,51,12],[66,17,51,15,"result"],[66,23,51,21],[66,28,51,26],[66,32,51,30],[66,36,51,34,"action"],[66,42,51,40],[66,43,51,41,"target"],[66,49,51,47],[66,54,51,52,"state"],[66,59,51,57],[66,60,51,58,"key"],[66,63,51,61],[66,66,51,64,"state"],[66,71,51,69],[66,74,51,72,"result"],[66,80,51,78],[67,8,52,6],[67,12,52,10,"result"],[67,18,52,16],[67,23,52,21],[67,27,52,25],[67,29,52,27],[68,10,53,8,"onDispatchAction"],[68,26,53,24],[68,27,53,25,"action"],[68,33,53,31],[68,35,53,33,"state"],[68,40,53,38],[68,45,53,43,"result"],[68,51,53,49],[68,52,53,50],[69,10,54,8],[69,14,54,12,"state"],[69,19,54,17],[69,24,54,22,"result"],[69,30,54,28],[69,32,54,30],[70,12,55,10],[70,18,55,16,"isPrevented"],[70,29,55,27],[70,32,55,30],[70,36,55,30,"shouldPreventRemove"],[70,57,55,49],[70,58,55,49,"shouldPreventRemove"],[70,77,55,49],[70,79,55,50,"emitter"],[70,86,55,57],[70,88,55,59,"beforeRemoveListeners"],[70,109,55,80],[70,111,55,82,"state"],[70,116,55,87],[70,117,55,88,"routes"],[70,123,55,94],[70,125,55,96,"result"],[70,131,55,102],[70,132,55,103,"routes"],[70,138,55,109],[70,140,55,111,"action"],[70,146,55,117],[70,147,55,118],[71,12,56,10],[71,16,56,14,"isPrevented"],[71,27,56,25],[71,29,56,27],[72,14,57,12],[72,21,57,19],[72,25,57,23],[73,12,58,10],[74,12,59,10,"setState"],[74,20,59,18],[74,21,59,19,"result"],[74,27,59,25],[74,28,59,26],[75,10,60,8],[76,10,61,8],[76,14,61,12,"onRouteFocusParent"],[76,32,61,30],[76,37,61,35,"undefined"],[76,46,61,44],[76,48,61,46],[77,12,62,10],[78,12,63,10],[79,12,64,10],[79,18,64,16,"shouldFocus"],[79,29,64,27],[79,32,64,30,"router"],[79,38,64,36],[79,39,64,37,"shouldActionChangeFocus"],[79,62,64,60],[79,63,64,61,"action"],[79,69,64,67],[79,70,64,68],[80,12,65,10],[80,16,65,14,"shouldFocus"],[80,27,65,25],[80,31,65,29,"key"],[80,34,65,32],[80,39,65,37,"undefined"],[80,48,65,46],[80,50,65,48],[81,14,66,12,"onRouteFocusParent"],[81,32,66,30],[81,33,66,31,"key"],[81,36,66,34],[81,37,66,35],[82,12,67,10],[83,10,68,8],[84,10,69,8],[84,17,69,15],[84,21,69,19],[85,8,70,6],[86,6,71,4],[87,6,72,4],[87,10,72,8,"onActionParent"],[87,24,72,22],[87,29,72,27,"undefined"],[87,38,72,36],[87,40,72,38],[88,8,73,6],[89,8,74,6],[89,12,74,10,"onActionParent"],[89,26,74,24],[89,27,74,25,"action"],[89,33,74,31],[89,35,74,33,"visitedNavigators"],[89,52,74,50],[89,53,74,51],[89,55,74,53],[90,10,75,8],[90,17,75,15],[90,21,75,19],[91,8,76,6],[92,6,77,4],[93,6,78,4],[93,10,78,8],[93,17,78,15,"action"],[93,23,78,21],[93,24,78,22,"target"],[93,30,78,28],[93,35,78,33],[93,43,78,41],[94,6,79,4],[95,6,80,4,"action"],[95,12,80,10],[95,13,80,11,"type"],[95,17,80,15],[95,22,80,20],[95,43,80,41],[95,47,80,45,"navigationInChildEnabled"],[95,71,80,69],[95,73,80,71],[96,8,81,6],[97,8,82,6],[98,8,83,6],[98,13,83,11],[98,17,83,15,"i"],[98,18,83,16],[98,21,83,19,"actionListeners"],[98,36,83,34],[98,37,83,35,"length"],[98,43,83,41],[98,46,83,44],[98,47,83,45],[98,49,83,47,"i"],[98,50,83,48],[98,54,83,52],[98,55,83,53],[98,57,83,55,"i"],[98,58,83,56],[98,60,83,58],[98,62,83,60],[99,10,84,8],[99,16,84,14,"listener"],[99,24,84,22],[99,27,84,25,"actionListeners"],[99,42,84,40],[99,43,84,41,"i"],[99,44,84,42],[99,45,84,43],[100,10,85,8],[100,14,85,12,"listener"],[100,22,85,20],[100,23,85,21,"action"],[100,29,85,27],[100,31,85,29,"visitedNavigators"],[100,48,85,46],[100,49,85,47],[100,51,85,49],[101,12,86,10],[101,19,86,17],[101,23,86,21],[102,10,87,8],[103,8,88,6],[104,6,89,4],[105,6,90,4],[105,13,90,11],[105,18,90,16],[106,4,91,2],[106,5,91,3],[106,7,91,5],[106,8,91,6,"actionListeners"],[106,23,91,21],[106,25,91,23,"beforeRemoveListeners"],[106,46,91,44],[106,48,91,46,"emitter"],[106,55,91,53],[106,57,91,55,"getState"],[106,65,91,63],[106,67,91,65,"navigationInChildEnabled"],[106,91,91,89],[106,93,91,91,"key"],[106,96,91,94],[106,98,91,96,"onActionParent"],[106,112,91,110],[106,114,91,112,"onDispatchAction"],[106,130,91,128],[106,132,91,130,"onRouteFocusParent"],[106,150,91,148],[106,152,91,150,"router"],[106,158,91,156],[106,160,91,158,"setState"],[106,168,91,166],[106,169,91,167],[106,170,91,168],[107,4,92,2],[107,8,92,2,"useOnPreventRemove"],[107,29,92,20],[107,30,92,20,"useOnPreventRemove"],[107,48,92,20],[107,50,92,21],[108,6,93,4,"getState"],[108,14,93,12],[109,6,94,4,"emitter"],[109,13,94,11],[110,6,95,4,"beforeRemoveListeners"],[111,4,96,2],[111,5,96,3],[111,6,96,4],[112,4,97,2,"React"],[112,9,97,7],[112,10,97,8,"useEffect"],[112,19,97,17],[112,20,97,18],[112,26,97,24,"addListenerParent"],[112,43,97,41],[112,46,97,44],[112,54,97,52],[112,56,97,54,"onAction"],[112,64,97,62],[112,65,97,63],[112,67,97,65],[112,68,97,66,"addListenerParent"],[112,85,97,83],[112,87,97,85,"onAction"],[112,95,97,93],[112,96,97,94],[112,97,97,95],[113,4,98,2],[113,11,98,9,"onAction"],[113,19,98,17],[114,2,99,0],[115,0,99,1],[115,3]],"functionMap":{"names":["<global>","useOnAction","React.useEffect$argument_0","onAction"],"mappings":"AAA;OCe;kBCkB;GDE;qCEC;GFsD;kBCM,6CD;CDE"},"hasCjsExports":false},"type":"js/module"}]}