{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":277},"end":{"line":2,"column":31,"index":308}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./utils/fetchData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":374},"end":{"line":4,"column":46,"index":420}}],"key":"bvuZtUrCBORS7e0mnZMXcup8nyI=","exportNames":["*"],"imports":1}},{"name":"./xmlTags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":421},"end":{"line":5,"column":33,"index":454}}],"key":"UjGGlBNdDx1pDIGgBuGLg90Be9Q=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.SvgUri = SvgUri;\n  Object.defineProperty(exports, \"SvgFromXml\", {\n    enumerable: true,\n    get: function () {\n      return SvgFromXml;\n    }\n  });\n  Object.defineProperty(exports, \"SvgFromUri\", {\n    enumerable: true,\n    get: function () {\n      return SvgFromUri;\n    }\n  });\n  Object.defineProperty(exports, \"camelCase\", {\n    enumerable: true,\n    get: function () {\n      return camelCase;\n    }\n  });\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = parse;\n  Object.defineProperty(exports, \"tags\", {\n    enumerable: true,\n    get: function () {\n      return _xmlTags.tags;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _utilsFetchData = require(_dependencyMap[1], \"./utils/fetchData\");\n  var _xmlTags = require(_dependencyMap[2], \"./xmlTags\");\n  function _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function (n) {\n      for (var e = 1; e < arguments.length; e++) {\n        var t = arguments[e];\n        for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n      }\n      return n;\n    }, _extends.apply(null, arguments);\n  }\n  function missingTag() {\n    return null;\n  }\n  function SvgAst({\n    ast,\n    override\n  }) {\n    if (!ast) {\n      return null;\n    }\n    const {\n      props,\n      children\n    } = ast;\n    const Svg = _xmlTags.tags.svg;\n    return /*#__PURE__*/React.createElement(Svg, _extends({}, props, override), children);\n  }\n  const err = console.error.bind(console);\n  function SvgXml(props) {\n    const {\n      onError = err,\n      xml,\n      override,\n      fallback\n    } = props;\n    try {\n      const ast = (0, _react.useMemo)(() => xml !== null ? parse(xml) : null, [xml]);\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: override || props\n      });\n    } catch (error) {\n      onError(error);\n      return fallback ?? null;\n    }\n  }\n  function SvgUri(props) {\n    const {\n      onError = err,\n      uri,\n      onLoad,\n      fallback\n    } = props;\n    const [xml, setXml] = (0, _react.useState)(null);\n    const [isError, setIsError] = (0, _react.useState)(false);\n    (0, _react.useEffect)(() => {\n      uri ? (0, _utilsFetchData.fetchText)(uri).then(data => {\n        setXml(data);\n        isError && setIsError(false);\n        onLoad === null || onLoad === void 0 || onLoad();\n      }).catch(e => {\n        onError(e);\n        setIsError(true);\n      }) : setXml(null);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [onError, uri, onLoad]);\n    if (isError) {\n      return fallback ?? null;\n    }\n    return /*#__PURE__*/React.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      fallback: fallback\n    });\n  }\n\n  // Extending Component is required for Animated support.\n\n  class SvgFromXml extends _react.Component {\n    state = {\n      ast: null\n    };\n    componentDidMount() {\n      this.parse(this.props.xml);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        xml\n      } = this.props;\n      if (xml !== prevProps.xml) {\n        this.parse(xml);\n      }\n    }\n    parse(xml) {\n      const {\n        onError = err\n      } = this.props;\n      try {\n        this.setState({\n          ast: xml ? parse(xml) : null\n        });\n      } catch (e) {\n        const error = e;\n        onError({\n          ...error,\n          message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`\n        });\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          ast\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgAst, {\n        ast: ast,\n        override: props.override || props\n      });\n    }\n  }\n  class SvgFromUri extends _react.Component {\n    state = {\n      xml: null\n    };\n    componentDidMount() {\n      this.fetch(this.props.uri);\n    }\n    componentDidUpdate(prevProps) {\n      const {\n        uri\n      } = this.props;\n      if (uri !== prevProps.uri) {\n        this.fetch(uri);\n      }\n    }\n    async fetch(uri) {\n      try {\n        this.setState({\n          xml: uri ? await (0, _utilsFetchData.fetchText)(uri) : null\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    render() {\n      const {\n        props,\n        state: {\n          xml\n        }\n      } = this;\n      return /*#__PURE__*/React.createElement(SvgFromXml, {\n        xml: xml,\n        override: props,\n        onError: props.onError\n      });\n    }\n  }\n  const upperCase = (_match, letter) => letter.toUpperCase();\n  const camelCase = phrase => phrase.replace(/[:-]([a-z])/g, upperCase);\n  function getStyle(string) {\n    const style = {};\n    const declarations = string.split(';').filter(v => v.trim());\n    const {\n      length\n    } = declarations;\n    for (let i = 0; i < length; i++) {\n      const declaration = declarations[i];\n      if (declaration.length !== 0) {\n        const split = declaration.split(':');\n        const property = split[0];\n        const value = split[1];\n        style[camelCase(property.trim())] = value.trim();\n      }\n    }\n    return style;\n  }\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      const {\n        Tag,\n        props,\n        children\n      } = value;\n      if (props !== null && props !== void 0 && props.class) {\n        props.className = props.class;\n        delete props.class;\n      }\n      return /*#__PURE__*/React.createElement(Tag, _extends({\n        key: index\n      }, props), children.map(astToReact));\n    }\n    return value;\n  }\n\n  // slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\n  function repeat(str, i) {\n    let result = '';\n    while (i--) {\n      result += str;\n    }\n    return result;\n  }\n  const toSpaces = tabs => repeat('  ', tabs.length);\n  function locate(source, i) {\n    const lines = source.split('\\n');\n    const nLines = lines.length;\n    let column = i;\n    let line = 0;\n    for (; line < nLines; line++) {\n      const {\n        length\n      } = lines[line];\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n    const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    const beforeExec = /(^|\\n).*$/.exec(before);\n    const beforeLine = beforeExec && beforeExec[0] || '';\n    const after = source.slice(i);\n    const afterExec = /.*(\\n|$)/.exec(after);\n    const afterLine = afterExec && afterExec[0];\n    const pad = repeat(' ', beforeLine.length);\n    const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n    return {\n      line,\n      column,\n      snippet\n    };\n  }\n  const validNameCharacters = /[a-zA-Z0-9:_-]/;\n  const commentStart = /<!--/;\n  const whitespace = /[\\s\\t\\r\\n]/;\n  const quotemarks = /['\"]/;\n  function parse(source, middleware) {\n    const length = source.length;\n    let currentElement = null;\n    let state = metadata;\n    let children = null;\n    let root;\n    const stack = [];\n    function error(message) {\n      const {\n        line,\n        column,\n        snippet\n      } = locate(source, i);\n      throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);\n    }\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !(validNameCharacters.test(source[i + 1]) || commentStart.test(source.slice(i, i + 4))))) {\n        i++;\n      }\n      return neutral();\n    }\n    function neutral() {\n      let text = '';\n      let char;\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n      if (source[i] === '<') {\n        return openingTag;\n      }\n      return neutral;\n    }\n    function openingTag() {\n      const char = source[i];\n      if (char === '?') {\n        return neutral;\n      } // <?xml...\n\n      if (char === '!') {\n        const start = i + 1;\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n        const end = i + 8;\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n      if (char === '/') {\n        return closingTag;\n      }\n      const tag = getName();\n      const props = {};\n      const element = {\n        tag,\n        props,\n        children: [],\n        parent: currentElement,\n        Tag: _xmlTags.tags[tag] || missingTag\n      };\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n      getAttributes(props);\n      const {\n        style\n      } = props;\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n      let selfClosing = false;\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      if (!selfClosing) {\n        currentElement = element;\n        ({\n          children\n        } = element);\n        stack.push(element);\n      }\n      return neutral;\n    }\n    function comment() {\n      const index = source.indexOf('-->', i);\n      if (!~index) {\n        error('expected -->');\n      }\n      i = index + 2;\n      return neutral;\n    }\n    function cdata() {\n      const index = source.indexOf(']]>', i);\n      if (!~index) {\n        error('expected ]]>');\n      }\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n    function closingTag() {\n      const tag = getName();\n      if (!tag) {\n        error('Expected tag name');\n      }\n      if (currentElement && tag !== currentElement.tag) {\n        error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);\n      }\n      allowSpaces();\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n      if (currentElement) {\n        ({\n          children\n        } = currentElement);\n      }\n      return neutral;\n    }\n    function getName() {\n      let name = '';\n      let char;\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n      return name;\n    }\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n        allowSpaces();\n        const name = getName();\n        if (!name) {\n          return;\n        }\n        let value = true;\n        allowSpaces();\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n          if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n        props[camelCase(name)] = value;\n      }\n    }\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n    function getUnquotedAttributeValue() {\n      let value = '';\n      do {\n        const char = source[i];\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n        value += char;\n        i += 1;\n      } while (i < length);\n      return value;\n    }\n    function getQuotedAttributeValue() {\n      const quotemark = source[i++];\n      let value = '';\n      let escaped = false;\n      while (i < length) {\n        const char = source[i++];\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n        value += escaped ? `\\\\${char}` : char;\n        escaped = false;\n      }\n      return value;\n    }\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n    let i = 0;\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n      state = state();\n      i += 1;\n    }\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n    if (root) {\n      const xml = (middleware ? middleware(root) : root) || root;\n      const ast = xml.children.map(astToReact);\n      const jsx = xml;\n      jsx.children = ast;\n      return jsx;\n    }\n    return null;\n  }\n});","lineCount":513,"map":[[16,2,9,0,"exports"],[16,9,9,0],[16,10,9,0,"SvgAst"],[16,16,9,0],[16,19,9,0,"SvgAst"],[16,25,9,0],[17,2,24,0,"exports"],[17,9,24,0],[17,10,24,0,"SvgXml"],[17,16,24,0],[17,19,24,0,"SvgXml"],[17,25,24,0],[18,2,42,0,"exports"],[18,9,42,0],[18,10,42,0,"SvgUri"],[18,16,42,0],[18,19,42,0,"SvgUri"],[18,25,42,0],[19,2,74,0,"Object"],[19,8,74,0],[19,9,74,0,"defineProperty"],[19,23,74,0],[19,24,74,0,"exports"],[19,31,74,0],[20,4,74,0,"enumerable"],[20,14,74,0],[21,4,74,0,"get"],[21,7,74,0],[21,18,74,0,"get"],[21,19,74,0],[22,6,74,0],[22,13,74,0,"SvgFromXml"],[22,23,74,0],[23,4,74,0],[24,2,74,0],[25,2,118,0,"Object"],[25,8,118,0],[25,9,118,0,"defineProperty"],[25,23,118,0],[25,24,118,0,"exports"],[25,31,118,0],[26,4,118,0,"enumerable"],[26,14,118,0],[27,4,118,0,"get"],[27,7,118,0],[27,18,118,0,"get"],[27,19,118,0],[28,6,118,0],[28,13,118,0,"SvgFromUri"],[28,23,118,0],[29,4,118,0],[30,2,118,0],[31,2,157,0,"Object"],[31,8,157,0],[31,9,157,0,"defineProperty"],[31,23,157,0],[31,24,157,0,"exports"],[31,31,157,0],[32,4,157,0,"enumerable"],[32,14,157,0],[33,4,157,0,"get"],[33,7,157,0],[33,18,157,0,"get"],[33,19,157,0],[34,6,157,0],[34,13,157,0,"camelCase"],[34,22,157,0],[35,4,157,0],[36,2,157,0],[37,2,158,0,"exports"],[37,9,158,0],[37,10,158,0,"getStyle"],[37,18,158,0],[37,21,158,0,"getStyle"],[37,29,158,0],[38,2,175,0,"exports"],[38,9,175,0],[38,10,175,0,"astToReact"],[38,20,175,0],[38,23,175,0,"astToReact"],[38,33,175,0],[39,2,236,0,"exports"],[39,9,236,0],[39,10,236,0,"parse"],[39,15,236,0],[39,18,236,0,"parse"],[39,23,236,0],[40,2,460,0,"Object"],[40,8,460,0],[40,9,460,0,"defineProperty"],[40,23,460,0],[40,24,460,0,"exports"],[40,31,460,0],[41,4,460,0,"enumerable"],[41,14,460,0],[42,4,460,0,"get"],[42,7,460,0],[42,18,460,0,"get"],[42,19,460,0],[43,6,460,0],[43,13,460,9,"tags"],[43,21,460,13],[43,22,460,13,"tags"],[43,26,460,13],[44,4,460,13],[45,2,460,13],[46,2,2,0],[46,6,2,0,"_react"],[46,12,2,0],[46,15,2,0,"require"],[46,22,2,0],[46,23,2,0,"_dependencyMap"],[46,37,2,0],[47,2,2,0],[47,6,2,0,"React"],[47,11,2,0],[47,14,2,0,"_interopNamespace"],[47,31,2,0],[47,32,2,0,"_react"],[47,38,2,0],[48,2,4,0],[48,6,4,0,"_utilsFetchData"],[48,21,4,0],[48,24,4,0,"require"],[48,31,4,0],[48,32,4,0,"_dependencyMap"],[48,46,4,0],[49,2,5,0],[49,6,5,0,"_xmlTags"],[49,14,5,0],[49,17,5,0,"require"],[49,24,5,0],[49,25,5,0,"_dependencyMap"],[49,39,5,0],[50,2,1,0],[50,11,1,9,"_extends"],[50,19,1,17,"_extends"],[50,20,1,17],[50,22,1,20],[51,4,1,22],[51,11,1,29,"_extends"],[51,19,1,37],[51,22,1,40,"Object"],[51,28,1,46],[51,29,1,47,"assign"],[51,35,1,53],[51,38,1,56,"Object"],[51,44,1,62],[51,45,1,63,"assign"],[51,51,1,69],[51,52,1,70,"bind"],[51,56,1,74],[51,57,1,75],[51,58,1,76],[51,61,1,79],[51,71,1,89,"n"],[51,72,1,90],[51,74,1,92],[52,6,1,94],[52,11,1,99],[52,15,1,103,"e"],[52,16,1,104],[52,19,1,107],[52,20,1,108],[52,22,1,110,"e"],[52,23,1,111],[52,26,1,114,"arguments"],[52,35,1,123],[52,36,1,124,"length"],[52,42,1,130],[52,44,1,132,"e"],[52,45,1,133],[52,47,1,135],[52,49,1,137],[53,8,1,139],[53,12,1,143,"t"],[53,13,1,144],[53,16,1,147,"arguments"],[53,25,1,156],[53,26,1,157,"e"],[53,27,1,158],[53,28,1,159],[54,8,1,161],[54,13,1,166],[54,17,1,170,"r"],[54,18,1,171],[54,22,1,175,"t"],[54,23,1,176],[54,25,1,178],[54,26,1,179],[54,27,1,180],[54,28,1,181],[54,30,1,183,"hasOwnProperty"],[54,44,1,197],[54,45,1,198,"call"],[54,49,1,202],[54,50,1,203,"t"],[54,51,1,204],[54,53,1,206,"r"],[54,54,1,207],[54,55,1,208],[54,60,1,213,"n"],[54,61,1,214],[54,62,1,215,"r"],[54,63,1,216],[54,64,1,217],[54,67,1,220,"t"],[54,68,1,221],[54,69,1,222,"r"],[54,70,1,223],[54,71,1,224],[54,72,1,225],[55,6,1,227],[56,6,1,229],[56,13,1,236,"n"],[56,14,1,237],[57,4,1,239],[57,5,1,240],[57,7,1,242,"_extends"],[57,15,1,250],[57,16,1,251,"apply"],[57,21,1,256],[57,22,1,257],[57,26,1,261],[57,28,1,263,"arguments"],[57,37,1,272],[57,38,1,273],[58,2,1,275],[59,2,6,0],[59,11,6,9,"missingTag"],[59,21,6,19,"missingTag"],[59,22,6,19],[59,24,6,22],[60,4,7,2],[60,11,7,9],[60,15,7,13],[61,2,8,0],[62,2,9,7],[62,11,9,16,"SvgAst"],[62,17,9,22,"SvgAst"],[62,18,9,23],[63,4,10,2,"ast"],[63,7,10,5],[64,4,11,2,"override"],[65,2,12,0],[65,3,12,1],[65,5,12,3],[66,4,13,2],[66,8,13,6],[66,9,13,7,"ast"],[66,12,13,10],[66,14,13,12],[67,6,14,4],[67,13,14,11],[67,17,14,15],[68,4,15,2],[69,4,16,2],[69,10,16,8],[70,6,17,4,"props"],[70,11,17,9],[71,6,18,4,"children"],[72,4,19,2],[72,5,19,3],[72,8,19,6,"ast"],[72,11,19,9],[73,4,20,2],[73,10,20,8,"Svg"],[73,13,20,11],[73,16,20,14,"tags"],[73,24,20,18],[73,25,20,18,"tags"],[73,29,20,18],[73,30,20,19,"svg"],[73,33,20,22],[74,4,21,2],[74,11,21,9],[74,24,21,22,"React"],[74,29,21,27],[74,30,21,28,"createElement"],[74,43,21,41],[74,44,21,42,"Svg"],[74,47,21,45],[74,49,21,47,"_extends"],[74,57,21,55],[74,58,21,56],[74,59,21,57],[74,60,21,58],[74,62,21,60,"props"],[74,67,21,65],[74,69,21,67,"override"],[74,77,21,75],[74,78,21,76],[74,80,21,78,"children"],[74,88,21,86],[74,89,21,87],[75,2,22,0],[76,2,23,0],[76,8,23,6,"err"],[76,11,23,9],[76,14,23,12,"console"],[76,21,23,19],[76,22,23,20,"error"],[76,27,23,25],[76,28,23,26,"bind"],[76,32,23,30],[76,33,23,31,"console"],[76,40,23,38],[76,41,23,39],[77,2,24,7],[77,11,24,16,"SvgXml"],[77,17,24,22,"SvgXml"],[77,18,24,23,"props"],[77,23,24,28],[77,25,24,30],[78,4,25,2],[78,10,25,8],[79,6,26,4,"onError"],[79,13,26,11],[79,16,26,14,"err"],[79,19,26,17],[80,6,27,4,"xml"],[80,9,27,7],[81,6,28,4,"override"],[81,14,28,12],[82,6,29,4,"fallback"],[83,4,30,2],[83,5,30,3],[83,8,30,6,"props"],[83,13,30,11],[84,4,31,2],[84,8,31,6],[85,6,32,4],[85,12,32,10,"ast"],[85,15,32,13],[85,18,32,16],[85,22,32,16,"useMemo"],[85,28,32,23],[85,29,32,23,"useMemo"],[85,36,32,23],[85,38,32,24],[85,44,32,30,"xml"],[85,47,32,33],[85,52,32,38],[85,56,32,42],[85,59,32,45,"parse"],[85,64,32,50],[85,65,32,51,"xml"],[85,68,32,54],[85,69,32,55],[85,72,32,58],[85,76,32,62],[85,78,32,64],[85,79,32,65,"xml"],[85,82,32,68],[85,83,32,69],[85,84,32,70],[86,6,33,4],[86,13,33,11],[86,26,33,24,"React"],[86,31,33,29],[86,32,33,30,"createElement"],[86,45,33,43],[86,46,33,44,"SvgAst"],[86,52,33,50],[86,54,33,52],[87,8,34,6,"ast"],[87,11,34,9],[87,13,34,11,"ast"],[87,16,34,14],[88,8,35,6,"override"],[88,16,35,14],[88,18,35,16,"override"],[88,26,35,24],[88,30,35,28,"props"],[89,6,36,4],[89,7,36,5],[89,8,36,6],[90,4,37,2],[90,5,37,3],[90,6,37,4],[90,13,37,11,"error"],[90,18,37,16],[90,20,37,18],[91,6,38,4,"onError"],[91,13,38,11],[91,14,38,12,"error"],[91,19,38,17],[91,20,38,18],[92,6,39,4],[92,13,39,11,"fallback"],[92,21,39,19],[92,25,39,23],[92,29,39,27],[93,4,40,2],[94,2,41,0],[95,2,42,7],[95,11,42,16,"SvgUri"],[95,17,42,22,"SvgUri"],[95,18,42,23,"props"],[95,23,42,28],[95,25,42,30],[96,4,43,2],[96,10,43,8],[97,6,44,4,"onError"],[97,13,44,11],[97,16,44,14,"err"],[97,19,44,17],[98,6,45,4,"uri"],[98,9,45,7],[99,6,46,4,"onLoad"],[99,12,46,10],[100,6,47,4,"fallback"],[101,4,48,2],[101,5,48,3],[101,8,48,6,"props"],[101,13,48,11],[102,4,49,2],[102,10,49,8],[102,11,49,9,"xml"],[102,14,49,12],[102,16,49,14,"setXml"],[102,22,49,20],[102,23,49,21],[102,26,49,24],[102,30,49,24,"useState"],[102,36,49,32],[102,37,49,32,"useState"],[102,45,49,32],[102,47,49,33],[102,51,49,37],[102,52,49,38],[103,4,50,2],[103,10,50,8],[103,11,50,9,"isError"],[103,18,50,16],[103,20,50,18,"setIsError"],[103,30,50,28],[103,31,50,29],[103,34,50,32],[103,38,50,32,"useState"],[103,44,50,40],[103,45,50,40,"useState"],[103,53,50,40],[103,55,50,41],[103,60,50,46],[103,61,50,47],[104,4,51,2],[104,8,51,2,"useEffect"],[104,14,51,11],[104,15,51,11,"useEffect"],[104,24,51,11],[104,26,51,12],[104,32,51,18],[105,6,52,4,"uri"],[105,9,52,7],[105,12,52,10],[105,16,52,10,"fetchText"],[105,31,52,19],[105,32,52,19,"fetchText"],[105,41,52,19],[105,43,52,20,"uri"],[105,46,52,23],[105,47,52,24],[105,48,52,25,"then"],[105,52,52,29],[105,53,52,30,"data"],[105,57,52,34],[105,61,52,38],[106,8,53,6,"setXml"],[106,14,53,12],[106,15,53,13,"data"],[106,19,53,17],[106,20,53,18],[107,8,54,6,"isError"],[107,15,54,13],[107,19,54,17,"setIsError"],[107,29,54,27],[107,30,54,28],[107,35,54,33],[107,36,54,34],[108,8,55,6,"onLoad"],[108,14,55,12],[108,19,55,17],[108,23,55,21],[108,27,55,25,"onLoad"],[108,33,55,31],[108,38,55,36],[108,43,55,41],[108,44,55,42],[108,48,55,46,"onLoad"],[108,54,55,52],[108,55,55,53],[108,56,55,54],[109,6,56,4],[109,7,56,5],[109,8,56,6],[109,9,56,7,"catch"],[109,14,56,12],[109,15,56,13,"e"],[109,16,56,14],[109,20,56,18],[110,8,57,6,"onError"],[110,15,57,13],[110,16,57,14,"e"],[110,17,57,15],[110,18,57,16],[111,8,58,6,"setIsError"],[111,18,58,16],[111,19,58,17],[111,23,58,21],[111,24,58,22],[112,6,59,4],[112,7,59,5],[112,8,59,6],[112,11,59,9,"setXml"],[112,17,59,15],[112,18,59,16],[112,22,59,20],[112,23,59,21],[113,6,60,4],[114,4,61,2],[114,5,61,3],[114,7,61,5],[114,8,61,6,"onError"],[114,15,61,13],[114,17,61,15,"uri"],[114,20,61,18],[114,22,61,20,"onLoad"],[114,28,61,26],[114,29,61,27],[114,30,61,28],[115,4,62,2],[115,8,62,6,"isError"],[115,15,62,13],[115,17,62,15],[116,6,63,4],[116,13,63,11,"fallback"],[116,21,63,19],[116,25,63,23],[116,29,63,27],[117,4,64,2],[118,4,65,2],[118,11,65,9],[118,24,65,22,"React"],[118,29,65,27],[118,30,65,28,"createElement"],[118,43,65,41],[118,44,65,42,"SvgXml"],[118,50,65,48],[118,52,65,50],[119,6,66,4,"xml"],[119,9,66,7],[119,11,66,9,"xml"],[119,14,66,12],[120,6,67,4,"override"],[120,14,67,12],[120,16,67,14,"props"],[120,21,67,19],[121,6,68,4,"fallback"],[121,14,68,12],[121,16,68,14,"fallback"],[122,4,69,2],[122,5,69,3],[122,6,69,4],[123,2,70,0],[125,2,72,0],[127,2,74,7],[127,8,74,13,"SvgFromXml"],[127,18,74,23],[127,27,74,32,"Component"],[127,33,74,41],[127,34,74,41,"Component"],[127,43,74,41],[127,44,74,42],[128,4,75,2,"state"],[128,9,75,7],[128,12,75,10],[129,6,76,4,"ast"],[129,9,76,7],[129,11,76,9],[130,4,77,2],[130,5,77,3],[131,4,78,2,"componentDidMount"],[131,21,78,19,"componentDidMount"],[131,22,78,19],[131,24,78,22],[132,6,79,4],[132,10,79,8],[132,11,79,9,"parse"],[132,16,79,14],[132,17,79,15],[132,21,79,19],[132,22,79,20,"props"],[132,27,79,25],[132,28,79,26,"xml"],[132,31,79,29],[132,32,79,30],[133,4,80,2],[134,4,81,2,"componentDidUpdate"],[134,22,81,20,"componentDidUpdate"],[134,23,81,21,"prevProps"],[134,32,81,30],[134,34,81,32],[135,6,82,4],[135,12,82,10],[136,8,83,6,"xml"],[137,6,84,4],[137,7,84,5],[137,10,84,8],[137,14,84,12],[137,15,84,13,"props"],[137,20,84,18],[138,6,85,4],[138,10,85,8,"xml"],[138,13,85,11],[138,18,85,16,"prevProps"],[138,27,85,25],[138,28,85,26,"xml"],[138,31,85,29],[138,33,85,31],[139,8,86,6],[139,12,86,10],[139,13,86,11,"parse"],[139,18,86,16],[139,19,86,17,"xml"],[139,22,86,20],[139,23,86,21],[140,6,87,4],[141,4,88,2],[142,4,89,2,"parse"],[142,9,89,7,"parse"],[142,10,89,8,"xml"],[142,13,89,11],[142,15,89,13],[143,6,90,4],[143,12,90,10],[144,8,91,6,"onError"],[144,15,91,13],[144,18,91,16,"err"],[145,6,92,4],[145,7,92,5],[145,10,92,8],[145,14,92,12],[145,15,92,13,"props"],[145,20,92,18],[146,6,93,4],[146,10,93,8],[147,8,94,6],[147,12,94,10],[147,13,94,11,"setState"],[147,21,94,19],[147,22,94,20],[148,10,95,8,"ast"],[148,13,95,11],[148,15,95,13,"xml"],[148,18,95,16],[148,21,95,19,"parse"],[148,26,95,24],[148,27,95,25,"xml"],[148,30,95,28],[148,31,95,29],[148,34,95,32],[149,8,96,6],[149,9,96,7],[149,10,96,8],[150,6,97,4],[150,7,97,5],[150,8,97,6],[150,15,97,13,"e"],[150,16,97,14],[150,18,97,16],[151,8,98,6],[151,14,98,12,"error"],[151,19,98,17],[151,22,98,20,"e"],[151,23,98,21],[152,8,99,6,"onError"],[152,15,99,13],[152,16,99,14],[153,10,100,8],[153,13,100,11,"error"],[153,18,100,16],[154,10,101,8,"message"],[154,17,101,15],[154,19,101,17],[154,58,101,56,"error"],[154,63,101,61],[154,64,101,62,"message"],[154,71,101,69],[155,8,102,6],[155,9,102,7],[155,10,102,8],[156,6,103,4],[157,4,104,2],[158,4,105,2,"render"],[158,10,105,8,"render"],[158,11,105,8],[158,13,105,11],[159,6,106,4],[159,12,106,10],[160,8,107,6,"props"],[160,13,107,11],[161,8,108,6,"state"],[161,13,108,11],[161,15,108,13],[162,10,109,8,"ast"],[163,8,110,6],[164,6,111,4],[164,7,111,5],[164,10,111,8],[164,14,111,12],[165,6,112,4],[165,13,112,11],[165,26,112,24,"React"],[165,31,112,29],[165,32,112,30,"createElement"],[165,45,112,43],[165,46,112,44,"SvgAst"],[165,52,112,50],[165,54,112,52],[166,8,113,6,"ast"],[166,11,113,9],[166,13,113,11,"ast"],[166,16,113,14],[167,8,114,6,"override"],[167,16,114,14],[167,18,114,16,"props"],[167,23,114,21],[167,24,114,22,"override"],[167,32,114,30],[167,36,114,34,"props"],[168,6,115,4],[168,7,115,5],[168,8,115,6],[169,4,116,2],[170,2,117,0],[171,2,118,7],[171,8,118,13,"SvgFromUri"],[171,18,118,23],[171,27,118,32,"Component"],[171,33,118,41],[171,34,118,41,"Component"],[171,43,118,41],[171,44,118,42],[172,4,119,2,"state"],[172,9,119,7],[172,12,119,10],[173,6,120,4,"xml"],[173,9,120,7],[173,11,120,9],[174,4,121,2],[174,5,121,3],[175,4,122,2,"componentDidMount"],[175,21,122,19,"componentDidMount"],[175,22,122,19],[175,24,122,22],[176,6,123,4],[176,10,123,8],[176,11,123,9,"fetch"],[176,16,123,14],[176,17,123,15],[176,21,123,19],[176,22,123,20,"props"],[176,27,123,25],[176,28,123,26,"uri"],[176,31,123,29],[176,32,123,30],[177,4,124,2],[178,4,125,2,"componentDidUpdate"],[178,22,125,20,"componentDidUpdate"],[178,23,125,21,"prevProps"],[178,32,125,30],[178,34,125,32],[179,6,126,4],[179,12,126,10],[180,8,127,6,"uri"],[181,6,128,4],[181,7,128,5],[181,10,128,8],[181,14,128,12],[181,15,128,13,"props"],[181,20,128,18],[182,6,129,4],[182,10,129,8,"uri"],[182,13,129,11],[182,18,129,16,"prevProps"],[182,27,129,25],[182,28,129,26,"uri"],[182,31,129,29],[182,33,129,31],[183,8,130,6],[183,12,130,10],[183,13,130,11,"fetch"],[183,18,130,16],[183,19,130,17,"uri"],[183,22,130,20],[183,23,130,21],[184,6,131,4],[185,4,132,2],[186,4,133,2],[186,10,133,8,"fetch"],[186,15,133,13,"fetch"],[186,16,133,14,"uri"],[186,19,133,17],[186,21,133,19],[187,6,134,4],[187,10,134,8],[188,8,135,6],[188,12,135,10],[188,13,135,11,"setState"],[188,21,135,19],[188,22,135,20],[189,10,136,8,"xml"],[189,13,136,11],[189,15,136,13,"uri"],[189,18,136,16],[189,21,136,19],[189,27,136,25],[189,31,136,25,"fetchText"],[189,46,136,34],[189,47,136,34,"fetchText"],[189,56,136,34],[189,58,136,35,"uri"],[189,61,136,38],[189,62,136,39],[189,65,136,42],[190,8,137,6],[190,9,137,7],[190,10,137,8],[191,6,138,4],[191,7,138,5],[191,8,138,6],[191,15,138,13,"e"],[191,16,138,14],[191,18,138,16],[192,8,139,6,"console"],[192,15,139,13],[192,16,139,14,"error"],[192,21,139,19],[192,22,139,20,"e"],[192,23,139,21],[192,24,139,22],[193,6,140,4],[194,4,141,2],[195,4,142,2,"render"],[195,10,142,8,"render"],[195,11,142,8],[195,13,142,11],[196,6,143,4],[196,12,143,10],[197,8,144,6,"props"],[197,13,144,11],[198,8,145,6,"state"],[198,13,145,11],[198,15,145,13],[199,10,146,8,"xml"],[200,8,147,6],[201,6,148,4],[201,7,148,5],[201,10,148,8],[201,14,148,12],[202,6,149,4],[202,13,149,11],[202,26,149,24,"React"],[202,31,149,29],[202,32,149,30,"createElement"],[202,45,149,43],[202,46,149,44,"SvgFromXml"],[202,56,149,54],[202,58,149,56],[203,8,150,6,"xml"],[203,11,150,9],[203,13,150,11,"xml"],[203,16,150,14],[204,8,151,6,"override"],[204,16,151,14],[204,18,151,16,"props"],[204,23,151,21],[205,8,152,6,"onError"],[205,15,152,13],[205,17,152,15,"props"],[205,22,152,20],[205,23,152,21,"onError"],[206,6,153,4],[206,7,153,5],[206,8,153,6],[207,4,154,2],[208,2,155,0],[209,2,156,0],[209,8,156,6,"upperCase"],[209,17,156,15],[209,20,156,18,"upperCase"],[209,21,156,19,"_match"],[209,27,156,25],[209,29,156,27,"letter"],[209,35,156,33],[209,40,156,38,"letter"],[209,46,156,44],[209,47,156,45,"toUpperCase"],[209,58,156,56],[209,59,156,57],[209,60,156,58],[210,2,157,7],[210,8,157,13,"camelCase"],[210,17,157,22],[210,20,157,25,"phrase"],[210,26,157,31],[210,30,157,35,"phrase"],[210,36,157,41],[210,37,157,42,"replace"],[210,44,157,49],[210,45,157,50],[210,59,157,64],[210,61,157,66,"upperCase"],[210,70,157,75],[210,71,157,76],[211,2,158,7],[211,11,158,16,"getStyle"],[211,19,158,24,"getStyle"],[211,20,158,25,"string"],[211,26,158,31],[211,28,158,33],[212,4,159,2],[212,10,159,8,"style"],[212,15,159,13],[212,18,159,16],[212,19,159,17],[212,20,159,18],[213,4,160,2],[213,10,160,8,"declarations"],[213,22,160,20],[213,25,160,23,"string"],[213,31,160,29],[213,32,160,30,"split"],[213,37,160,35],[213,38,160,36],[213,41,160,39],[213,42,160,40],[213,43,160,41,"filter"],[213,49,160,47],[213,50,160,48,"v"],[213,51,160,49],[213,55,160,53,"v"],[213,56,160,54],[213,57,160,55,"trim"],[213,61,160,59],[213,62,160,60],[213,63,160,61],[213,64,160,62],[214,4,161,2],[214,10,161,8],[215,6,162,4,"length"],[216,4,163,2],[216,5,163,3],[216,8,163,6,"declarations"],[216,20,163,18],[217,4,164,2],[217,9,164,7],[217,13,164,11,"i"],[217,14,164,12],[217,17,164,15],[217,18,164,16],[217,20,164,18,"i"],[217,21,164,19],[217,24,164,22,"length"],[217,30,164,28],[217,32,164,30,"i"],[217,33,164,31],[217,35,164,33],[217,37,164,35],[218,6,165,4],[218,12,165,10,"declaration"],[218,23,165,21],[218,26,165,24,"declarations"],[218,38,165,36],[218,39,165,37,"i"],[218,40,165,38],[218,41,165,39],[219,6,166,4],[219,10,166,8,"declaration"],[219,21,166,19],[219,22,166,20,"length"],[219,28,166,26],[219,33,166,31],[219,34,166,32],[219,36,166,34],[220,8,167,6],[220,14,167,12,"split"],[220,19,167,17],[220,22,167,20,"declaration"],[220,33,167,31],[220,34,167,32,"split"],[220,39,167,37],[220,40,167,38],[220,43,167,41],[220,44,167,42],[221,8,168,6],[221,14,168,12,"property"],[221,22,168,20],[221,25,168,23,"split"],[221,30,168,28],[221,31,168,29],[221,32,168,30],[221,33,168,31],[222,8,169,6],[222,14,169,12,"value"],[222,19,169,17],[222,22,169,20,"split"],[222,27,169,25],[222,28,169,26],[222,29,169,27],[222,30,169,28],[223,8,170,6,"style"],[223,13,170,11],[223,14,170,12,"camelCase"],[223,23,170,21],[223,24,170,22,"property"],[223,32,170,30],[223,33,170,31,"trim"],[223,37,170,35],[223,38,170,36],[223,39,170,37],[223,40,170,38],[223,41,170,39],[223,44,170,42,"value"],[223,49,170,47],[223,50,170,48,"trim"],[223,54,170,52],[223,55,170,53],[223,56,170,54],[224,6,171,4],[225,4,172,2],[226,4,173,2],[226,11,173,9,"style"],[226,16,173,14],[227,2,174,0],[228,2,175,7],[228,11,175,16,"astToReact"],[228,21,175,26,"astToReact"],[228,22,175,27,"value"],[228,27,175,32],[228,29,175,34,"index"],[228,34,175,39],[228,36,175,41],[229,4,176,2],[229,8,176,6],[229,15,176,13,"value"],[229,20,176,18],[229,25,176,23],[229,33,176,31],[229,35,176,33],[230,6,177,4],[230,12,177,10],[231,8,178,6,"Tag"],[231,11,178,9],[232,8,179,6,"props"],[232,13,179,11],[233,8,180,6,"children"],[234,6,181,4],[234,7,181,5],[234,10,181,8,"value"],[234,15,181,13],[235,6,182,4],[235,10,182,8,"props"],[235,15,182,13],[235,20,182,18],[235,24,182,22],[235,28,182,26,"props"],[235,33,182,31],[235,38,182,36],[235,43,182,41],[235,44,182,42],[235,48,182,46,"props"],[235,53,182,51],[235,54,182,52,"class"],[235,59,182,57],[235,61,182,59],[236,8,183,6,"props"],[236,13,183,11],[236,14,183,12,"className"],[236,23,183,21],[236,26,183,24,"props"],[236,31,183,29],[236,32,183,30,"class"],[236,37,183,35],[237,8,184,6],[237,15,184,13,"props"],[237,20,184,18],[237,21,184,19,"class"],[237,26,184,24],[238,6,185,4],[239,6,186,4],[239,13,186,11],[239,26,186,24,"React"],[239,31,186,29],[239,32,186,30,"createElement"],[239,45,186,43],[239,46,186,44,"Tag"],[239,49,186,47],[239,51,186,49,"_extends"],[239,59,186,57],[239,60,186,58],[240,8,187,6,"key"],[240,11,187,9],[240,13,187,11,"index"],[241,6,188,4],[241,7,188,5],[241,9,188,7,"props"],[241,14,188,12],[241,15,188,13],[241,17,188,15,"children"],[241,25,188,23],[241,26,188,24,"map"],[241,29,188,27],[241,30,188,28,"astToReact"],[241,40,188,38],[241,41,188,39],[241,42,188,40],[242,4,189,2],[243,4,190,2],[243,11,190,9,"value"],[243,16,190,14],[244,2,191,0],[246,2,193,0],[248,2,195,0],[248,11,195,9,"repeat"],[248,17,195,15,"repeat"],[248,18,195,16,"str"],[248,21,195,19],[248,23,195,21,"i"],[248,24,195,22],[248,26,195,24],[249,4,196,2],[249,8,196,6,"result"],[249,14,196,12],[249,17,196,15],[249,19,196,17],[250,4,197,2],[250,11,197,9,"i"],[250,12,197,10],[250,14,197,12],[250,16,197,14],[251,6,198,4,"result"],[251,12,198,10],[251,16,198,14,"str"],[251,19,198,17],[252,4,199,2],[253,4,200,2],[253,11,200,9,"result"],[253,17,200,15],[254,2,201,0],[255,2,202,0],[255,8,202,6,"toSpaces"],[255,16,202,14],[255,19,202,17,"tabs"],[255,23,202,21],[255,27,202,25,"repeat"],[255,33,202,31],[255,34,202,32],[255,38,202,36],[255,40,202,38,"tabs"],[255,44,202,42],[255,45,202,43,"length"],[255,51,202,49],[255,52,202,50],[256,2,203,0],[256,11,203,9,"locate"],[256,17,203,15,"locate"],[256,18,203,16,"source"],[256,24,203,22],[256,26,203,24,"i"],[256,27,203,25],[256,29,203,27],[257,4,204,2],[257,10,204,8,"lines"],[257,15,204,13],[257,18,204,16,"source"],[257,24,204,22],[257,25,204,23,"split"],[257,30,204,28],[257,31,204,29],[257,35,204,33],[257,36,204,34],[258,4,205,2],[258,10,205,8,"nLines"],[258,16,205,14],[258,19,205,17,"lines"],[258,24,205,22],[258,25,205,23,"length"],[258,31,205,29],[259,4,206,2],[259,8,206,6,"column"],[259,14,206,12],[259,17,206,15,"i"],[259,18,206,16],[260,4,207,2],[260,8,207,6,"line"],[260,12,207,10],[260,15,207,13],[260,16,207,14],[261,4,208,2],[261,11,208,9,"line"],[261,15,208,13],[261,18,208,16,"nLines"],[261,24,208,22],[261,26,208,24,"line"],[261,30,208,28],[261,32,208,30],[261,34,208,32],[262,6,209,4],[262,12,209,10],[263,8,210,6,"length"],[264,6,211,4],[264,7,211,5],[264,10,211,8,"lines"],[264,15,211,13],[264,16,211,14,"line"],[264,20,211,18],[264,21,211,19],[265,6,212,4],[265,10,212,8,"column"],[265,16,212,14],[265,20,212,18,"length"],[265,26,212,24],[265,28,212,26],[266,8,213,6,"column"],[266,14,213,12],[266,18,213,16,"length"],[266,24,213,22],[267,6,214,4],[267,7,214,5],[267,13,214,11],[268,8,215,6],[269,6,216,4],[270,4,217,2],[271,4,218,2],[271,10,218,8,"before"],[271,16,218,14],[271,19,218,17,"source"],[271,25,218,23],[271,26,218,24,"slice"],[271,31,218,29],[271,32,218,30],[271,33,218,31],[271,35,218,33,"i"],[271,36,218,34],[271,37,218,35],[271,38,218,36,"replace"],[271,45,218,43],[271,46,218,44],[271,52,218,50],[271,54,218,52,"toSpaces"],[271,62,218,60],[271,63,218,61],[272,4,219,2],[272,10,219,8,"beforeExec"],[272,20,219,18],[272,23,219,21],[272,34,219,32],[272,35,219,33,"exec"],[272,39,219,37],[272,40,219,38,"before"],[272,46,219,44],[272,47,219,45],[273,4,220,2],[273,10,220,8,"beforeLine"],[273,20,220,18],[273,23,220,21,"beforeExec"],[273,33,220,31],[273,37,220,35,"beforeExec"],[273,47,220,45],[273,48,220,46],[273,49,220,47],[273,50,220,48],[273,54,220,52],[273,56,220,54],[274,4,221,2],[274,10,221,8,"after"],[274,15,221,13],[274,18,221,16,"source"],[274,24,221,22],[274,25,221,23,"slice"],[274,30,221,28],[274,31,221,29,"i"],[274,32,221,30],[274,33,221,31],[275,4,222,2],[275,10,222,8,"afterExec"],[275,19,222,17],[275,22,222,20],[275,32,222,30],[275,33,222,31,"exec"],[275,37,222,35],[275,38,222,36,"after"],[275,43,222,41],[275,44,222,42],[276,4,223,2],[276,10,223,8,"afterLine"],[276,19,223,17],[276,22,223,20,"afterExec"],[276,31,223,29],[276,35,223,33,"afterExec"],[276,44,223,42],[276,45,223,43],[276,46,223,44],[276,47,223,45],[277,4,224,2],[277,10,224,8,"pad"],[277,13,224,11],[277,16,224,14,"repeat"],[277,22,224,20],[277,23,224,21],[277,26,224,24],[277,28,224,26,"beforeLine"],[277,38,224,36],[277,39,224,37,"length"],[277,45,224,43],[277,46,224,44],[278,4,225,2],[278,10,225,8,"snippet"],[278,17,225,15],[278,20,225,18],[278,23,225,21,"beforeLine"],[278,33,225,31],[278,36,225,34,"afterLine"],[278,45,225,43],[278,50,225,48,"pad"],[278,53,225,51],[278,56,225,54],[279,4,226,2],[279,11,226,9],[280,6,227,4,"line"],[280,10,227,8],[281,6,228,4,"column"],[281,12,228,10],[282,6,229,4,"snippet"],[283,4,230,2],[283,5,230,3],[284,2,231,0],[285,2,232,0],[285,8,232,6,"validNameCharacters"],[285,27,232,25],[285,30,232,28],[285,46,232,44],[286,2,233,0],[286,8,233,6,"commentStart"],[286,20,233,18],[286,23,233,21],[286,29,233,27],[287,2,234,0],[287,8,234,6,"whitespace"],[287,18,234,16],[287,21,234,19],[287,33,234,31],[288,2,235,0],[288,8,235,6,"quotemarks"],[288,18,235,16],[288,21,235,19],[288,27,235,25],[289,2,236,7],[289,11,236,16,"parse"],[289,16,236,21,"parse"],[289,17,236,22,"source"],[289,23,236,28],[289,25,236,30,"middleware"],[289,35,236,40],[289,37,236,42],[290,4,237,2],[290,10,237,8,"length"],[290,16,237,14],[290,19,237,17,"source"],[290,25,237,23],[290,26,237,24,"length"],[290,32,237,30],[291,4,238,2],[291,8,238,6,"currentElement"],[291,22,238,20],[291,25,238,23],[291,29,238,27],[292,4,239,2],[292,8,239,6,"state"],[292,13,239,11],[292,16,239,14,"metadata"],[292,24,239,22],[293,4,240,2],[293,8,240,6,"children"],[293,16,240,14],[293,19,240,17],[293,23,240,21],[294,4,241,2],[294,8,241,6,"root"],[294,12,241,10],[295,4,242,2],[295,10,242,8,"stack"],[295,15,242,13],[295,18,242,16],[295,20,242,18],[296,4,243,2],[296,13,243,11,"error"],[296,18,243,16,"error"],[296,19,243,17,"message"],[296,26,243,24],[296,28,243,26],[297,6,244,4],[297,12,244,10],[298,8,245,6,"line"],[298,12,245,10],[299,8,246,6,"column"],[299,14,246,12],[300,8,247,6,"snippet"],[301,6,248,4],[301,7,248,5],[301,10,248,8,"locate"],[301,16,248,14],[301,17,248,15,"source"],[301,23,248,21],[301,25,248,23,"i"],[301,26,248,24],[301,27,248,25],[302,6,249,4],[302,12,249,10],[302,16,249,14,"Error"],[302,21,249,19],[302,22,249,20],[302,25,249,23,"message"],[302,32,249,30],[302,37,249,35,"line"],[302,41,249,39],[302,45,249,43,"column"],[302,51,249,49],[302,125,249,123,"snippet"],[302,132,249,130],[302,134,249,132],[302,135,249,133],[303,4,250,2],[304,4,251,2],[304,13,251,11,"metadata"],[304,21,251,19,"metadata"],[304,22,251,19],[304,24,251,22],[305,6,252,4],[305,13,252,11,"i"],[305,14,252,12],[305,17,252,15],[305,18,252,16],[305,21,252,19,"length"],[305,27,252,25],[305,32,252,30,"source"],[305,38,252,36],[305,39,252,37,"i"],[305,40,252,38],[305,41,252,39],[305,46,252,44],[305,49,252,47],[305,53,252,51],[305,55,252,53,"validNameCharacters"],[305,74,252,72],[305,75,252,73,"test"],[305,79,252,77],[305,80,252,78,"source"],[305,86,252,84],[305,87,252,85,"i"],[305,88,252,86],[305,91,252,89],[305,92,252,90],[305,93,252,91],[305,94,252,92],[305,98,252,96,"commentStart"],[305,110,252,108],[305,111,252,109,"test"],[305,115,252,113],[305,116,252,114,"source"],[305,122,252,120],[305,123,252,121,"slice"],[305,128,252,126],[305,129,252,127,"i"],[305,130,252,128],[305,132,252,130,"i"],[305,133,252,131],[305,136,252,134],[305,137,252,135],[305,138,252,136],[305,139,252,137],[305,140,252,138],[305,141,252,139],[305,143,252,141],[306,8,253,6,"i"],[306,9,253,7],[306,11,253,9],[307,6,254,4],[308,6,255,4],[308,13,255,11,"neutral"],[308,20,255,18],[308,21,255,19],[308,22,255,20],[309,4,256,2],[310,4,257,2],[310,13,257,11,"neutral"],[310,20,257,18,"neutral"],[310,21,257,18],[310,23,257,21],[311,6,258,4],[311,10,258,8,"text"],[311,14,258,12],[311,17,258,15],[311,19,258,17],[312,6,259,4],[312,10,259,8,"char"],[312,14,259,12],[313,6,260,4],[313,13,260,11,"i"],[313,14,260,12],[313,17,260,15,"length"],[313,23,260,21],[313,27,260,25],[313,28,260,26,"char"],[313,32,260,30],[313,35,260,33,"source"],[313,41,260,39],[313,42,260,40,"i"],[313,43,260,41],[313,44,260,42],[313,50,260,48],[313,53,260,51],[313,55,260,53],[314,8,261,6,"text"],[314,12,261,10],[314,16,261,14,"char"],[314,20,261,18],[315,8,262,6,"i"],[315,9,262,7],[315,13,262,11],[315,14,262,12],[316,6,263,4],[317,6,264,4],[317,10,264,8],[317,14,264,12],[317,15,264,13,"test"],[317,19,264,17],[317,20,264,18,"text"],[317,24,264,22],[317,25,264,23],[317,27,264,25],[318,8,265,6,"children"],[318,16,265,14],[318,17,265,15,"push"],[318,21,265,19],[318,22,265,20,"text"],[318,26,265,24],[318,27,265,25],[319,6,266,4],[320,6,267,4],[320,10,267,8,"source"],[320,16,267,14],[320,17,267,15,"i"],[320,18,267,16],[320,19,267,17],[320,24,267,22],[320,27,267,25],[320,29,267,27],[321,8,268,6],[321,15,268,13,"openingTag"],[321,25,268,23],[322,6,269,4],[323,6,270,4],[323,13,270,11,"neutral"],[323,20,270,18],[324,4,271,2],[325,4,272,2],[325,13,272,11,"openingTag"],[325,23,272,21,"openingTag"],[325,24,272,21],[325,26,272,24],[326,6,273,4],[326,12,273,10,"char"],[326,16,273,14],[326,19,273,17,"source"],[326,25,273,23],[326,26,273,24,"i"],[326,27,273,25],[326,28,273,26],[327,6,274,4],[327,10,274,8,"char"],[327,14,274,12],[327,19,274,17],[327,22,274,20],[327,24,274,22],[328,8,275,6],[328,15,275,13,"neutral"],[328,22,275,20],[329,6,276,4],[329,7,276,5],[329,8,276,6],[331,6,278,4],[331,10,278,8,"char"],[331,14,278,12],[331,19,278,17],[331,22,278,20],[331,24,278,22],[332,8,279,6],[332,14,279,12,"start"],[332,19,279,17],[332,22,279,20,"i"],[332,23,279,21],[332,26,279,24],[332,27,279,25],[333,8,280,6],[333,12,280,10,"source"],[333,18,280,16],[333,19,280,17,"slice"],[333,24,280,22],[333,25,280,23,"start"],[333,30,280,28],[333,32,280,30,"i"],[333,33,280,31],[333,36,280,34],[333,37,280,35],[333,38,280,36],[333,43,280,41],[333,47,280,45],[333,49,280,47],[334,10,281,8],[334,17,281,15,"comment"],[334,24,281,22],[335,8,282,6],[336,8,283,6],[336,14,283,12,"end"],[336,17,283,15],[336,20,283,18,"i"],[336,21,283,19],[336,24,283,22],[336,25,283,23],[337,8,284,6],[337,12,284,10,"source"],[337,18,284,16],[337,19,284,17,"slice"],[337,24,284,22],[337,25,284,23,"start"],[337,30,284,28],[337,32,284,30,"end"],[337,35,284,33],[337,36,284,34],[337,41,284,39],[337,50,284,48],[337,52,284,50],[338,10,285,8],[338,17,285,15,"cdata"],[338,22,285,20],[339,8,286,6],[340,8,287,6],[340,12,287,10],[340,22,287,20],[340,23,287,21,"test"],[340,27,287,25],[340,28,287,26,"source"],[340,34,287,32],[340,35,287,33,"slice"],[340,40,287,38],[340,41,287,39,"start"],[340,46,287,44],[340,48,287,46,"end"],[340,51,287,49],[340,52,287,50],[340,53,287,51],[340,55,287,53],[341,10,288,8],[341,17,288,15,"neutral"],[341,24,288,22],[342,8,289,6],[343,6,290,4],[344,6,291,4],[344,10,291,8,"char"],[344,14,291,12],[344,19,291,17],[344,22,291,20],[344,24,291,22],[345,8,292,6],[345,15,292,13,"closingTag"],[345,25,292,23],[346,6,293,4],[347,6,294,4],[347,12,294,10,"tag"],[347,15,294,13],[347,18,294,16,"getName"],[347,25,294,23],[347,26,294,24],[347,27,294,25],[348,6,295,4],[348,12,295,10,"props"],[348,17,295,15],[348,20,295,18],[348,21,295,19],[348,22,295,20],[349,6,296,4],[349,12,296,10,"element"],[349,19,296,17],[349,22,296,20],[350,8,297,6,"tag"],[350,11,297,9],[351,8,298,6,"props"],[351,13,298,11],[352,8,299,6,"children"],[352,16,299,14],[352,18,299,16],[352,20,299,18],[353,8,300,6,"parent"],[353,14,300,12],[353,16,300,14,"currentElement"],[353,30,300,28],[354,8,301,6,"Tag"],[354,11,301,9],[354,13,301,11,"tags"],[354,21,301,15],[354,22,301,15,"tags"],[354,26,301,15],[354,27,301,16,"tag"],[354,30,301,19],[354,31,301,20],[354,35,301,24,"missingTag"],[355,6,302,4],[355,7,302,5],[356,6,303,4],[356,10,303,8,"currentElement"],[356,24,303,22],[356,26,303,24],[357,8,304,6,"children"],[357,16,304,14],[357,17,304,15,"push"],[357,21,304,19],[357,22,304,20,"element"],[357,29,304,27],[357,30,304,28],[358,6,305,4],[358,7,305,5],[358,13,305,11],[359,8,306,6,"root"],[359,12,306,10],[359,15,306,13,"element"],[359,22,306,20],[360,6,307,4],[361,6,308,4,"getAttributes"],[361,19,308,17],[361,20,308,18,"props"],[361,25,308,23],[361,26,308,24],[362,6,309,4],[362,12,309,10],[363,8,310,6,"style"],[364,6,311,4],[364,7,311,5],[364,10,311,8,"props"],[364,15,311,13],[365,6,312,4],[365,10,312,8],[365,17,312,15,"style"],[365,22,312,20],[365,27,312,25],[365,35,312,33],[365,37,312,35],[366,8,313,6,"element"],[366,15,313,13],[366,16,313,14,"styles"],[366,22,313,20],[366,25,313,23,"style"],[366,30,313,28],[367,8,314,6,"props"],[367,13,314,11],[367,14,314,12,"style"],[367,19,314,17],[367,22,314,20,"getStyle"],[367,30,314,28],[367,31,314,29,"style"],[367,36,314,34],[367,37,314,35],[368,6,315,4],[369,6,316,4],[369,10,316,8,"selfClosing"],[369,21,316,19],[369,24,316,22],[369,29,316,27],[370,6,317,4],[370,10,317,8,"source"],[370,16,317,14],[370,17,317,15,"i"],[370,18,317,16],[370,19,317,17],[370,24,317,22],[370,27,317,25],[370,29,317,27],[371,8,318,6,"i"],[371,9,318,7],[371,13,318,11],[371,14,318,12],[372,8,319,6,"selfClosing"],[372,19,319,17],[372,22,319,20],[372,26,319,24],[373,6,320,4],[374,6,321,4],[374,10,321,8,"source"],[374,16,321,14],[374,17,321,15,"i"],[374,18,321,16],[374,19,321,17],[374,24,321,22],[374,27,321,25],[374,29,321,27],[375,8,322,6,"error"],[375,13,322,11],[375,14,322,12],[375,26,322,24],[375,27,322,25],[376,6,323,4],[377,6,324,4],[377,10,324,8],[377,11,324,9,"selfClosing"],[377,22,324,20],[377,24,324,22],[378,8,325,6,"currentElement"],[378,22,325,20],[378,25,325,23,"element"],[378,32,325,30],[379,8,326,6],[379,9,326,7],[380,10,327,8,"children"],[381,8,328,6],[381,9,328,7],[381,12,328,10,"element"],[381,19,328,17],[382,8,329,6,"stack"],[382,13,329,11],[382,14,329,12,"push"],[382,18,329,16],[382,19,329,17,"element"],[382,26,329,24],[382,27,329,25],[383,6,330,4],[384,6,331,4],[384,13,331,11,"neutral"],[384,20,331,18],[385,4,332,2],[386,4,333,2],[386,13,333,11,"comment"],[386,20,333,18,"comment"],[386,21,333,18],[386,23,333,21],[387,6,334,4],[387,12,334,10,"index"],[387,17,334,15],[387,20,334,18,"source"],[387,26,334,24],[387,27,334,25,"indexOf"],[387,34,334,32],[387,35,334,33],[387,40,334,38],[387,42,334,40,"i"],[387,43,334,41],[387,44,334,42],[388,6,335,4],[388,10,335,8],[388,11,335,9],[388,12,335,10,"index"],[388,17,335,15],[388,19,335,17],[389,8,336,6,"error"],[389,13,336,11],[389,14,336,12],[389,28,336,26],[389,29,336,27],[390,6,337,4],[391,6,338,4,"i"],[391,7,338,5],[391,10,338,8,"index"],[391,15,338,13],[391,18,338,16],[391,19,338,17],[392,6,339,4],[392,13,339,11,"neutral"],[392,20,339,18],[393,4,340,2],[394,4,341,2],[394,13,341,11,"cdata"],[394,18,341,16,"cdata"],[394,19,341,16],[394,21,341,19],[395,6,342,4],[395,12,342,10,"index"],[395,17,342,15],[395,20,342,18,"source"],[395,26,342,24],[395,27,342,25,"indexOf"],[395,34,342,32],[395,35,342,33],[395,40,342,38],[395,42,342,40,"i"],[395,43,342,41],[395,44,342,42],[396,6,343,4],[396,10,343,8],[396,11,343,9],[396,12,343,10,"index"],[396,17,343,15],[396,19,343,17],[397,8,344,6,"error"],[397,13,344,11],[397,14,344,12],[397,28,344,26],[397,29,344,27],[398,6,345,4],[399,6,346,4,"children"],[399,14,346,12],[399,15,346,13,"push"],[399,19,346,17],[399,20,346,18,"source"],[399,26,346,24],[399,27,346,25,"slice"],[399,32,346,30],[399,33,346,31,"i"],[399,34,346,32],[399,37,346,35],[399,38,346,36],[399,40,346,38,"index"],[399,45,346,43],[399,46,346,44],[399,47,346,45],[400,6,347,4,"i"],[400,7,347,5],[400,10,347,8,"index"],[400,15,347,13],[400,18,347,16],[400,19,347,17],[401,6,348,4],[401,13,348,11,"neutral"],[401,20,348,18],[402,4,349,2],[403,4,350,2],[403,13,350,11,"closingTag"],[403,23,350,21,"closingTag"],[403,24,350,21],[403,26,350,24],[404,6,351,4],[404,12,351,10,"tag"],[404,15,351,13],[404,18,351,16,"getName"],[404,25,351,23],[404,26,351,24],[404,27,351,25],[405,6,352,4],[405,10,352,8],[405,11,352,9,"tag"],[405,14,352,12],[405,16,352,14],[406,8,353,6,"error"],[406,13,353,11],[406,14,353,12],[406,33,353,31],[406,34,353,32],[407,6,354,4],[408,6,355,4],[408,10,355,8,"currentElement"],[408,24,355,22],[408,28,355,26,"tag"],[408,31,355,29],[408,36,355,34,"currentElement"],[408,50,355,48],[408,51,355,49,"tag"],[408,54,355,52],[408,56,355,54],[409,8,356,6,"error"],[409,13,356,11],[409,14,356,12],[409,40,356,38,"tag"],[409,43,356,41],[409,70,356,68,"currentElement"],[409,84,356,82],[409,85,356,83,"tag"],[409,88,356,86],[409,91,356,89],[409,92,356,90],[410,6,357,4],[411,6,358,4,"allowSpaces"],[411,17,358,15],[411,18,358,16],[411,19,358,17],[412,6,359,4],[412,10,359,8,"source"],[412,16,359,14],[412,17,359,15,"i"],[412,18,359,16],[412,19,359,17],[412,24,359,22],[412,27,359,25],[412,29,359,27],[413,8,360,6,"error"],[413,13,360,11],[413,14,360,12],[413,26,360,24],[413,27,360,25],[414,6,361,4],[415,6,362,4,"stack"],[415,11,362,9],[415,12,362,10,"pop"],[415,15,362,13],[415,16,362,14],[415,17,362,15],[416,6,363,4,"currentElement"],[416,20,363,18],[416,23,363,21,"stack"],[416,28,363,26],[416,29,363,27,"stack"],[416,34,363,32],[416,35,363,33,"length"],[416,41,363,39],[416,44,363,42],[416,45,363,43],[416,46,363,44],[417,6,364,4],[417,10,364,8,"currentElement"],[417,24,364,22],[417,26,364,24],[418,8,365,6],[418,9,365,7],[419,10,366,8,"children"],[420,8,367,6],[420,9,367,7],[420,12,367,10,"currentElement"],[420,26,367,24],[421,6,368,4],[422,6,369,4],[422,13,369,11,"neutral"],[422,20,369,18],[423,4,370,2],[424,4,371,2],[424,13,371,11,"getName"],[424,20,371,18,"getName"],[424,21,371,18],[424,23,371,21],[425,6,372,4],[425,10,372,8,"name"],[425,14,372,12],[425,17,372,15],[425,19,372,17],[426,6,373,4],[426,10,373,8,"char"],[426,14,373,12],[427,6,374,4],[427,13,374,11,"i"],[427,14,374,12],[427,17,374,15,"length"],[427,23,374,21],[427,27,374,25,"validNameCharacters"],[427,46,374,44],[427,47,374,45,"test"],[427,51,374,49],[427,52,374,50,"char"],[427,56,374,54],[427,59,374,57,"source"],[427,65,374,63],[427,66,374,64,"i"],[427,67,374,65],[427,68,374,66],[427,69,374,67],[427,71,374,69],[428,8,375,6,"name"],[428,12,375,10],[428,16,375,14,"char"],[428,20,375,18],[429,8,376,6,"i"],[429,9,376,7],[429,13,376,11],[429,14,376,12],[430,6,377,4],[431,6,378,4],[431,13,378,11,"name"],[431,17,378,15],[432,4,379,2],[433,4,380,2],[433,13,380,11,"getAttributes"],[433,26,380,24,"getAttributes"],[433,27,380,25,"props"],[433,32,380,30],[433,34,380,32],[434,6,381,4],[434,13,381,11,"i"],[434,14,381,12],[434,17,381,15,"length"],[434,23,381,21],[434,25,381,23],[435,8,382,6],[435,12,382,10],[435,13,382,11,"whitespace"],[435,23,382,21],[435,24,382,22,"test"],[435,28,382,26],[435,29,382,27,"source"],[435,35,382,33],[435,36,382,34,"i"],[435,37,382,35],[435,38,382,36],[435,39,382,37],[435,41,382,39],[436,10,383,8],[437,8,384,6],[438,8,385,6,"allowSpaces"],[438,19,385,17],[438,20,385,18],[438,21,385,19],[439,8,386,6],[439,14,386,12,"name"],[439,18,386,16],[439,21,386,19,"getName"],[439,28,386,26],[439,29,386,27],[439,30,386,28],[440,8,387,6],[440,12,387,10],[440,13,387,11,"name"],[440,17,387,15],[440,19,387,17],[441,10,388,8],[442,8,389,6],[443,8,390,6],[443,12,390,10,"value"],[443,17,390,15],[443,20,390,18],[443,24,390,22],[444,8,391,6,"allowSpaces"],[444,19,391,17],[444,20,391,18],[444,21,391,19],[445,8,392,6],[445,12,392,10,"source"],[445,18,392,16],[445,19,392,17,"i"],[445,20,392,18],[445,21,392,19],[445,26,392,24],[445,29,392,27],[445,31,392,29],[446,10,393,8,"i"],[446,11,393,9],[446,15,393,13],[446,16,393,14],[447,10,394,8,"allowSpaces"],[447,21,394,19],[447,22,394,20],[447,23,394,21],[448,10,395,8,"value"],[448,15,395,13],[448,18,395,16,"getAttributeValue"],[448,35,395,33],[448,36,395,34],[448,37,395,35],[449,10,396,8],[449,14,396,12,"name"],[449,18,396,16],[449,23,396,21],[449,27,396,25],[449,31,396,29],[449,32,396,30,"isNaN"],[449,37,396,35],[449,38,396,36],[449,39,396,37,"value"],[449,44,396,42],[449,45,396,43],[449,49,396,47,"value"],[449,54,396,52],[449,55,396,53,"trim"],[449,59,396,57],[449,60,396,58],[449,61,396,59],[449,66,396,64],[449,68,396,66],[449,70,396,68],[450,12,397,10,"value"],[450,17,397,15],[450,20,397,18],[450,21,397,19,"value"],[450,26,397,24],[451,10,398,8],[452,8,399,6],[453,8,400,6,"props"],[453,13,400,11],[453,14,400,12,"camelCase"],[453,23,400,21],[453,24,400,22,"name"],[453,28,400,26],[453,29,400,27],[453,30,400,28],[453,33,400,31,"value"],[453,38,400,36],[454,6,401,4],[455,4,402,2],[456,4,403,2],[456,13,403,11,"getAttributeValue"],[456,30,403,28,"getAttributeValue"],[456,31,403,28],[456,33,403,31],[457,6,404,4],[457,13,404,11,"quotemarks"],[457,23,404,21],[457,24,404,22,"test"],[457,28,404,26],[457,29,404,27,"source"],[457,35,404,33],[457,36,404,34,"i"],[457,37,404,35],[457,38,404,36],[457,39,404,37],[457,42,404,40,"getQuotedAttributeValue"],[457,65,404,63],[457,66,404,64],[457,67,404,65],[457,70,404,68,"getUnquotedAttributeValue"],[457,95,404,93],[457,96,404,94],[457,97,404,95],[458,4,405,2],[459,4,406,2],[459,13,406,11,"getUnquotedAttributeValue"],[459,38,406,36,"getUnquotedAttributeValue"],[459,39,406,36],[459,41,406,39],[460,6,407,4],[460,10,407,8,"value"],[460,15,407,13],[460,18,407,16],[460,20,407,18],[461,6,408,4],[461,9,408,7],[462,8,409,6],[462,14,409,12,"char"],[462,18,409,16],[462,21,409,19,"source"],[462,27,409,25],[462,28,409,26,"i"],[462,29,409,27],[462,30,409,28],[463,8,410,6],[463,12,410,10,"char"],[463,16,410,14],[463,21,410,19],[463,24,410,22],[463,28,410,26,"char"],[463,32,410,30],[463,37,410,35],[463,40,410,38],[463,44,410,42,"char"],[463,48,410,46],[463,53,410,51],[463,56,410,54],[463,58,410,56],[464,10,411,8],[464,17,411,15,"value"],[464,22,411,20],[465,8,412,6],[466,8,413,6,"value"],[466,13,413,11],[466,17,413,15,"char"],[466,21,413,19],[467,8,414,6,"i"],[467,9,414,7],[467,13,414,11],[467,14,414,12],[468,6,415,4],[468,7,415,5],[468,15,415,13,"i"],[468,16,415,14],[468,19,415,17,"length"],[468,25,415,23],[469,6,416,4],[469,13,416,11,"value"],[469,18,416,16],[470,4,417,2],[471,4,418,2],[471,13,418,11,"getQuotedAttributeValue"],[471,36,418,34,"getQuotedAttributeValue"],[471,37,418,34],[471,39,418,37],[472,6,419,4],[472,12,419,10,"quotemark"],[472,21,419,19],[472,24,419,22,"source"],[472,30,419,28],[472,31,419,29,"i"],[472,32,419,30],[472,34,419,32],[472,35,419,33],[473,6,420,4],[473,10,420,8,"value"],[473,15,420,13],[473,18,420,16],[473,20,420,18],[474,6,421,4],[474,10,421,8,"escaped"],[474,17,421,15],[474,20,421,18],[474,25,421,23],[475,6,422,4],[475,13,422,11,"i"],[475,14,422,12],[475,17,422,15,"length"],[475,23,422,21],[475,25,422,23],[476,8,423,6],[476,14,423,12,"char"],[476,18,423,16],[476,21,423,19,"source"],[476,27,423,25],[476,28,423,26,"i"],[476,29,423,27],[476,31,423,29],[476,32,423,30],[477,8,424,6],[477,12,424,10,"char"],[477,16,424,14],[477,21,424,19,"quotemark"],[477,30,424,28],[477,34,424,32],[477,35,424,33,"escaped"],[477,42,424,40],[477,44,424,42],[478,10,425,8],[478,17,425,15,"value"],[478,22,425,20],[479,8,426,6],[480,8,427,6],[480,12,427,10,"char"],[480,16,427,14],[480,21,427,19],[480,25,427,23],[480,29,427,27],[480,30,427,28,"escaped"],[480,37,427,35],[480,39,427,37],[481,10,428,8,"escaped"],[481,17,428,15],[481,20,428,18],[481,24,428,22],[482,8,429,6],[483,8,430,6,"value"],[483,13,430,11],[483,17,430,15,"escaped"],[483,24,430,22],[483,27,430,25],[483,32,430,30,"char"],[483,36,430,34],[483,38,430,36],[483,41,430,39,"char"],[483,45,430,43],[484,8,431,6,"escaped"],[484,15,431,13],[484,18,431,16],[484,23,431,21],[485,6,432,4],[486,6,433,4],[486,13,433,11,"value"],[486,18,433,16],[487,4,434,2],[488,4,435,2],[488,13,435,11,"allowSpaces"],[488,24,435,22,"allowSpaces"],[488,25,435,22],[488,27,435,25],[489,6,436,4],[489,13,436,11,"i"],[489,14,436,12],[489,17,436,15,"length"],[489,23,436,21],[489,27,436,25,"whitespace"],[489,37,436,35],[489,38,436,36,"test"],[489,42,436,40],[489,43,436,41,"source"],[489,49,436,47],[489,50,436,48,"i"],[489,51,436,49],[489,52,436,50],[489,53,436,51],[489,55,436,53],[490,8,437,6,"i"],[490,9,437,7],[490,13,437,11],[490,14,437,12],[491,6,438,4],[492,4,439,2],[493,4,440,2],[493,8,440,6,"i"],[493,9,440,7],[493,12,440,10],[493,13,440,11],[494,4,441,2],[494,11,441,9,"i"],[494,12,441,10],[494,15,441,13,"length"],[494,21,441,19],[494,23,441,21],[495,6,442,4],[495,10,442,8],[495,11,442,9,"state"],[495,16,442,14],[495,18,442,16],[496,8,443,6,"error"],[496,13,443,11],[496,14,443,12],[496,36,443,34],[496,37,443,35],[497,6,444,4],[498,6,445,4,"state"],[498,11,445,9],[498,14,445,12,"state"],[498,19,445,17],[498,20,445,18],[498,21,445,19],[499,6,446,4,"i"],[499,7,446,5],[499,11,446,9],[499,12,446,10],[500,4,447,2],[501,4,448,2],[501,8,448,6,"state"],[501,13,448,11],[501,18,448,16,"neutral"],[501,25,448,23],[501,27,448,25],[502,6,449,4,"error"],[502,11,449,9],[502,12,449,10],[502,37,449,35],[502,38,449,36],[503,4,450,2],[504,4,451,2],[504,8,451,6,"root"],[504,12,451,10],[504,14,451,12],[505,6,452,4],[505,12,452,10,"xml"],[505,15,452,13],[505,18,452,16],[505,19,452,17,"middleware"],[505,29,452,27],[505,32,452,30,"middleware"],[505,42,452,40],[505,43,452,41,"root"],[505,47,452,45],[505,48,452,46],[505,51,452,49,"root"],[505,55,452,53],[505,60,452,58,"root"],[505,64,452,62],[506,6,453,4],[506,12,453,10,"ast"],[506,15,453,13],[506,18,453,16,"xml"],[506,21,453,19],[506,22,453,20,"children"],[506,30,453,28],[506,31,453,29,"map"],[506,34,453,32],[506,35,453,33,"astToReact"],[506,45,453,43],[506,46,453,44],[507,6,454,4],[507,12,454,10,"jsx"],[507,15,454,13],[507,18,454,16,"xml"],[507,21,454,19],[508,6,455,4,"jsx"],[508,9,455,7],[508,10,455,8,"children"],[508,18,455,16],[508,21,455,19,"ast"],[508,24,455,22],[509,6,456,4],[509,13,456,11,"jsx"],[509,16,456,14],[510,4,457,2],[511,4,458,2],[511,11,458,9],[511,15,458,13],[512,2,459,0],[513,0,459,1],[513,3]],"functionMap":{"names":["_extends","<anonymous>","<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","SvgUri","useEffect$argument_0","fetchText.then$argument_0","fetchText.then._catch$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","string.split.filter$argument_0","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA,+EC,iKD,oCE;ACK;CDE;OEC;CFa;OGE;wBCQ,sCD;CHS;OKC;YCS;8BCC;KDI,QE;KFG;GDE;CLS;OSI;ECI;GDE;EEC;GFO;EGC;GHe;EIC;GJW;CTC;OcC;ECI;GDE;EEC;GFO;EGC;GHQ;EIC;GJY;CdC;kBmBC,wCnB;yBoBC,mDpB;OqBC;gDCE,aD;CrBc;OuBC;CvBgB;AwBI;CxBM;iByBC,iCzB;A0BC;C1B4B;O2BK;ECO;GDO;EEC;GFK;EGC;GHc;EIC;GJ4D;EKC;GLO;EMC;GNQ;EOC;GPoB;EQC;GRQ;ESC;GTsB;EUC;GVE;EWC;GXW;EYC;GZgB;EaC;GbI;C3BoB"},"hasCjsExports":false},"type":"js/module"}]}