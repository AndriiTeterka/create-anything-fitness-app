{"dependencies":[{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"TumjUqgKkj40CL5/as2VxzLfO54=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationBuilderContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":73,"index":179}}],"key":"vvb+tbs8cGp9hlTxgL5PZCjRz5E=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useNavigationCache = useNavigationCache;\n  var _reactNavigationRouters = require(_dependencyMap[0], \"@react-navigation/routers\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationBuilderContextJs = require(_dependencyMap[2], \"./NavigationBuilderContext.js\");\n  /**\n   * Hook to cache navigation objects for each screen in the navigator.\n   * It's important to cache them to make sure navigation objects don't change between renders.\n   * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n   */\n  function useNavigationCache({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter\n  }) {\n    const {\n      stackRef\n    } = React.useContext(_NavigationBuilderContextJs.NavigationBuilderContext);\n    const base = React.useMemo(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        emit,\n        ...rest\n      } = navigation;\n      const actions = {\n        ...router.actionCreators,\n        ..._reactNavigationRouters.CommonActions\n      };\n      const dispatch = () => {\n        throw new Error('Actions cannot be dispatched from a placeholder screen.');\n      };\n      const helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = dispatch;\n        return acc;\n      }, {});\n      return {\n        ...rest,\n        ...helpers,\n        addListener: () => {\n          // Event listeners are not supported for placeholder screens\n\n          return () => {\n            // Empty function\n          };\n        },\n        removeListener: () => {\n          // Event listeners are not supported for placeholder screens\n        },\n        dispatch,\n        getParent: id => {\n          if (id !== undefined && id === rest.getId()) {\n            return base;\n          }\n          return rest.getParent(id);\n        },\n        setOptions: () => {\n          throw new Error('Options cannot be set from a placeholder screen.');\n        },\n        isFocused: () => false\n      };\n    }, [navigation, router.actionCreators]);\n\n    // Cache object which holds navigation objects for each screen\n    // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n    // In reality, these deps will rarely change, if ever\n    const cache = React.useMemo(() => ({\n      current: {}\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [base, getState, navigation, setOptions, emitter]);\n    cache.current = state.routes.reduce((acc, route) => {\n      const previous = cache.current[route.key];\n      if (previous) {\n        // If a cached navigation object already exists, reuse it\n        acc[route.key] = previous;\n      } else {\n        const dispatch = thunk => {\n          const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n          if (action != null) {\n            navigation.dispatch({\n              source: route.key,\n              ...action\n            });\n          }\n        };\n        const withStack = callback => {\n          let isStackSet = false;\n          try {\n            if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n              // Capture the stack trace for devtools\n              stackRef.current = new Error().stack;\n              isStackSet = true;\n            }\n            callback();\n          } finally {\n            if (isStackSet && stackRef) {\n              stackRef.current = undefined;\n            }\n          }\n        };\n        const actions = {\n          ...router.actionCreators,\n          ..._reactNavigationRouters.CommonActions\n        };\n        const helpers = Object.keys(actions).reduce((acc, name) => {\n          acc[name] = (...args) => withStack(() =>\n          // @ts-expect-error: name is a valid key, but TypeScript is dumb\n          dispatch(actions[name](...args)));\n          return acc;\n        }, {});\n        acc[route.key] = {\n          ...base,\n          ...helpers,\n          // FIXME: too much work to fix the types for now\n          ...emitter.create(route.key),\n          dispatch: thunk => withStack(() => dispatch(thunk)),\n          getParent: id => {\n            if (id !== undefined && id === base.getId()) {\n              // If the passed id is the same as the current navigation id,\n              // we return the cached navigation object for the relevant route\n              return acc[route.key];\n            }\n            return base.getParent(id);\n          },\n          setOptions: options => {\n            setOptions(o => ({\n              ...o,\n              [route.key]: {\n                ...o[route.key],\n                ...options\n              }\n            }));\n          },\n          isFocused: () => {\n            const state = base.getState();\n            if (state.routes[state.index].key !== route.key) {\n              return false;\n            }\n\n            // If the current screen is focused, we also need to check if parent navigator is focused\n            // This makes sure that we return the focus state in the whole tree, not just this navigator\n            return navigation ? navigation.isFocused() : true;\n          }\n        };\n      }\n      return acc;\n    }, {});\n    return {\n      base,\n      navigations: cache.current\n    };\n  }\n});","lineCount":171,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,11,0,"exports"],[16,9,11,0],[16,10,11,0,"useNavigationCache"],[16,28,11,0],[16,31,11,0,"useNavigationCache"],[16,49,11,0],[17,2,3,0],[17,6,3,0,"_reactNavigationRouters"],[17,29,3,0],[17,32,3,0,"require"],[17,39,3,0],[17,40,3,0,"_dependencyMap"],[17,54,3,0],[18,2,4,0],[18,6,4,0,"_react"],[18,12,4,0],[18,15,4,0,"require"],[18,22,4,0],[18,23,4,0,"_dependencyMap"],[18,37,4,0],[19,2,4,0],[19,6,4,0,"React"],[19,11,4,0],[19,14,4,0,"_interopNamespace"],[19,31,4,0],[19,32,4,0,"_react"],[19,38,4,0],[20,2,5,0],[20,6,5,0,"_NavigationBuilderContextJs"],[20,33,5,0],[20,36,5,0,"require"],[20,43,5,0],[20,44,5,0,"_dependencyMap"],[20,58,5,0],[21,2,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[25,0,10,0],[26,2,11,7],[26,11,11,16,"useNavigationCache"],[26,29,11,34,"useNavigationCache"],[26,30,11,35],[27,4,12,2,"state"],[27,9,12,7],[28,4,13,2,"getState"],[28,12,13,10],[29,4,14,2,"navigation"],[29,14,14,12],[30,4,15,2,"setOptions"],[30,14,15,12],[31,4,16,2,"router"],[31,10,16,8],[32,4,17,2,"emitter"],[33,2,18,0],[33,3,18,1],[33,5,18,3],[34,4,19,2],[34,10,19,8],[35,6,20,4,"stackRef"],[36,4,21,2],[36,5,21,3],[36,8,21,6,"React"],[36,13,21,11],[36,14,21,12,"useContext"],[36,24,21,22],[36,25,21,23,"NavigationBuilderContext"],[36,52,21,47],[36,53,21,47,"NavigationBuilderContext"],[36,77,21,47],[36,78,21,48],[37,4,22,2],[37,10,22,8,"base"],[37,14,22,12],[37,17,22,15,"React"],[37,22,22,20],[37,23,22,21,"useMemo"],[37,30,22,28],[37,31,22,29],[37,37,22,35],[38,6,23,4],[39,6,24,4],[39,12,24,10],[40,8,25,6,"emit"],[40,12,25,10],[41,8,26,6],[41,11,26,9,"rest"],[42,6,27,4],[42,7,27,5],[42,10,27,8,"navigation"],[42,20,27,18],[43,6,28,4],[43,12,28,10,"actions"],[43,19,28,17],[43,22,28,20],[44,8,29,6],[44,11,29,9,"router"],[44,17,29,15],[44,18,29,16,"actionCreators"],[44,32,29,30],[45,8,30,6],[45,11,30,9,"CommonActions"],[45,34,30,22],[45,35,30,22,"CommonActions"],[46,6,31,4],[46,7,31,5],[47,6,32,4],[47,12,32,10,"dispatch"],[47,20,32,18],[47,23,32,21,"dispatch"],[47,24,32,21],[47,29,32,27],[48,8,33,6],[48,14,33,12],[48,18,33,16,"Error"],[48,23,33,21],[48,24,33,22],[48,81,33,79],[48,82,33,80],[49,6,34,4],[49,7,34,5],[50,6,35,4],[50,12,35,10,"helpers"],[50,19,35,17],[50,22,35,20,"Object"],[50,28,35,26],[50,29,35,27,"keys"],[50,33,35,31],[50,34,35,32,"actions"],[50,41,35,39],[50,42,35,40],[50,43,35,41,"reduce"],[50,49,35,47],[50,50,35,48],[50,51,35,49,"acc"],[50,54,35,52],[50,56,35,54,"name"],[50,60,35,58],[50,65,35,63],[51,8,36,6,"acc"],[51,11,36,9],[51,12,36,10,"name"],[51,16,36,14],[51,17,36,15],[51,20,36,18,"dispatch"],[51,28,36,26],[52,8,37,6],[52,15,37,13,"acc"],[52,18,37,16],[53,6,38,4],[53,7,38,5],[53,9,38,7],[53,10,38,8],[53,11,38,9],[53,12,38,10],[54,6,39,4],[54,13,39,11],[55,8,40,6],[55,11,40,9,"rest"],[55,15,40,13],[56,8,41,6],[56,11,41,9,"helpers"],[56,18,41,16],[57,8,42,6,"addListener"],[57,19,42,17],[57,21,42,19,"addListener"],[57,22,42,19],[57,27,42,25],[58,10,43,8],[60,10,45,8],[60,17,45,15],[60,23,45,21],[61,12,46,10],[62,10,46,10],[62,11,47,9],[63,8,48,6],[63,9,48,7],[64,8,49,6,"removeListener"],[64,22,49,20],[64,24,49,22,"removeListener"],[64,25,49,22],[64,30,49,28],[65,10,50,8],[66,8,50,8],[66,9,51,7],[67,8,52,6,"dispatch"],[67,16,52,14],[68,8,53,6,"getParent"],[68,17,53,15],[68,19,53,17,"id"],[68,21,53,19],[68,25,53,23],[69,10,54,8],[69,14,54,12,"id"],[69,16,54,14],[69,21,54,19,"undefined"],[69,30,54,28],[69,34,54,32,"id"],[69,36,54,34],[69,41,54,39,"rest"],[69,45,54,43],[69,46,54,44,"getId"],[69,51,54,49],[69,52,54,50],[69,53,54,51],[69,55,54,53],[70,12,55,10],[70,19,55,17,"base"],[70,23,55,21],[71,10,56,8],[72,10,57,8],[72,17,57,15,"rest"],[72,21,57,19],[72,22,57,20,"getParent"],[72,31,57,29],[72,32,57,30,"id"],[72,34,57,32],[72,35,57,33],[73,8,58,6],[73,9,58,7],[74,8,59,6,"setOptions"],[74,18,59,16],[74,20,59,18,"setOptions"],[74,21,59,18],[74,26,59,24],[75,10,60,8],[75,16,60,14],[75,20,60,18,"Error"],[75,25,60,23],[75,26,60,24],[75,76,60,74],[75,77,60,75],[76,8,61,6],[76,9,61,7],[77,8,62,6,"isFocused"],[77,17,62,15],[77,19,62,17,"isFocused"],[77,20,62,17],[77,25,62,23],[78,6,63,4],[78,7,63,5],[79,4,64,2],[79,5,64,3],[79,7,64,5],[79,8,64,6,"navigation"],[79,18,64,16],[79,20,64,18,"router"],[79,26,64,24],[79,27,64,25,"actionCreators"],[79,41,64,39],[79,42,64,40],[79,43,64,41],[81,4,66,2],[82,4,67,2],[83,4,68,2],[84,4,69,2],[84,10,69,8,"cache"],[84,15,69,13],[84,18,69,16,"React"],[84,23,69,21],[84,24,69,22,"useMemo"],[84,31,69,29],[84,32,69,30],[84,39,69,37],[85,6,70,4,"current"],[85,13,70,11],[85,15,70,13],[85,16,70,14],[86,4,71,2],[86,5,71,3],[86,6,71,4],[87,4,72,2],[88,4,73,2],[88,5,73,3,"base"],[88,9,73,7],[88,11,73,9,"getState"],[88,19,73,17],[88,21,73,19,"navigation"],[88,31,73,29],[88,33,73,31,"setOptions"],[88,43,73,41],[88,45,73,43,"emitter"],[88,52,73,50],[88,53,73,51],[88,54,73,52],[89,4,74,2,"cache"],[89,9,74,7],[89,10,74,8,"current"],[89,17,74,15],[89,20,74,18,"state"],[89,25,74,23],[89,26,74,24,"routes"],[89,32,74,30],[89,33,74,31,"reduce"],[89,39,74,37],[89,40,74,38],[89,41,74,39,"acc"],[89,44,74,42],[89,46,74,44,"route"],[89,51,74,49],[89,56,74,54],[90,6,75,4],[90,12,75,10,"previous"],[90,20,75,18],[90,23,75,21,"cache"],[90,28,75,26],[90,29,75,27,"current"],[90,36,75,34],[90,37,75,35,"route"],[90,42,75,40],[90,43,75,41,"key"],[90,46,75,44],[90,47,75,45],[91,6,76,4],[91,10,76,8,"previous"],[91,18,76,16],[91,20,76,18],[92,8,77,6],[93,8,78,6,"acc"],[93,11,78,9],[93,12,78,10,"route"],[93,17,78,15],[93,18,78,16,"key"],[93,21,78,19],[93,22,78,20],[93,25,78,23,"previous"],[93,33,78,31],[94,6,79,4],[94,7,79,5],[94,13,79,11],[95,8,80,6],[95,14,80,12,"dispatch"],[95,22,80,20],[95,25,80,23,"thunk"],[95,30,80,28],[95,34,80,32],[96,10,81,8],[96,16,81,14,"action"],[96,22,81,20],[96,25,81,23],[96,32,81,30,"thunk"],[96,37,81,35],[96,42,81,40],[96,52,81,50],[96,55,81,53,"thunk"],[96,60,81,58],[96,61,81,59,"getState"],[96,69,81,67],[96,70,81,68],[96,71,81,69],[96,72,81,70],[96,75,81,73,"thunk"],[96,80,81,78],[97,10,82,8],[97,14,82,12,"action"],[97,20,82,18],[97,24,82,22],[97,28,82,26],[97,30,82,28],[98,12,83,10,"navigation"],[98,22,83,20],[98,23,83,21,"dispatch"],[98,31,83,29],[98,32,83,30],[99,14,84,12,"source"],[99,20,84,18],[99,22,84,20,"route"],[99,27,84,25],[99,28,84,26,"key"],[99,31,84,29],[100,14,85,12],[100,17,85,15,"action"],[101,12,86,10],[101,13,86,11],[101,14,86,12],[102,10,87,8],[103,8,88,6],[103,9,88,7],[104,8,89,6],[104,14,89,12,"withStack"],[104,23,89,21],[104,26,89,24,"callback"],[104,34,89,32],[104,38,89,36],[105,10,90,8],[105,14,90,12,"isStackSet"],[105,24,90,22],[105,27,90,25],[105,32,90,30],[106,10,91,8],[106,14,91,12],[107,12,92,10],[107,16,92,14,"process"],[107,23,92,21],[107,24,92,22,"env"],[107,27,92,25],[107,28,92,26,"NODE_ENV"],[107,36,92,34],[107,41,92,39],[107,53,92,51],[107,57,92,55,"stackRef"],[107,65,92,63],[107,69,92,67],[107,70,92,68,"stackRef"],[107,78,92,76],[107,79,92,77,"current"],[107,86,92,84],[107,88,92,86],[108,14,93,12],[109,14,94,12,"stackRef"],[109,22,94,20],[109,23,94,21,"current"],[109,30,94,28],[109,33,94,31],[109,37,94,35,"Error"],[109,42,94,40],[109,43,94,41],[109,44,94,42],[109,45,94,43,"stack"],[109,50,94,48],[110,14,95,12,"isStackSet"],[110,24,95,22],[110,27,95,25],[110,31,95,29],[111,12,96,10],[112,12,97,10,"callback"],[112,20,97,18],[112,21,97,19],[112,22,97,20],[113,10,98,8],[113,11,98,9],[113,20,98,18],[114,12,99,10],[114,16,99,14,"isStackSet"],[114,26,99,24],[114,30,99,28,"stackRef"],[114,38,99,36],[114,40,99,38],[115,14,100,12,"stackRef"],[115,22,100,20],[115,23,100,21,"current"],[115,30,100,28],[115,33,100,31,"undefined"],[115,42,100,40],[116,12,101,10],[117,10,102,8],[118,8,103,6],[118,9,103,7],[119,8,104,6],[119,14,104,12,"actions"],[119,21,104,19],[119,24,104,22],[120,10,105,8],[120,13,105,11,"router"],[120,19,105,17],[120,20,105,18,"actionCreators"],[120,34,105,32],[121,10,106,8],[121,13,106,11,"CommonActions"],[121,36,106,24],[121,37,106,24,"CommonActions"],[122,8,107,6],[122,9,107,7],[123,8,108,6],[123,14,108,12,"helpers"],[123,21,108,19],[123,24,108,22,"Object"],[123,30,108,28],[123,31,108,29,"keys"],[123,35,108,33],[123,36,108,34,"actions"],[123,43,108,41],[123,44,108,42],[123,45,108,43,"reduce"],[123,51,108,49],[123,52,108,50],[123,53,108,51,"acc"],[123,56,108,54],[123,58,108,56,"name"],[123,62,108,60],[123,67,108,65],[124,10,109,8,"acc"],[124,13,109,11],[124,14,109,12,"name"],[124,18,109,16],[124,19,109,17],[124,22,109,20],[124,23,109,21],[124,26,109,24,"args"],[124,30,109,28],[124,35,109,33,"withStack"],[124,44,109,42],[124,45,109,43],[125,10,110,8],[126,10,111,8,"dispatch"],[126,18,111,16],[126,19,111,17,"actions"],[126,26,111,24],[126,27,111,25,"name"],[126,31,111,29],[126,32,111,30],[126,33,111,31],[126,36,111,34,"args"],[126,40,111,38],[126,41,111,39],[126,42,111,40],[126,43,111,41],[127,10,112,8],[127,17,112,15,"acc"],[127,20,112,18],[128,8,113,6],[128,9,113,7],[128,11,113,9],[128,12,113,10],[128,13,113,11],[128,14,113,12],[129,8,114,6,"acc"],[129,11,114,9],[129,12,114,10,"route"],[129,17,114,15],[129,18,114,16,"key"],[129,21,114,19],[129,22,114,20],[129,25,114,23],[130,10,115,8],[130,13,115,11,"base"],[130,17,115,15],[131,10,116,8],[131,13,116,11,"helpers"],[131,20,116,18],[132,10,117,8],[133,10,118,8],[133,13,118,11,"emitter"],[133,20,118,18],[133,21,118,19,"create"],[133,27,118,25],[133,28,118,26,"route"],[133,33,118,31],[133,34,118,32,"key"],[133,37,118,35],[133,38,118,36],[134,10,119,8,"dispatch"],[134,18,119,16],[134,20,119,18,"thunk"],[134,25,119,23],[134,29,119,27,"withStack"],[134,38,119,36],[134,39,119,37],[134,45,119,43,"dispatch"],[134,53,119,51],[134,54,119,52,"thunk"],[134,59,119,57],[134,60,119,58],[134,61,119,59],[135,10,120,8,"getParent"],[135,19,120,17],[135,21,120,19,"id"],[135,23,120,21],[135,27,120,25],[136,12,121,10],[136,16,121,14,"id"],[136,18,121,16],[136,23,121,21,"undefined"],[136,32,121,30],[136,36,121,34,"id"],[136,38,121,36],[136,43,121,41,"base"],[136,47,121,45],[136,48,121,46,"getId"],[136,53,121,51],[136,54,121,52],[136,55,121,53],[136,57,121,55],[137,14,122,12],[138,14,123,12],[139,14,124,12],[139,21,124,19,"acc"],[139,24,124,22],[139,25,124,23,"route"],[139,30,124,28],[139,31,124,29,"key"],[139,34,124,32],[139,35,124,33],[140,12,125,10],[141,12,126,10],[141,19,126,17,"base"],[141,23,126,21],[141,24,126,22,"getParent"],[141,33,126,31],[141,34,126,32,"id"],[141,36,126,34],[141,37,126,35],[142,10,127,8],[142,11,127,9],[143,10,128,8,"setOptions"],[143,20,128,18],[143,22,128,20,"options"],[143,29,128,27],[143,33,128,31],[144,12,129,10,"setOptions"],[144,22,129,20],[144,23,129,21,"o"],[144,24,129,22],[144,29,129,27],[145,14,130,12],[145,17,130,15,"o"],[145,18,130,16],[146,14,131,12],[146,15,131,13,"route"],[146,20,131,18],[146,21,131,19,"key"],[146,24,131,22],[146,27,131,25],[147,16,132,14],[147,19,132,17,"o"],[147,20,132,18],[147,21,132,19,"route"],[147,26,132,24],[147,27,132,25,"key"],[147,30,132,28],[147,31,132,29],[148,16,133,14],[148,19,133,17,"options"],[149,14,134,12],[150,12,135,10],[150,13,135,11],[150,14,135,12],[150,15,135,13],[151,10,136,8],[151,11,136,9],[152,10,137,8,"isFocused"],[152,19,137,17],[152,21,137,19,"isFocused"],[152,22,137,19],[152,27,137,25],[153,12,138,10],[153,18,138,16,"state"],[153,23,138,21],[153,26,138,24,"base"],[153,30,138,28],[153,31,138,29,"getState"],[153,39,138,37],[153,40,138,38],[153,41,138,39],[154,12,139,10],[154,16,139,14,"state"],[154,21,139,19],[154,22,139,20,"routes"],[154,28,139,26],[154,29,139,27,"state"],[154,34,139,32],[154,35,139,33,"index"],[154,40,139,38],[154,41,139,39],[154,42,139,40,"key"],[154,45,139,43],[154,50,139,48,"route"],[154,55,139,53],[154,56,139,54,"key"],[154,59,139,57],[154,61,139,59],[155,14,140,12],[155,21,140,19],[155,26,140,24],[156,12,141,10],[158,12,143,10],[159,12,144,10],[160,12,145,10],[160,19,145,17,"navigation"],[160,29,145,27],[160,32,145,30,"navigation"],[160,42,145,40],[160,43,145,41,"isFocused"],[160,52,145,50],[160,53,145,51],[160,54,145,52],[160,57,145,55],[160,61,145,59],[161,10,146,8],[162,8,147,6],[162,9,147,7],[163,6,148,4],[164,6,149,4],[164,13,149,11,"acc"],[164,16,149,14],[165,4,150,2],[165,5,150,3],[165,7,150,5],[165,8,150,6],[165,9,150,7],[165,10,150,8],[166,4,151,2],[166,11,151,9],[167,6,152,4,"base"],[167,10,152,8],[168,6,153,4,"navigations"],[168,17,153,15],[168,19,153,17,"cache"],[168,24,153,22],[168,25,153,23,"current"],[169,4,154,2],[169,5,154,3],[170,2,155,0],[171,0,155,1],[171,3]],"functionMap":{"names":["<global>","useNavigationCache","React.useMemo$argument_0","dispatch","Object.keys.reduce$argument_0","addListener","<anonymous>","removeListener","getParent","setOptions","isFocused","state.routes.reduce$argument_0","withStack","acc.name","withStack$argument_0","acc.route.key.dispatch","acc.route.key.getParent","acc.route.key.setOptions","setOptions$argument_0","acc.route.key.isFocused"],"mappings":"AAA;OCU;6BCW;qBCU;KDE;gDEC;KFG;mBGI;eCG;SDE;OHC;sBKC;OLE;iBME;ONK;kBOC;OPE;iBQC,WR;GDE;8BCK;IDE;sCUG;uBRM;OQQ;wBCC;ODc;kDPK;oBSC,uBC;wCDE,CT;OOE;kBIM,mBD,qBC,CJ;mBKC;SLO;oBMC;qBCC;YDM;SNC;mBQC;SRS;GVI;CDK"},"hasCjsExports":false},"type":"js/module"}]}