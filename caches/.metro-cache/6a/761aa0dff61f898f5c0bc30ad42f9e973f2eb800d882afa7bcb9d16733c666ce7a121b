{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./assignRef","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":40,"index":72}}],"key":"YFkdemC04xpzOlnEd9pTHe8eLzA=","exportNames":["*"],"imports":1}},{"name":"./useRef","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":73},"end":{"line":3,"column":42,"index":115}}],"key":"zfEgW9zMqp9/GmpjOrNPNu5vyL0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useMergeRefs = useMergeRefs;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _assignRef = require(_dependencyMap[1], \"./assignRef\");\n  var _useRef = require(_dependencyMap[2], \"./useRef\");\n  var useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n  var currentValues = new WeakMap();\n  /**\n   * Merges two or more refs together providing a single interface to set their value\n   * @param {RefObject|Ref} refs\n   * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n   *\n   * @see {@link mergeRefs} a version without buit-in memoization\n   * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n   * @example\n   * const Component = React.forwardRef((props, ref) => {\n   *   const ownRef = useRef();\n   *   const domRef = useMergeRefs([ref, ownRef]); // ðŸ‘ˆ merge together\n   *   return <div ref={domRef}>...</div>\n   * }\n   */\n  function useMergeRefs(refs, defaultValue) {\n    var callbackRef = (0, _useRef.useCallbackRef)(defaultValue || null, function (newValue) {\n      return refs.forEach(function (ref) {\n        return (0, _assignRef.assignRef)(ref, newValue);\n      });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n      var oldValue = currentValues.get(callbackRef);\n      if (oldValue) {\n        var prevRefs_1 = new Set(oldValue);\n        var nextRefs_1 = new Set(refs);\n        var current_1 = callbackRef.current;\n        prevRefs_1.forEach(function (ref) {\n          if (!nextRefs_1.has(ref)) {\n            (0, _assignRef.assignRef)(ref, null);\n          }\n        });\n        nextRefs_1.forEach(function (ref) {\n          if (!prevRefs_1.has(ref)) {\n            (0, _assignRef.assignRef)(ref, current_1);\n          }\n        });\n      }\n      currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n  }\n});","lineCount":65,"map":[[16,2,20,0,"exports"],[16,9,20,0],[16,10,20,0,"useMergeRefs"],[16,22,20,0],[16,25,20,0,"useMergeRefs"],[16,37,20,0],[17,2,1,0],[17,6,1,0,"_react"],[17,12,1,0],[17,15,1,0,"require"],[17,22,1,0],[17,23,1,0,"_dependencyMap"],[17,37,1,0],[18,2,1,0],[18,6,1,0,"React"],[18,11,1,0],[18,14,1,0,"_interopNamespace"],[18,31,1,0],[18,32,1,0,"_react"],[18,38,1,0],[19,2,2,0],[19,6,2,0,"_assignRef"],[19,16,2,0],[19,19,2,0,"require"],[19,26,2,0],[19,27,2,0,"_dependencyMap"],[19,41,2,0],[20,2,3,0],[20,6,3,0,"_useRef"],[20,13,3,0],[20,16,3,0,"require"],[20,23,3,0],[20,24,3,0,"_dependencyMap"],[20,38,3,0],[21,2,4,0],[21,6,4,4,"useIsomorphicLayoutEffect"],[21,31,4,29],[21,34,4,32],[21,41,4,39,"window"],[21,47,4,45],[21,52,4,50],[21,63,4,61],[21,66,4,64,"React"],[21,71,4,69],[21,72,4,70,"useLayoutEffect"],[21,87,4,85],[21,90,4,88,"React"],[21,95,4,93],[21,96,4,94,"useEffect"],[21,105,4,103],[22,2,5,0],[22,6,5,4,"currentValues"],[22,19,5,17],[22,22,5,20],[22,26,5,24,"WeakMap"],[22,33,5,31],[22,34,5,32],[22,35,5,33],[23,2,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,0,11,0],[29,0,12,0],[30,0,13,0],[31,0,14,0],[32,0,15,0],[33,0,16,0],[34,0,17,0],[35,0,18,0],[36,0,19,0],[37,2,20,7],[37,11,20,16,"useMergeRefs"],[37,23,20,28,"useMergeRefs"],[37,24,20,29,"refs"],[37,28,20,33],[37,30,20,35,"defaultValue"],[37,42,20,47],[37,44,20,49],[38,4,21,4],[38,8,21,8,"callbackRef"],[38,19,21,19],[38,22,21,22],[38,26,21,22,"useCallbackRef"],[38,33,21,36],[38,34,21,36,"useCallbackRef"],[38,48,21,36],[38,50,21,37,"defaultValue"],[38,62,21,49],[38,66,21,53],[38,70,21,57],[38,72,21,59],[38,82,21,69,"newValue"],[38,90,21,77],[38,92,21,79],[39,6,22,8],[39,13,22,15,"refs"],[39,17,22,19],[39,18,22,20,"forEach"],[39,25,22,27],[39,26,22,28],[39,36,22,38,"ref"],[39,39,22,41],[39,41,22,43],[40,8,22,45],[40,15,22,52],[40,19,22,52,"assignRef"],[40,29,22,61],[40,30,22,61,"assignRef"],[40,39,22,61],[40,41,22,62,"ref"],[40,44,22,65],[40,46,22,67,"newValue"],[40,54,22,75],[40,55,22,76],[41,6,22,78],[41,7,22,79],[41,8,22,80],[42,4,23,4],[42,5,23,5],[42,6,23,6],[43,4,24,4],[44,4,25,4,"useIsomorphicLayoutEffect"],[44,29,25,29],[44,30,25,30],[44,42,25,42],[45,6,26,8],[45,10,26,12,"oldValue"],[45,18,26,20],[45,21,26,23,"currentValues"],[45,34,26,36],[45,35,26,37,"get"],[45,38,26,40],[45,39,26,41,"callbackRef"],[45,50,26,52],[45,51,26,53],[46,6,27,8],[46,10,27,12,"oldValue"],[46,18,27,20],[46,20,27,22],[47,8,28,12],[47,12,28,16,"prevRefs_1"],[47,22,28,26],[47,25,28,29],[47,29,28,33,"Set"],[47,32,28,36],[47,33,28,37,"oldValue"],[47,41,28,45],[47,42,28,46],[48,8,29,12],[48,12,29,16,"nextRefs_1"],[48,22,29,26],[48,25,29,29],[48,29,29,33,"Set"],[48,32,29,36],[48,33,29,37,"refs"],[48,37,29,41],[48,38,29,42],[49,8,30,12],[49,12,30,16,"current_1"],[49,21,30,25],[49,24,30,28,"callbackRef"],[49,35,30,39],[49,36,30,40,"current"],[49,43,30,47],[50,8,31,12,"prevRefs_1"],[50,18,31,22],[50,19,31,23,"forEach"],[50,26,31,30],[50,27,31,31],[50,37,31,41,"ref"],[50,40,31,44],[50,42,31,46],[51,10,32,16],[51,14,32,20],[51,15,32,21,"nextRefs_1"],[51,25,32,31],[51,26,32,32,"has"],[51,29,32,35],[51,30,32,36,"ref"],[51,33,32,39],[51,34,32,40],[51,36,32,42],[52,12,33,20],[52,16,33,20,"assignRef"],[52,26,33,29],[52,27,33,29,"assignRef"],[52,36,33,29],[52,38,33,30,"ref"],[52,41,33,33],[52,43,33,35],[52,47,33,39],[52,48,33,40],[53,10,34,16],[54,8,35,12],[54,9,35,13],[54,10,35,14],[55,8,36,12,"nextRefs_1"],[55,18,36,22],[55,19,36,23,"forEach"],[55,26,36,30],[55,27,36,31],[55,37,36,41,"ref"],[55,40,36,44],[55,42,36,46],[56,10,37,16],[56,14,37,20],[56,15,37,21,"prevRefs_1"],[56,25,37,31],[56,26,37,32,"has"],[56,29,37,35],[56,30,37,36,"ref"],[56,33,37,39],[56,34,37,40],[56,36,37,42],[57,12,38,20],[57,16,38,20,"assignRef"],[57,26,38,29],[57,27,38,29,"assignRef"],[57,36,38,29],[57,38,38,30,"ref"],[57,41,38,33],[57,43,38,35,"current_1"],[57,52,38,44],[57,53,38,45],[58,10,39,16],[59,8,40,12],[59,9,40,13],[59,10,40,14],[60,6,41,8],[61,6,42,8,"currentValues"],[61,19,42,21],[61,20,42,22,"set"],[61,23,42,25],[61,24,42,26,"callbackRef"],[61,35,42,37],[61,37,42,39,"refs"],[61,41,42,43],[61,42,42,44],[62,4,43,4],[62,5,43,5],[62,7,43,7],[62,8,43,8,"refs"],[62,12,43,12],[62,13,43,13],[62,14,43,14],[63,4,44,4],[63,11,44,11,"callbackRef"],[63,22,44,22],[64,2,45,0],[65,0,45,1],[65,3]],"functionMap":{"names":["<global>","useMergeRefs","useCallbackRef$argument_1","refs.forEach$argument_0","useIsomorphicLayoutEffect$argument_0","prevRefs_1.forEach$argument_0","nextRefs_1.forEach$argument_0"],"mappings":"AAA;OCmB;2DCC;4BCC,mDD;KDC;8BGE;+BCM;aDI;+BEC;aFI;KHG;CDE"},"hasCjsExports":false},"type":"js/module"}]}