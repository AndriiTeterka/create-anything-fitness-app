{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":59,"index":106}}],"key":"RM0XoJ1uy5+hqq85ZlLNt6FYuco=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useFocusEvents = useFocusEvents;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationContextJs = require(_dependencyMap[1], \"./NavigationContext.js\");\n  /**\n   * Hook to take care of emitting `focus` and `blur` events.\n   */\n  function useFocusEvents({\n    state,\n    emitter\n  }) {\n    const navigation = React.useContext(_NavigationContextJs.NavigationContext);\n    const lastFocusedKeyRef = React.useRef(undefined);\n    const currentFocusedKey = state.routes[state.index].key;\n\n    // When the parent screen changes its focus state, we also need to change child's focus\n    // Coz the child screen can't be focused if the parent screen is out of focus\n    React.useEffect(() => navigation?.addListener('focus', () => {\n      lastFocusedKeyRef.current = currentFocusedKey;\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => navigation?.addListener('blur', () => {\n      lastFocusedKeyRef.current = undefined;\n      emitter.emit({\n        type: 'blur',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => {\n      const lastFocusedKey = lastFocusedKeyRef.current;\n      lastFocusedKeyRef.current = currentFocusedKey;\n\n      // We wouldn't have `lastFocusedKey` on initial mount\n      // Fire focus event for the current route on mount if there's no parent navigator\n      if (lastFocusedKey === undefined && !navigation) {\n        emitter.emit({\n          type: 'focus',\n          target: currentFocusedKey\n        });\n      }\n\n      // We should only emit events when the focused key changed and navigator is focused\n      // When navigator is not focused, screens inside shouldn't receive focused status either\n      if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {\n        return;\n      }\n      if (lastFocusedKey === undefined) {\n        // Only fire events after initial mount\n        return;\n      }\n      emitter.emit({\n        type: 'blur',\n        target: lastFocusedKey\n      });\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }, [currentFocusedKey, emitter, navigation]);\n  }\n});","lineCount":79,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,8,0,"exports"],[16,9,8,0],[16,10,8,0,"useFocusEvents"],[16,24,8,0],[16,27,8,0,"useFocusEvents"],[16,41,8,0],[17,2,3,0],[17,6,3,0,"_react"],[17,12,3,0],[17,15,3,0,"require"],[17,22,3,0],[17,23,3,0,"_dependencyMap"],[17,37,3,0],[18,2,3,0],[18,6,3,0,"React"],[18,11,3,0],[18,14,3,0,"_interopNamespace"],[18,31,3,0],[18,32,3,0,"_react"],[18,38,3,0],[19,2,4,0],[19,6,4,0,"_NavigationContextJs"],[19,26,4,0],[19,29,4,0,"require"],[19,36,4,0],[19,37,4,0,"_dependencyMap"],[19,51,4,0],[20,2,5,0],[21,0,6,0],[22,0,7,0],[23,2,8,7],[23,11,8,16,"useFocusEvents"],[23,25,8,30,"useFocusEvents"],[23,26,8,31],[24,4,9,2,"state"],[24,9,9,7],[25,4,10,2,"emitter"],[26,2,11,0],[26,3,11,1],[26,5,11,3],[27,4,12,2],[27,10,12,8,"navigation"],[27,20,12,18],[27,23,12,21,"React"],[27,28,12,26],[27,29,12,27,"useContext"],[27,39,12,37],[27,40,12,38,"NavigationContext"],[27,60,12,55],[27,61,12,55,"NavigationContext"],[27,78,12,55],[27,79,12,56],[28,4,13,2],[28,10,13,8,"lastFocusedKeyRef"],[28,27,13,25],[28,30,13,28,"React"],[28,35,13,33],[28,36,13,34,"useRef"],[28,42,13,40],[28,43,13,41,"undefined"],[28,52,13,50],[28,53,13,51],[29,4,14,2],[29,10,14,8,"currentFocusedKey"],[29,27,14,25],[29,30,14,28,"state"],[29,35,14,33],[29,36,14,34,"routes"],[29,42,14,40],[29,43,14,41,"state"],[29,48,14,46],[29,49,14,47,"index"],[29,54,14,52],[29,55,14,53],[29,56,14,54,"key"],[29,59,14,57],[31,4,16,2],[32,4,17,2],[33,4,18,2,"React"],[33,9,18,7],[33,10,18,8,"useEffect"],[33,19,18,17],[33,20,18,18],[33,26,18,24,"navigation"],[33,36,18,34],[33,38,18,36,"addListener"],[33,49,18,47],[33,50,18,48],[33,57,18,55],[33,59,18,57],[33,65,18,63],[34,6,19,4,"lastFocusedKeyRef"],[34,23,19,21],[34,24,19,22,"current"],[34,31,19,29],[34,34,19,32,"currentFocusedKey"],[34,51,19,49],[35,6,20,4,"emitter"],[35,13,20,11],[35,14,20,12,"emit"],[35,18,20,16],[35,19,20,17],[36,8,21,6,"type"],[36,12,21,10],[36,14,21,12],[36,21,21,19],[37,8,22,6,"target"],[37,14,22,12],[37,16,22,14,"currentFocusedKey"],[38,6,23,4],[38,7,23,5],[38,8,23,6],[39,4,24,2],[39,5,24,3],[39,6,24,4],[39,8,24,6],[39,9,24,7,"currentFocusedKey"],[39,26,24,24],[39,28,24,26,"emitter"],[39,35,24,33],[39,37,24,35,"navigation"],[39,47,24,45],[39,48,24,46],[39,49,24,47],[40,4,25,2,"React"],[40,9,25,7],[40,10,25,8,"useEffect"],[40,19,25,17],[40,20,25,18],[40,26,25,24,"navigation"],[40,36,25,34],[40,38,25,36,"addListener"],[40,49,25,47],[40,50,25,48],[40,56,25,54],[40,58,25,56],[40,64,25,62],[41,6,26,4,"lastFocusedKeyRef"],[41,23,26,21],[41,24,26,22,"current"],[41,31,26,29],[41,34,26,32,"undefined"],[41,43,26,41],[42,6,27,4,"emitter"],[42,13,27,11],[42,14,27,12,"emit"],[42,18,27,16],[42,19,27,17],[43,8,28,6,"type"],[43,12,28,10],[43,14,28,12],[43,20,28,18],[44,8,29,6,"target"],[44,14,29,12],[44,16,29,14,"currentFocusedKey"],[45,6,30,4],[45,7,30,5],[45,8,30,6],[46,4,31,2],[46,5,31,3],[46,6,31,4],[46,8,31,6],[46,9,31,7,"currentFocusedKey"],[46,26,31,24],[46,28,31,26,"emitter"],[46,35,31,33],[46,37,31,35,"navigation"],[46,47,31,45],[46,48,31,46],[46,49,31,47],[47,4,32,2,"React"],[47,9,32,7],[47,10,32,8,"useEffect"],[47,19,32,17],[47,20,32,18],[47,26,32,24],[48,6,33,4],[48,12,33,10,"lastFocusedKey"],[48,26,33,24],[48,29,33,27,"lastFocusedKeyRef"],[48,46,33,44],[48,47,33,45,"current"],[48,54,33,52],[49,6,34,4,"lastFocusedKeyRef"],[49,23,34,21],[49,24,34,22,"current"],[49,31,34,29],[49,34,34,32,"currentFocusedKey"],[49,51,34,49],[51,6,36,4],[52,6,37,4],[53,6,38,4],[53,10,38,8,"lastFocusedKey"],[53,24,38,22],[53,29,38,27,"undefined"],[53,38,38,36],[53,42,38,40],[53,43,38,41,"navigation"],[53,53,38,51],[53,55,38,53],[54,8,39,6,"emitter"],[54,15,39,13],[54,16,39,14,"emit"],[54,20,39,18],[54,21,39,19],[55,10,40,8,"type"],[55,14,40,12],[55,16,40,14],[55,23,40,21],[56,10,41,8,"target"],[56,16,41,14],[56,18,41,16,"currentFocusedKey"],[57,8,42,6],[57,9,42,7],[57,10,42,8],[58,6,43,4],[60,6,45,4],[61,6,46,4],[62,6,47,4],[62,10,47,8,"lastFocusedKey"],[62,24,47,22],[62,29,47,27,"currentFocusedKey"],[62,46,47,44],[62,50,47,48],[62,52,47,50,"navigation"],[62,62,47,60],[62,65,47,63,"navigation"],[62,75,47,73],[62,76,47,74,"isFocused"],[62,85,47,83],[62,86,47,84],[62,87,47,85],[62,90,47,88],[62,94,47,92],[62,95,47,93],[62,97,47,95],[63,8,48,6],[64,6,49,4],[65,6,50,4],[65,10,50,8,"lastFocusedKey"],[65,24,50,22],[65,29,50,27,"undefined"],[65,38,50,36],[65,40,50,38],[66,8,51,6],[67,8,52,6],[68,6,53,4],[69,6,54,4,"emitter"],[69,13,54,11],[69,14,54,12,"emit"],[69,18,54,16],[69,19,54,17],[70,8,55,6,"type"],[70,12,55,10],[70,14,55,12],[70,20,55,18],[71,8,56,6,"target"],[71,14,56,12],[71,16,56,14,"lastFocusedKey"],[72,6,57,4],[72,7,57,5],[72,8,57,6],[73,6,58,4,"emitter"],[73,13,58,11],[73,14,58,12,"emit"],[73,18,58,16],[73,19,58,17],[74,8,59,6,"type"],[74,12,59,10],[74,14,59,12],[74,21,59,19],[75,8,60,6,"target"],[75,14,60,12],[75,16,60,14,"currentFocusedKey"],[76,6,61,4],[76,7,61,5],[76,8,61,6],[77,4,62,2],[77,5,62,3],[77,7,62,5],[77,8,62,6,"currentFocusedKey"],[77,25,62,23],[77,27,62,25,"emitter"],[77,34,62,32],[77,36,62,34,"navigation"],[77,46,62,44],[77,47,62,45],[77,48,62,46],[78,2,63,0],[79,0,63,1],[79,3]],"functionMap":{"names":["<global>","useFocusEvents","React.useEffect$argument_0","navigation.addListener$argument_1"],"mappings":"AAA;OCO;kBCU,uCC;GDM,CD;kBCC,sCC;GDM,CD;kBCC;GD8B;CDC"},"hasCjsExports":false},"type":"js/module"}]}