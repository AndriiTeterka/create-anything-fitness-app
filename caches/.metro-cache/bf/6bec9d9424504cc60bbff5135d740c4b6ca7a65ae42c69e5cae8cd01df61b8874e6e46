{"dependencies":[{"name":"@react-native/assets-registry/registry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":70,"index":70}}],"key":"DfKH1NNXqDIAaDOtB+YKkBB07j8=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":71},"end":{"line":2,"column":45,"index":116}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./AssetSources","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":117},"end":{"line":3,"column":51,"index":168}}],"key":"l/K+woVDzZEFW9I0o/oti/wbPC0=","exportNames":["*"],"imports":1}},{"name":"./AssetUris","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":169},"end":{"line":4,"column":41,"index":210}}],"key":"s5UQlFlCKXftpyl/zrvZYZ0/A8E=","exportNames":["*"],"imports":1}},{"name":"./ExpoAsset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":211},"end":{"line":5,"column":44,"index":255}}],"key":"7Yq/oFRqIIHfP2eEbsa8zh67uqs=","exportNames":["*"],"imports":1}},{"name":"./ImageAssets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":256},"end":{"line":6,"column":45,"index":301}}],"key":"K6ycS3StWw83AdXfIkyWZ10KcBM=","exportNames":["*"],"imports":1}},{"name":"./LocalAssets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":302},"end":{"line":7,"column":49,"index":351}}],"key":"eSVaClTx2nBK92Q49Kw2O9gJ924=","exportNames":["*"],"imports":1}},{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":352},"end":{"line":8,"column":59,"index":411}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw=","exportNames":["*"],"imports":1}},{"name":"./resolveAssetSource","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":412},"end":{"line":9,"column":54,"index":466}}],"key":"qiXdfzfF08Pne6HL41q9H4FDwsA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"ANDROID_EMBEDDED_URL_BASE_RESOURCE\", {\n    enumerable: true,\n    get: function () {\n      return ANDROID_EMBEDDED_URL_BASE_RESOURCE;\n    }\n  });\n  Object.defineProperty(exports, \"Asset\", {\n    enumerable: true,\n    get: function () {\n      return Asset;\n    }\n  });\n  var _reactNativeAssetsRegistryRegistry = require(_dependencyMap[0], \"@react-native/assets-registry/registry\");\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _AssetSources = require(_dependencyMap[2], \"./AssetSources\");\n  var _AssetUris = require(_dependencyMap[3], \"./AssetUris\");\n  var AssetUris = _interopNamespace(_AssetUris);\n  var _ExpoAsset = require(_dependencyMap[4], \"./ExpoAsset\");\n  var _ImageAssets = require(_dependencyMap[5], \"./ImageAssets\");\n  var ImageAssets = _interopNamespace(_ImageAssets);\n  var _LocalAssets = require(_dependencyMap[6], \"./LocalAssets\");\n  var _PlatformUtils = require(_dependencyMap[7], \"./PlatformUtils\");\n  var _resolveAssetSource = require(_dependencyMap[8], \"./resolveAssetSource\");\n  var resolveAssetSource = _interopDefault(_resolveAssetSource);\n  /**\n   * Android resource URL prefix.\n   * @hidden\n   */\n  const ANDROID_EMBEDDED_URL_BASE_RESOURCE = 'file:///android_res/';\n  /**\n   * The `Asset` class represents an asset in your app. It gives metadata about the asset (such as its\n   * name and type) and provides facilities to load the asset data.\n   */\n  class Asset {\n    static byHash = {};\n    static byUri = {};\n    /**\n     * The name of the asset file without the extension. Also without the part from `@` onward in the\n     * filename (used to specify scale factor for images).\n     */\n\n    /**\n     * The extension of the asset filename.\n     */\n\n    /**\n     * The MD5 hash of the asset's data.\n     */\n    hash = null;\n    /**\n     * A URI that points to the asset's data on the remote server. When running the published version\n     * of your app, this refers to the location on Expo's asset server where Expo has stored your\n     * asset. When running the app from Expo CLI during development, this URI points to Expo CLI's\n     * server running on your computer and the asset is served directly from your computer. If you\n     * are not using Classic Updates (legacy), this field should be ignored as we ensure your assets\n     * are on device before running your application logic.\n     */\n\n    /**\n     * If the asset has been downloaded (by calling [`downloadAsync()`](#downloadasync)), the\n     * `file://` URI pointing to the local file on the device that contains the asset data.\n     */\n    localUri = null;\n    /**\n     * If the asset is an image, the width of the image data divided by the scale factor. The scale\n     * factor is the number after `@` in the filename, or `1` if not present.\n     */\n    width = null;\n    /**\n     * If the asset is an image, the height of the image data divided by the scale factor. The scale factor is the number after `@` in the filename, or `1` if not present.\n     */\n    height = null;\n    downloading = false;\n    /**\n     * Whether the asset has finished downloading from a call to [`downloadAsync()`](#downloadasync).\n     */\n    downloaded = false;\n    _downloadCallbacks = [];\n    constructor({\n      name,\n      type,\n      hash = null,\n      uri,\n      width,\n      height\n    }) {\n      this.name = name;\n      this.type = type;\n      this.hash = hash;\n      this.uri = uri;\n      if (typeof width === 'number') {\n        this.width = width;\n      }\n      if (typeof height === 'number') {\n        this.height = height;\n      }\n      if (hash) {\n        this.localUri = (0, _LocalAssets.getLocalAssetUri)(hash, type);\n        if (this.localUri?.startsWith(ANDROID_EMBEDDED_URL_BASE_RESOURCE)) {\n          // Treat Android embedded resources as not downloaded state, because the uri is not direct accessible.\n          this.uri = this.localUri;\n          this.localUri = null;\n        } else if (this.localUri) {\n          this.downloaded = true;\n        }\n      }\n      if (_expoModulesCore.Platform.OS === 'web') {\n        if (!name) {\n          this.name = AssetUris.getFilename(uri);\n        }\n        if (!type) {\n          this.type = AssetUris.getFileExtension(uri);\n        }\n      }\n    }\n    // @needsAudit\n    /**\n     * A helper that wraps `Asset.fromModule(module).downloadAsync` for convenience.\n     * @param moduleId An array of `require('path/to/file')` or external network URLs. Can also be\n     * just one module or URL without an Array.\n     * @return Returns a Promise that fulfills with an array of `Asset`s when the asset(s) has been\n     * saved to disk.\n     * @example\n     * ```ts\n     * const [{ localUri }] = await Asset.loadAsync(require('./assets/snack-icon.png'));\n     * ```\n     */\n    static loadAsync(moduleId) {\n      const moduleIds = Array.isArray(moduleId) ? moduleId : [moduleId];\n      return Promise.all(moduleIds.map(moduleId => Asset.fromModule(moduleId).downloadAsync()));\n    }\n    // @needsAudit\n    /**\n     * Returns the [`Asset`](#asset) instance representing an asset given its module or URL.\n     * @param virtualAssetModule The value of `require('path/to/file')` for the asset or external\n     * network URL\n     * @return The [`Asset`](#asset) instance for the asset.\n     */\n    static fromModule(virtualAssetModule) {\n      if (typeof virtualAssetModule === 'string') {\n        return Asset.fromURI(virtualAssetModule);\n      }\n      if (typeof virtualAssetModule === 'object' && 'uri' in virtualAssetModule && typeof virtualAssetModule.uri === 'string') {\n        const extension = AssetUris.getFileExtension(virtualAssetModule.uri);\n        return new Asset({\n          name: '',\n          type: extension.startsWith('.') ? extension.substring(1) : extension,\n          hash: null,\n          uri: virtualAssetModule.uri,\n          width: virtualAssetModule.width,\n          height: virtualAssetModule.height\n        });\n      }\n      const meta = (0, _reactNativeAssetsRegistryRegistry.getAssetByID)(virtualAssetModule);\n      if (!meta) {\n        throw new Error(`Module \"${virtualAssetModule}\" is missing from the asset registry`);\n      }\n      // Outside of the managed env we need the moduleId to initialize the asset\n      // because resolveAssetSource depends on it\n      if (!_PlatformUtils.IS_ENV_WITH_LOCAL_ASSETS) {\n        // null-check is performed above with `getAssetByID`.\n        const {\n          uri\n        } = (0, resolveAssetSource.default)(virtualAssetModule);\n        const asset = new Asset({\n          name: meta.name,\n          type: meta.type,\n          hash: meta.hash,\n          uri,\n          width: meta.width,\n          height: meta.height\n        });\n        // For images backward compatibility,\n        // keeps localUri the same as uri for React Native's Image that\n        // works fine with drawable resource names.\n        if (_expoModulesCore.Platform.OS === 'android' && !uri.includes(':') && (meta.width || meta.height)) {\n          asset.localUri = asset.uri;\n          asset.downloaded = true;\n        }\n        Asset.byHash[meta.hash] = asset;\n        return asset;\n      }\n      return Asset.fromMetadata(meta);\n    }\n    // @docsMissing\n    static fromMetadata(meta) {\n      // The hash of the whole asset, not to be confused with the hash of a specific file returned\n      // from `selectAssetSource`\n      const metaHash = meta.hash;\n      const assetByHash = Asset.byHash[metaHash];\n      if (assetByHash) {\n        return assetByHash;\n      }\n      const {\n        uri,\n        hash\n      } = (0, _AssetSources.selectAssetSource)(meta);\n      const asset = new Asset({\n        name: meta.name,\n        type: meta.type,\n        hash,\n        uri,\n        width: meta.width,\n        height: meta.height\n      });\n      Asset.byHash[metaHash] = asset;\n      return asset;\n    }\n    // @docsMissing\n    static fromURI(uri) {\n      if (Asset.byUri[uri]) {\n        return Asset.byUri[uri];\n      }\n      // Possibly a Base64-encoded URI\n      let type = '';\n      if (uri.indexOf(';base64') > -1) {\n        type = uri.split(';')[0].split('/')[1];\n      } else {\n        const extension = AssetUris.getFileExtension(uri);\n        type = extension.startsWith('.') ? extension.substring(1) : extension;\n      }\n      const asset = new Asset({\n        name: '',\n        type,\n        hash: null,\n        uri\n      });\n      Asset.byUri[uri] = asset;\n      return asset;\n    }\n    // @needsAudit\n    /**\n     * Downloads the asset data to a local file in the device's cache directory. Once the returned\n     * promise is fulfilled without error, the [`localUri`](#localuri) field of this asset points\n     * to a local file containing the asset data. The asset is only downloaded if an up-to-date local\n     * file for the asset isn't already present due to an earlier download. The downloaded `Asset`\n     * will be returned when the promise is resolved.\n     *\n     * > **Note:** There is no guarantee that files downloaded via `downloadAsync` persist between app sessions.\n     * `downloadAsync` stores files in the caches directory, so it's up to the OS to clear this folder at its\n     * own discretion or when the user manually purges the caches directory. Downloaded assets are stored as\n     * `ExponentAsset-{cacheFileId}.{extension}` within the cache directory.\n     * > To manually clear cached assets, you can use [`expo-file-system`](./filesystem/) to\n     * delete the cache directory: `Paths.cache.delete()` or use the legacy API `deleteAsync(cacheDirectory)`.\n     *\n     * @return Returns a Promise which fulfills with an `Asset` instance.\n     */\n    async downloadAsync() {\n      if (this.downloaded) {\n        return this;\n      }\n      if (this.downloading) {\n        await new Promise((resolve, reject) => {\n          this._downloadCallbacks.push({\n            resolve,\n            reject\n          });\n        });\n        return this;\n      }\n      this.downloading = true;\n      try {\n        if (_expoModulesCore.Platform.OS === 'web') {\n          if (ImageAssets.isImageType(this.type)) {\n            const {\n              width,\n              height,\n              name\n            } = await ImageAssets.getImageInfoAsync(this.uri);\n            this.width = width;\n            this.height = height;\n            this.name = name;\n          } else {\n            this.name = AssetUris.getFilename(this.uri);\n          }\n        }\n        this.localUri = await (0, _ExpoAsset.downloadAsync)(this.uri, this.hash, this.type);\n        this.downloaded = true;\n        this._downloadCallbacks.forEach(({\n          resolve\n        }) => resolve());\n      } catch (e) {\n        this._downloadCallbacks.forEach(({\n          reject\n        }) => reject(e));\n        throw e;\n      } finally {\n        this.downloading = false;\n        this._downloadCallbacks = [];\n      }\n      return this;\n    }\n  }\n});","lineCount":314,"map":[[21,2,14,0,"Object"],[21,8,14,0],[21,9,14,0,"defineProperty"],[21,23,14,0],[21,24,14,0,"exports"],[21,31,14,0],[22,4,14,0,"enumerable"],[22,14,14,0],[23,4,14,0,"get"],[23,7,14,0],[23,18,14,0,"get"],[23,19,14,0],[24,6,14,0],[24,13,14,0,"ANDROID_EMBEDDED_URL_BASE_RESOURCE"],[24,47,14,0],[25,4,14,0],[26,2,14,0],[27,2,19,0,"Object"],[27,8,19,0],[27,9,19,0,"defineProperty"],[27,23,19,0],[27,24,19,0,"exports"],[27,31,19,0],[28,4,19,0,"enumerable"],[28,14,19,0],[29,4,19,0,"get"],[29,7,19,0],[29,18,19,0,"get"],[29,19,19,0],[30,6,19,0],[30,13,19,0,"Asset"],[30,18,19,0],[31,4,19,0],[32,2,19,0],[33,2,1,0],[33,6,1,0,"_reactNativeAssetsRegistryRegistry"],[33,40,1,0],[33,43,1,0,"require"],[33,50,1,0],[33,51,1,0,"_dependencyMap"],[33,65,1,0],[34,2,2,0],[34,6,2,0,"_expoModulesCore"],[34,22,2,0],[34,25,2,0,"require"],[34,32,2,0],[34,33,2,0,"_dependencyMap"],[34,47,2,0],[35,2,3,0],[35,6,3,0,"_AssetSources"],[35,19,3,0],[35,22,3,0,"require"],[35,29,3,0],[35,30,3,0,"_dependencyMap"],[35,44,3,0],[36,2,4,0],[36,6,4,0,"_AssetUris"],[36,16,4,0],[36,19,4,0,"require"],[36,26,4,0],[36,27,4,0,"_dependencyMap"],[36,41,4,0],[37,2,4,0],[37,6,4,0,"AssetUris"],[37,15,4,0],[37,18,4,0,"_interopNamespace"],[37,35,4,0],[37,36,4,0,"_AssetUris"],[37,46,4,0],[38,2,5,0],[38,6,5,0,"_ExpoAsset"],[38,16,5,0],[38,19,5,0,"require"],[38,26,5,0],[38,27,5,0,"_dependencyMap"],[38,41,5,0],[39,2,6,0],[39,6,6,0,"_ImageAssets"],[39,18,6,0],[39,21,6,0,"require"],[39,28,6,0],[39,29,6,0,"_dependencyMap"],[39,43,6,0],[40,2,6,0],[40,6,6,0,"ImageAssets"],[40,17,6,0],[40,20,6,0,"_interopNamespace"],[40,37,6,0],[40,38,6,0,"_ImageAssets"],[40,50,6,0],[41,2,7,0],[41,6,7,0,"_LocalAssets"],[41,18,7,0],[41,21,7,0,"require"],[41,28,7,0],[41,29,7,0,"_dependencyMap"],[41,43,7,0],[42,2,8,0],[42,6,8,0,"_PlatformUtils"],[42,20,8,0],[42,23,8,0,"require"],[42,30,8,0],[42,31,8,0,"_dependencyMap"],[42,45,8,0],[43,2,9,0],[43,6,9,0,"_resolveAssetSource"],[43,25,9,0],[43,28,9,0,"require"],[43,35,9,0],[43,36,9,0,"_dependencyMap"],[43,50,9,0],[44,2,9,0],[44,6,9,0,"resolveAssetSource"],[44,24,9,0],[44,27,9,0,"_interopDefault"],[44,42,9,0],[44,43,9,0,"_resolveAssetSource"],[44,62,9,0],[45,2,10,0],[46,0,11,0],[47,0,12,0],[48,0,13,0],[49,2,14,7],[49,8,14,13,"ANDROID_EMBEDDED_URL_BASE_RESOURCE"],[49,42,14,47],[49,45,14,50],[49,67,14,72],[50,2,15,0],[51,0,16,0],[52,0,17,0],[53,0,18,0],[54,2,19,7],[54,8,19,13,"Asset"],[54,13,19,18],[54,14,19,19],[55,4,20,4],[55,11,20,11,"byHash"],[55,17,20,17],[55,20,20,20],[55,21,20,21],[55,22,20,22],[56,4,21,4],[56,11,21,11,"byUri"],[56,16,21,16],[56,19,21,19],[56,20,21,20],[56,21,21,21],[57,4,22,4],[58,0,23,0],[59,0,24,0],[60,0,25,0],[62,4,27,4],[63,0,28,0],[64,0,29,0],[66,4,31,4],[67,0,32,0],[68,0,33,0],[69,4,34,4,"hash"],[69,8,34,8],[69,11,34,11],[69,15,34,15],[70,4,35,4],[71,0,36,0],[72,0,37,0],[73,0,38,0],[74,0,39,0],[75,0,40,0],[76,0,41,0],[77,0,42,0],[79,4,44,4],[80,0,45,0],[81,0,46,0],[82,0,47,0],[83,4,48,4,"localUri"],[83,12,48,12],[83,15,48,15],[83,19,48,19],[84,4,49,4],[85,0,50,0],[86,0,51,0],[87,0,52,0],[88,4,53,4,"width"],[88,9,53,9],[88,12,53,12],[88,16,53,16],[89,4,54,4],[90,0,55,0],[91,0,56,0],[92,4,57,4,"height"],[92,10,57,10],[92,13,57,13],[92,17,57,17],[93,4,58,4,"downloading"],[93,15,58,15],[93,18,58,18],[93,23,58,23],[94,4,59,4],[95,0,60,0],[96,0,61,0],[97,4,62,4,"downloaded"],[97,14,62,14],[97,17,62,17],[97,22,62,22],[98,4,63,4,"_downloadCallbacks"],[98,22,63,22],[98,25,63,25],[98,27,63,27],[99,4,64,4,"constructor"],[99,15,64,15,"constructor"],[99,16,64,16],[100,6,64,18,"name"],[100,10,64,22],[101,6,64,24,"type"],[101,10,64,28],[102,6,64,30,"hash"],[102,10,64,34],[102,13,64,37],[102,17,64,41],[103,6,64,43,"uri"],[103,9,64,46],[104,6,64,48,"width"],[104,11,64,53],[105,6,64,55,"height"],[106,4,64,62],[106,5,64,63],[106,7,64,65],[107,6,65,8],[107,10,65,12],[107,11,65,13,"name"],[107,15,65,17],[107,18,65,20,"name"],[107,22,65,24],[108,6,66,8],[108,10,66,12],[108,11,66,13,"type"],[108,15,66,17],[108,18,66,20,"type"],[108,22,66,24],[109,6,67,8],[109,10,67,12],[109,11,67,13,"hash"],[109,15,67,17],[109,18,67,20,"hash"],[109,22,67,24],[110,6,68,8],[110,10,68,12],[110,11,68,13,"uri"],[110,14,68,16],[110,17,68,19,"uri"],[110,20,68,22],[111,6,69,8],[111,10,69,12],[111,17,69,19,"width"],[111,22,69,24],[111,27,69,29],[111,35,69,37],[111,37,69,39],[112,8,70,12],[112,12,70,16],[112,13,70,17,"width"],[112,18,70,22],[112,21,70,25,"width"],[112,26,70,30],[113,6,71,8],[114,6,72,8],[114,10,72,12],[114,17,72,19,"height"],[114,23,72,25],[114,28,72,30],[114,36,72,38],[114,38,72,40],[115,8,73,12],[115,12,73,16],[115,13,73,17,"height"],[115,19,73,23],[115,22,73,26,"height"],[115,28,73,32],[116,6,74,8],[117,6,75,8],[117,10,75,12,"hash"],[117,14,75,16],[117,16,75,18],[118,8,76,12],[118,12,76,16],[118,13,76,17,"localUri"],[118,21,76,25],[118,24,76,28],[118,28,76,28,"getLocalAssetUri"],[118,40,76,44],[118,41,76,44,"getLocalAssetUri"],[118,57,76,44],[118,59,76,45,"hash"],[118,63,76,49],[118,65,76,51,"type"],[118,69,76,55],[118,70,76,56],[119,8,77,12],[119,12,77,16],[119,16,77,20],[119,17,77,21,"localUri"],[119,25,77,29],[119,27,77,31,"startsWith"],[119,37,77,41],[119,38,77,42,"ANDROID_EMBEDDED_URL_BASE_RESOURCE"],[119,72,77,76],[119,73,77,77],[119,75,77,79],[120,10,78,16],[121,10,79,16],[121,14,79,20],[121,15,79,21,"uri"],[121,18,79,24],[121,21,79,27],[121,25,79,31],[121,26,79,32,"localUri"],[121,34,79,40],[122,10,80,16],[122,14,80,20],[122,15,80,21,"localUri"],[122,23,80,29],[122,26,80,32],[122,30,80,36],[123,8,81,12],[123,9,81,13],[123,15,82,17],[123,19,82,21],[123,23,82,25],[123,24,82,26,"localUri"],[123,32,82,34],[123,34,82,36],[124,10,83,16],[124,14,83,20],[124,15,83,21,"downloaded"],[124,25,83,31],[124,28,83,34],[124,32,83,38],[125,8,84,12],[126,6,85,8],[127,6,86,8],[127,10,86,12,"Platform"],[127,26,86,20],[127,27,86,20,"Platform"],[127,35,86,20],[127,36,86,21,"OS"],[127,38,86,23],[127,43,86,28],[127,48,86,33],[127,50,86,35],[128,8,87,12],[128,12,87,16],[128,13,87,17,"name"],[128,17,87,21],[128,19,87,23],[129,10,88,16],[129,14,88,20],[129,15,88,21,"name"],[129,19,88,25],[129,22,88,28,"AssetUris"],[129,31,88,37],[129,32,88,38,"getFilename"],[129,43,88,49],[129,44,88,50,"uri"],[129,47,88,53],[129,48,88,54],[130,8,89,12],[131,8,90,12],[131,12,90,16],[131,13,90,17,"type"],[131,17,90,21],[131,19,90,23],[132,10,91,16],[132,14,91,20],[132,15,91,21,"type"],[132,19,91,25],[132,22,91,28,"AssetUris"],[132,31,91,37],[132,32,91,38,"getFileExtension"],[132,48,91,54],[132,49,91,55,"uri"],[132,52,91,58],[132,53,91,59],[133,8,92,12],[134,6,93,8],[135,4,94,4],[136,4,95,4],[137,4,96,4],[138,0,97,0],[139,0,98,0],[140,0,99,0],[141,0,100,0],[142,0,101,0],[143,0,102,0],[144,0,103,0],[145,0,104,0],[146,0,105,0],[147,0,106,0],[148,4,107,4],[148,11,107,11,"loadAsync"],[148,20,107,20,"loadAsync"],[148,21,107,21,"moduleId"],[148,29,107,29],[148,31,107,31],[149,6,108,8],[149,12,108,14,"moduleIds"],[149,21,108,23],[149,24,108,26,"Array"],[149,29,108,31],[149,30,108,32,"isArray"],[149,37,108,39],[149,38,108,40,"moduleId"],[149,46,108,48],[149,47,108,49],[149,50,108,52,"moduleId"],[149,58,108,60],[149,61,108,63],[149,62,108,64,"moduleId"],[149,70,108,72],[149,71,108,73],[150,6,109,8],[150,13,109,15,"Promise"],[150,20,109,22],[150,21,109,23,"all"],[150,24,109,26],[150,25,109,27,"moduleIds"],[150,34,109,36],[150,35,109,37,"map"],[150,38,109,40],[150,39,109,42,"moduleId"],[150,47,109,50],[150,51,109,55,"Asset"],[150,56,109,60],[150,57,109,61,"fromModule"],[150,67,109,71],[150,68,109,72,"moduleId"],[150,76,109,80],[150,77,109,81],[150,78,109,82,"downloadAsync"],[150,91,109,95],[150,92,109,96],[150,93,109,97],[150,94,109,98],[150,95,109,99],[151,4,110,4],[152,4,111,4],[153,4,112,4],[154,0,113,0],[155,0,114,0],[156,0,115,0],[157,0,116,0],[158,0,117,0],[159,4,118,4],[159,11,118,11,"fromModule"],[159,21,118,21,"fromModule"],[159,22,118,22,"virtualAssetModule"],[159,40,118,40],[159,42,118,42],[160,6,119,8],[160,10,119,12],[160,17,119,19,"virtualAssetModule"],[160,35,119,37],[160,40,119,42],[160,48,119,50],[160,50,119,52],[161,8,120,12],[161,15,120,19,"Asset"],[161,20,120,24],[161,21,120,25,"fromURI"],[161,28,120,32],[161,29,120,33,"virtualAssetModule"],[161,47,120,51],[161,48,120,52],[162,6,121,8],[163,6,122,8],[163,10,122,12],[163,17,122,19,"virtualAssetModule"],[163,35,122,37],[163,40,122,42],[163,48,122,50],[163,52,123,12],[163,57,123,17],[163,61,123,21,"virtualAssetModule"],[163,79,123,39],[163,83,124,12],[163,90,124,19,"virtualAssetModule"],[163,108,124,37],[163,109,124,38,"uri"],[163,112,124,41],[163,117,124,46],[163,125,124,54],[163,127,124,56],[164,8,125,12],[164,14,125,18,"extension"],[164,23,125,27],[164,26,125,30,"AssetUris"],[164,35,125,39],[164,36,125,40,"getFileExtension"],[164,52,125,56],[164,53,125,57,"virtualAssetModule"],[164,71,125,75],[164,72,125,76,"uri"],[164,75,125,79],[164,76,125,80],[165,8,126,12],[165,15,126,19],[165,19,126,23,"Asset"],[165,24,126,28],[165,25,126,29],[166,10,127,16,"name"],[166,14,127,20],[166,16,127,22],[166,18,127,24],[167,10,128,16,"type"],[167,14,128,20],[167,16,128,22,"extension"],[167,25,128,31],[167,26,128,32,"startsWith"],[167,36,128,42],[167,37,128,43],[167,40,128,46],[167,41,128,47],[167,44,128,50,"extension"],[167,53,128,59],[167,54,128,60,"substring"],[167,63,128,69],[167,64,128,70],[167,65,128,71],[167,66,128,72],[167,69,128,75,"extension"],[167,78,128,84],[168,10,129,16,"hash"],[168,14,129,20],[168,16,129,22],[168,20,129,26],[169,10,130,16,"uri"],[169,13,130,19],[169,15,130,21,"virtualAssetModule"],[169,33,130,39],[169,34,130,40,"uri"],[169,37,130,43],[170,10,131,16,"width"],[170,15,131,21],[170,17,131,23,"virtualAssetModule"],[170,35,131,41],[170,36,131,42,"width"],[170,41,131,47],[171,10,132,16,"height"],[171,16,132,22],[171,18,132,24,"virtualAssetModule"],[171,36,132,42],[171,37,132,43,"height"],[172,8,133,12],[172,9,133,13],[172,10,133,14],[173,6,134,8],[174,6,135,8],[174,12,135,14,"meta"],[174,16,135,18],[174,19,135,21],[174,23,135,21,"getAssetByID"],[174,57,135,33],[174,58,135,33,"getAssetByID"],[174,70,135,33],[174,72,135,34,"virtualAssetModule"],[174,90,135,52],[174,91,135,53],[175,6,136,8],[175,10,136,12],[175,11,136,13,"meta"],[175,15,136,17],[175,17,136,19],[176,8,137,12],[176,14,137,18],[176,18,137,22,"Error"],[176,23,137,27],[176,24,137,28],[176,35,137,39,"virtualAssetModule"],[176,53,137,57],[176,91,137,95],[176,92,137,96],[177,6,138,8],[178,6,139,8],[179,6,140,8],[180,6,141,8],[180,10,141,12],[180,11,141,13,"IS_ENV_WITH_LOCAL_ASSETS"],[180,25,141,37],[180,26,141,37,"IS_ENV_WITH_LOCAL_ASSETS"],[180,50,141,37],[180,52,141,39],[181,8,142,12],[182,8,143,12],[182,14,143,18],[183,10,143,20,"uri"],[184,8,143,24],[184,9,143,25],[184,12,143,28],[184,16,143,28,"resolveAssetSource"],[184,34,143,46],[184,35,143,46,"default"],[184,42,143,46],[184,44,143,47,"virtualAssetModule"],[184,62,143,65],[184,63,143,66],[185,8,144,12],[185,14,144,18,"asset"],[185,19,144,23],[185,22,144,26],[185,26,144,30,"Asset"],[185,31,144,35],[185,32,144,36],[186,10,145,16,"name"],[186,14,145,20],[186,16,145,22,"meta"],[186,20,145,26],[186,21,145,27,"name"],[186,25,145,31],[187,10,146,16,"type"],[187,14,146,20],[187,16,146,22,"meta"],[187,20,146,26],[187,21,146,27,"type"],[187,25,146,31],[188,10,147,16,"hash"],[188,14,147,20],[188,16,147,22,"meta"],[188,20,147,26],[188,21,147,27,"hash"],[188,25,147,31],[189,10,148,16,"uri"],[189,13,148,19],[190,10,149,16,"width"],[190,15,149,21],[190,17,149,23,"meta"],[190,21,149,27],[190,22,149,28,"width"],[190,27,149,33],[191,10,150,16,"height"],[191,16,150,22],[191,18,150,24,"meta"],[191,22,150,28],[191,23,150,29,"height"],[192,8,151,12],[192,9,151,13],[192,10,151,14],[193,8,152,12],[194,8,153,12],[195,8,154,12],[196,8,155,12],[196,12,155,16,"Platform"],[196,28,155,24],[196,29,155,24,"Platform"],[196,37,155,24],[196,38,155,25,"OS"],[196,40,155,27],[196,45,155,32],[196,54,155,41],[196,58,155,45],[196,59,155,46,"uri"],[196,62,155,49],[196,63,155,50,"includes"],[196,71,155,58],[196,72,155,59],[196,75,155,62],[196,76,155,63],[196,81,155,68,"meta"],[196,85,155,72],[196,86,155,73,"width"],[196,91,155,78],[196,95,155,82,"meta"],[196,99,155,86],[196,100,155,87,"height"],[196,106,155,93],[196,107,155,94],[196,109,155,96],[197,10,156,16,"asset"],[197,15,156,21],[197,16,156,22,"localUri"],[197,24,156,30],[197,27,156,33,"asset"],[197,32,156,38],[197,33,156,39,"uri"],[197,36,156,42],[198,10,157,16,"asset"],[198,15,157,21],[198,16,157,22,"downloaded"],[198,26,157,32],[198,29,157,35],[198,33,157,39],[199,8,158,12],[200,8,159,12,"Asset"],[200,13,159,17],[200,14,159,18,"byHash"],[200,20,159,24],[200,21,159,25,"meta"],[200,25,159,29],[200,26,159,30,"hash"],[200,30,159,34],[200,31,159,35],[200,34,159,38,"asset"],[200,39,159,43],[201,8,160,12],[201,15,160,19,"asset"],[201,20,160,24],[202,6,161,8],[203,6,162,8],[203,13,162,15,"Asset"],[203,18,162,20],[203,19,162,21,"fromMetadata"],[203,31,162,33],[203,32,162,34,"meta"],[203,36,162,38],[203,37,162,39],[204,4,163,4],[205,4,164,4],[206,4,165,4],[206,11,165,11,"fromMetadata"],[206,23,165,23,"fromMetadata"],[206,24,165,24,"meta"],[206,28,165,28],[206,30,165,30],[207,6,166,8],[208,6,167,8],[209,6,168,8],[209,12,168,14,"metaHash"],[209,20,168,22],[209,23,168,25,"meta"],[209,27,168,29],[209,28,168,30,"hash"],[209,32,168,34],[210,6,169,8],[210,12,169,14,"assetByHash"],[210,23,169,25],[210,26,169,28,"Asset"],[210,31,169,33],[210,32,169,34,"byHash"],[210,38,169,40],[210,39,169,41,"metaHash"],[210,47,169,49],[210,48,169,50],[211,6,170,8],[211,10,170,12,"assetByHash"],[211,21,170,23],[211,23,170,25],[212,8,171,12],[212,15,171,19,"assetByHash"],[212,26,171,30],[213,6,172,8],[214,6,173,8],[214,12,173,14],[215,8,173,16,"uri"],[215,11,173,19],[216,8,173,21,"hash"],[217,6,173,26],[217,7,173,27],[217,10,173,30],[217,14,173,30,"selectAssetSource"],[217,27,173,47],[217,28,173,47,"selectAssetSource"],[217,45,173,47],[217,47,173,48,"meta"],[217,51,173,52],[217,52,173,53],[218,6,174,8],[218,12,174,14,"asset"],[218,17,174,19],[218,20,174,22],[218,24,174,26,"Asset"],[218,29,174,31],[218,30,174,32],[219,8,175,12,"name"],[219,12,175,16],[219,14,175,18,"meta"],[219,18,175,22],[219,19,175,23,"name"],[219,23,175,27],[220,8,176,12,"type"],[220,12,176,16],[220,14,176,18,"meta"],[220,18,176,22],[220,19,176,23,"type"],[220,23,176,27],[221,8,177,12,"hash"],[221,12,177,16],[222,8,178,12,"uri"],[222,11,178,15],[223,8,179,12,"width"],[223,13,179,17],[223,15,179,19,"meta"],[223,19,179,23],[223,20,179,24,"width"],[223,25,179,29],[224,8,180,12,"height"],[224,14,180,18],[224,16,180,20,"meta"],[224,20,180,24],[224,21,180,25,"height"],[225,6,181,8],[225,7,181,9],[225,8,181,10],[226,6,182,8,"Asset"],[226,11,182,13],[226,12,182,14,"byHash"],[226,18,182,20],[226,19,182,21,"metaHash"],[226,27,182,29],[226,28,182,30],[226,31,182,33,"asset"],[226,36,182,38],[227,6,183,8],[227,13,183,15,"asset"],[227,18,183,20],[228,4,184,4],[229,4,185,4],[230,4,186,4],[230,11,186,11,"fromURI"],[230,18,186,18,"fromURI"],[230,19,186,19,"uri"],[230,22,186,22],[230,24,186,24],[231,6,187,8],[231,10,187,12,"Asset"],[231,15,187,17],[231,16,187,18,"byUri"],[231,21,187,23],[231,22,187,24,"uri"],[231,25,187,27],[231,26,187,28],[231,28,187,30],[232,8,188,12],[232,15,188,19,"Asset"],[232,20,188,24],[232,21,188,25,"byUri"],[232,26,188,30],[232,27,188,31,"uri"],[232,30,188,34],[232,31,188,35],[233,6,189,8],[234,6,190,8],[235,6,191,8],[235,10,191,12,"type"],[235,14,191,16],[235,17,191,19],[235,19,191,21],[236,6,192,8],[236,10,192,12,"uri"],[236,13,192,15],[236,14,192,16,"indexOf"],[236,21,192,23],[236,22,192,24],[236,31,192,33],[236,32,192,34],[236,35,192,37],[236,36,192,38],[236,37,192,39],[236,39,192,41],[237,8,193,12,"type"],[237,12,193,16],[237,15,193,19,"uri"],[237,18,193,22],[237,19,193,23,"split"],[237,24,193,28],[237,25,193,29],[237,28,193,32],[237,29,193,33],[237,30,193,34],[237,31,193,35],[237,32,193,36],[237,33,193,37,"split"],[237,38,193,42],[237,39,193,43],[237,42,193,46],[237,43,193,47],[237,44,193,48],[237,45,193,49],[237,46,193,50],[238,6,194,8],[238,7,194,9],[238,13,195,13],[239,8,196,12],[239,14,196,18,"extension"],[239,23,196,27],[239,26,196,30,"AssetUris"],[239,35,196,39],[239,36,196,40,"getFileExtension"],[239,52,196,56],[239,53,196,57,"uri"],[239,56,196,60],[239,57,196,61],[240,8,197,12,"type"],[240,12,197,16],[240,15,197,19,"extension"],[240,24,197,28],[240,25,197,29,"startsWith"],[240,35,197,39],[240,36,197,40],[240,39,197,43],[240,40,197,44],[240,43,197,47,"extension"],[240,52,197,56],[240,53,197,57,"substring"],[240,62,197,66],[240,63,197,67],[240,64,197,68],[240,65,197,69],[240,68,197,72,"extension"],[240,77,197,81],[241,6,198,8],[242,6,199,8],[242,12,199,14,"asset"],[242,17,199,19],[242,20,199,22],[242,24,199,26,"Asset"],[242,29,199,31],[242,30,199,32],[243,8,200,12,"name"],[243,12,200,16],[243,14,200,18],[243,16,200,20],[244,8,201,12,"type"],[244,12,201,16],[245,8,202,12,"hash"],[245,12,202,16],[245,14,202,18],[245,18,202,22],[246,8,203,12,"uri"],[247,6,204,8],[247,7,204,9],[247,8,204,10],[248,6,205,8,"Asset"],[248,11,205,13],[248,12,205,14,"byUri"],[248,17,205,19],[248,18,205,20,"uri"],[248,21,205,23],[248,22,205,24],[248,25,205,27,"asset"],[248,30,205,32],[249,6,206,8],[249,13,206,15,"asset"],[249,18,206,20],[250,4,207,4],[251,4,208,4],[252,4,209,4],[253,0,210,0],[254,0,211,0],[255,0,212,0],[256,0,213,0],[257,0,214,0],[258,0,215,0],[259,0,216,0],[260,0,217,0],[261,0,218,0],[262,0,219,0],[263,0,220,0],[264,0,221,0],[265,0,222,0],[266,0,223,0],[267,0,224,0],[268,4,225,4],[268,10,225,10,"downloadAsync"],[268,23,225,23,"downloadAsync"],[268,24,225,23],[268,26,225,26],[269,6,226,8],[269,10,226,12],[269,14,226,16],[269,15,226,17,"downloaded"],[269,25,226,27],[269,27,226,29],[270,8,227,12],[270,15,227,19],[270,19,227,23],[271,6,228,8],[272,6,229,8],[272,10,229,12],[272,14,229,16],[272,15,229,17,"downloading"],[272,26,229,28],[272,28,229,30],[273,8,230,12],[273,14,230,18],[273,18,230,22,"Promise"],[273,25,230,29],[273,26,230,30],[273,27,230,31,"resolve"],[273,34,230,38],[273,36,230,40,"reject"],[273,42,230,46],[273,47,230,51],[274,10,231,16],[274,14,231,20],[274,15,231,21,"_downloadCallbacks"],[274,33,231,39],[274,34,231,40,"push"],[274,38,231,44],[274,39,231,45],[275,12,231,47,"resolve"],[275,19,231,54],[276,12,231,56,"reject"],[277,10,231,63],[277,11,231,64],[277,12,231,65],[278,8,232,12],[278,9,232,13],[278,10,232,14],[279,8,233,12],[279,15,233,19],[279,19,233,23],[280,6,234,8],[281,6,235,8],[281,10,235,12],[281,11,235,13,"downloading"],[281,22,235,24],[281,25,235,27],[281,29,235,31],[282,6,236,8],[282,10,236,12],[283,8,237,12],[283,12,237,16,"Platform"],[283,28,237,24],[283,29,237,24,"Platform"],[283,37,237,24],[283,38,237,25,"OS"],[283,40,237,27],[283,45,237,32],[283,50,237,37],[283,52,237,39],[284,10,238,16],[284,14,238,20,"ImageAssets"],[284,25,238,31],[284,26,238,32,"isImageType"],[284,37,238,43],[284,38,238,44],[284,42,238,48],[284,43,238,49,"type"],[284,47,238,53],[284,48,238,54],[284,50,238,56],[285,12,239,20],[285,18,239,26],[286,14,239,28,"width"],[286,19,239,33],[287,14,239,35,"height"],[287,20,239,41],[288,14,239,43,"name"],[289,12,239,48],[289,13,239,49],[289,16,239,52],[289,22,239,58,"ImageAssets"],[289,33,239,69],[289,34,239,70,"getImageInfoAsync"],[289,51,239,87],[289,52,239,88],[289,56,239,92],[289,57,239,93,"uri"],[289,60,239,96],[289,61,239,97],[290,12,240,20],[290,16,240,24],[290,17,240,25,"width"],[290,22,240,30],[290,25,240,33,"width"],[290,30,240,38],[291,12,241,20],[291,16,241,24],[291,17,241,25,"height"],[291,23,241,31],[291,26,241,34,"height"],[291,32,241,40],[292,12,242,20],[292,16,242,24],[292,17,242,25,"name"],[292,21,242,29],[292,24,242,32,"name"],[292,28,242,36],[293,10,243,16],[293,11,243,17],[293,17,244,21],[294,12,245,20],[294,16,245,24],[294,17,245,25,"name"],[294,21,245,29],[294,24,245,32,"AssetUris"],[294,33,245,41],[294,34,245,42,"getFilename"],[294,45,245,53],[294,46,245,54],[294,50,245,58],[294,51,245,59,"uri"],[294,54,245,62],[294,55,245,63],[295,10,246,16],[296,8,247,12],[297,8,248,12],[297,12,248,16],[297,13,248,17,"localUri"],[297,21,248,25],[297,24,248,28],[297,30,248,34],[297,34,248,34,"downloadAsync"],[297,44,248,47],[297,45,248,47,"downloadAsync"],[297,58,248,47],[297,60,248,48],[297,64,248,52],[297,65,248,53,"uri"],[297,68,248,56],[297,70,248,58],[297,74,248,62],[297,75,248,63,"hash"],[297,79,248,67],[297,81,248,69],[297,85,248,73],[297,86,248,74,"type"],[297,90,248,78],[297,91,248,79],[298,8,249,12],[298,12,249,16],[298,13,249,17,"downloaded"],[298,23,249,27],[298,26,249,30],[298,30,249,34],[299,8,250,12],[299,12,250,16],[299,13,250,17,"_downloadCallbacks"],[299,31,250,35],[299,32,250,36,"forEach"],[299,39,250,43],[299,40,250,44],[299,41,250,45],[300,10,250,47,"resolve"],[301,8,250,55],[301,9,250,56],[301,14,250,61,"resolve"],[301,21,250,68],[301,22,250,69],[301,23,250,70],[301,24,250,71],[302,6,251,8],[302,7,251,9],[302,8,252,8],[302,15,252,15,"e"],[302,16,252,16],[302,18,252,18],[303,8,253,12],[303,12,253,16],[303,13,253,17,"_downloadCallbacks"],[303,31,253,35],[303,32,253,36,"forEach"],[303,39,253,43],[303,40,253,44],[303,41,253,45],[304,10,253,47,"reject"],[305,8,253,54],[305,9,253,55],[305,14,253,60,"reject"],[305,20,253,66],[305,21,253,67,"e"],[305,22,253,68],[305,23,253,69],[305,24,253,70],[306,8,254,12],[306,14,254,18,"e"],[306,15,254,19],[307,6,255,8],[307,7,255,9],[307,16,256,16],[308,8,257,12],[308,12,257,16],[308,13,257,17,"downloading"],[308,24,257,28],[308,27,257,31],[308,32,257,36],[309,8,258,12],[309,12,258,16],[309,13,258,17,"_downloadCallbacks"],[309,31,258,35],[309,34,258,38],[309,36,258,40],[310,6,259,8],[311,6,260,8],[311,13,260,15],[311,17,260,19],[312,4,261,4],[313,2,262,0],[314,0,262,1],[314,3]],"functionMap":{"names":["<global>","Asset","constructor","loadAsync","moduleIds.map$argument_0","fromModule","fromMetadata","fromURI","downloadAsync","Promise$argument_0","_downloadCallbacks.forEach$argument_0"],"mappings":"AAA;OCkB;IC6C;KD8B;IEa;yCCE,wDD;KFC;IIQ;KJ6C;IKE;KLmB;IME;KNqB;IOkB;8BCK;aDE;4CEkB,0BF;4CEG,yBF;KPQ;CDC"},"hasCjsExports":false},"type":"js/module"}]}