{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":119},"end":{"line":5,"column":66,"index":185}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":186},"end":{"line":6,"column":63,"index":249}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":250},"end":{"line":7,"column":33,"index":283}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":284},"end":{"line":8,"column":108,"index":392}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":393},"end":{"line":9,"column":56,"index":449}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":450},"end":{"line":10,"column":64,"index":514}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":515},"end":{"line":11,"column":47,"index":562}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":563},"end":{"line":12,"column":81,"index":644}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":645},"end":{"line":13,"column":43,"index":688}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":689},"end":{"line":14,"column":64,"index":753}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":754},"end":{"line":15,"column":77,"index":831}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":832},"end":{"line":16,"column":55,"index":887}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":888},"end":{"line":17,"column":49,"index":937}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":938},"end":{"line":18,"column":48,"index":986}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsUIManager = require(_dependencyMap[2], \"react-native-web/dist/exports/UIManager\");\n  var UIManager = _interopDefault(_reactNativeWebDistExportsUIManager);\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[3], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  var _customDirectEventTypes = require(_dependencyMap[4], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[5], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[6], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[7], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[8], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[9], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[10], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[11], \"../utils\");\n  var _ActionType = require(_dependencyMap[12], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[13], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[14], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[15], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[16], \"../mountRegistry\");\n  var _reactJsxRuntime = require(_dependencyMap[17], \"react/jsx-runtime\");\n  const UIManagerAny = UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  const UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  const {\n    setJSResponder: oldSetJSResponder = () => {\n      // no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {\n      // no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && Platform.default.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      static displayName = name;\n      static contextType = GestureHandlerRootViewContext.default;\n      handlerTag = -1;\n      constructor(props) {\n        super(props);\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        this.inspectorToggleListener?.remove();\n        this.isMountedRef.current = false;\n        if (Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)();\n        // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onGestureEvent === 'function') {\n            this.props.onGestureEvent?.(event);\n          }\n        } else {\n          this.props.onGestureHandlerEvent?.(event);\n        }\n      };\n\n      // TODO(TS) - make sure this is right type for event\n      onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onHandlerStateChange === 'function') {\n            this.props.onHandlerStateChange?.(event);\n          }\n          const state = event.nativeEvent.state;\n          const stateEventName = stateToPropMappings[state];\n          const eventHandler = stateEventName && this.props[stateEventName];\n          if (eventHandler && typeof eventHandler === 'function') {\n            eventHandler(event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange?.(event);\n        }\n      };\n      refHandler = node => {\n        this.viewNode = node;\n        const child = React.Children.only(this.props.children);\n        // @ts-ignore Since React 19 ref is accessible as standard prop\n        // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n        const ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n        if (!ref) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      };\n      createGestureHandler = newConfig => {\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = newConfig;\n        RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n      };\n      attachGestureHandler = newViewTag => {\n        this.viewTag = newViewTag;\n        if (Platform.default.OS === 'web') {\n          // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n          RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n          // ignored on web\n          this.propsRef);\n        } else {\n          (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n            onGestureEvent: this.onGestureHandlerEvent,\n            onGestureStateChange: this.onGestureHandlerStateChange\n          });\n          const actionType = (() => {\n            const onGestureEvent = this.props?.onGestureEvent;\n            const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n            const onHandlerStateChange = this.props?.onHandlerStateChange;\n            const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n            const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n            if (isReanimatedHandler) {\n              // Reanimated worklet\n              return _ActionType.ActionType.REANIMATED_WORKLET;\n            } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n              // Animated.event with useNativeDriver: true\n              return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n            } else {\n              // JS callback or Animated.event with useNativeDriver: false\n              return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n            }\n          })();\n          RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n        }\n        (0, _utils.scheduleFlushOperations)();\n        (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n          _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n        });\n      };\n      updateGestureHandler = newConfig => {\n        this.config = newConfig;\n        RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n        (0, _utils.scheduleFlushOperations)();\n      };\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props;\n\n        // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/(0, _reactJsxRuntime.jsx)(_PressabilityDebugView.PressabilityDebugView, {\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }, \"pressabilityDebugView\"));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: this.props.testID ?? child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    return Handler;\n  }\n});","lineCount":420,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,1,13],[16,11,1,13,"_interopDefault"],[16,27,1,13,"e"],[16,28,1,13],[17,4,1,13],[17,11,1,13,"e"],[17,12,1,13],[17,16,1,13,"e"],[17,17,1,13],[17,18,1,13,"__esModule"],[17,28,1,13],[17,31,1,13,"e"],[17,32,1,13],[18,6,1,13,"default"],[18,13,1,13],[18,15,1,13,"e"],[19,4,1,13],[20,2,1,13],[21,2,115,15,"Object"],[21,8,115,15],[21,9,115,15,"defineProperty"],[21,23,115,15],[21,24,115,15,"exports"],[21,31,115,15],[22,4,115,15,"enumerable"],[22,14,115,15],[23,4,115,15,"get"],[23,7,115,15],[23,18,115,15,"get"],[23,19,115,15],[24,6,115,15],[24,13,115,15,"createHandler"],[24,26,115,15],[25,4,115,15],[26,2,115,15],[27,2,3,0],[27,6,3,0,"_react"],[27,12,3,0],[27,15,3,0,"require"],[27,22,3,0],[27,23,3,0,"_dependencyMap"],[27,37,3,0],[28,2,3,0],[28,6,3,0,"React"],[28,11,3,0],[28,14,3,0,"_interopNamespace"],[28,31,3,0],[28,32,3,0,"_react"],[28,38,3,0],[29,2,3,31],[29,6,3,31,"_reactNativeWebDistExportsPlatform"],[29,40,3,31],[29,43,3,31,"require"],[29,50,3,31],[29,51,3,31,"_dependencyMap"],[29,65,3,31],[30,2,3,31],[30,6,3,31,"Platform"],[30,14,3,31],[30,17,3,31,"_interopDefault"],[30,32,3,31],[30,33,3,31,"_reactNativeWebDistExportsPlatform"],[30,67,3,31],[31,2,3,31],[31,6,3,31,"_reactNativeWebDistExportsUIManager"],[31,41,3,31],[31,44,3,31,"require"],[31,51,3,31],[31,52,3,31,"_dependencyMap"],[31,66,3,31],[32,2,3,31],[32,6,3,31,"UIManager"],[32,15,3,31],[32,18,3,31,"_interopDefault"],[32,33,3,31],[32,34,3,31,"_reactNativeWebDistExportsUIManager"],[32,69,3,31],[33,2,3,31],[33,6,3,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[33,50,3,31],[33,53,3,31,"require"],[33,60,3,31],[33,61,3,31,"_dependencyMap"],[33,75,3,31],[34,2,3,31],[34,6,3,31,"DeviceEventEmitter"],[34,24,3,31],[34,27,3,31,"_interopDefault"],[34,42,3,31],[34,43,3,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[34,87,3,31],[35,2,5,0],[35,6,5,0,"_customDirectEventTypes"],[35,29,5,0],[35,32,5,0,"require"],[35,39,5,0],[35,40,5,0,"_dependencyMap"],[35,54,5,0],[36,2,6,0],[36,6,6,0,"_RNGestureHandlerModule"],[36,29,6,0],[36,32,6,0,"require"],[36,39,6,0],[36,40,6,0,"_dependencyMap"],[36,54,6,0],[37,2,6,0],[37,6,6,0,"RNGestureHandlerModule"],[37,28,6,0],[37,31,6,0,"_interopDefault"],[37,46,6,0],[37,47,6,0,"_RNGestureHandlerModule"],[37,70,6,0],[38,2,7,0],[38,6,7,0,"_State"],[38,12,7,0],[38,15,7,0,"require"],[38,22,7,0],[38,23,7,0,"_dependencyMap"],[38,37,7,0],[39,2,8,0],[39,6,8,0,"_handlersRegistry"],[39,23,8,0],[39,26,8,0,"require"],[39,33,8,0],[39,34,8,0,"_dependencyMap"],[39,48,8,0],[40,2,9,0],[40,6,9,0,"_getNextHandlerTag"],[40,24,9,0],[40,27,9,0,"require"],[40,34,9,0],[40,35,9,0,"_dependencyMap"],[40,49,9,0],[41,2,10,0],[41,6,10,0,"_utils"],[41,12,10,0],[41,15,10,0,"require"],[41,22,10,0],[41,23,10,0,"_dependencyMap"],[41,37,10,0],[42,2,11,0],[42,6,11,0,"_findNodeHandle"],[42,21,11,0],[42,24,11,0,"require"],[42,31,11,0],[42,32,11,0,"_dependencyMap"],[42,46,11,0],[43,2,11,0],[43,6,11,0,"findNodeHandle"],[43,20,11,0],[43,23,11,0,"_interopDefault"],[43,38,11,0],[43,39,11,0,"_findNodeHandle"],[43,54,11,0],[44,2,12,0],[44,6,12,0,"_utils2"],[44,13,12,0],[44,16,12,0,"require"],[44,23,12,0],[44,24,12,0,"_dependencyMap"],[44,38,12,0],[45,2,13,0],[45,6,13,0,"_ActionType"],[45,17,13,0],[45,20,13,0,"require"],[45,27,13,0],[45,28,13,0,"_dependencyMap"],[45,42,13,0],[46,2,14,0],[46,6,14,0,"_PressabilityDebugView"],[46,28,14,0],[46,31,14,0,"require"],[46,38,14,0],[46,39,14,0,"_dependencyMap"],[46,53,14,0],[47,2,15,0],[47,6,15,0,"_GestureHandlerRootViewContext"],[47,36,15,0],[47,39,15,0,"require"],[47,46,15,0],[47,47,15,0,"_dependencyMap"],[47,61,15,0],[48,2,15,0],[48,6,15,0,"GestureHandlerRootViewContext"],[48,35,15,0],[48,38,15,0,"_interopDefault"],[48,53,15,0],[48,54,15,0,"_GestureHandlerRootViewContext"],[48,84,15,0],[49,2,16,0],[49,6,16,0,"_ghQueueMicrotask"],[49,23,16,0],[49,26,16,0,"require"],[49,33,16,0],[49,34,16,0,"_dependencyMap"],[49,48,16,0],[50,2,17,0],[50,6,17,0,"_mountRegistry"],[50,20,17,0],[50,23,17,0,"require"],[50,30,17,0],[50,31,17,0,"_dependencyMap"],[50,45,17,0],[51,2,18,0],[51,6,18,0,"_reactJsxRuntime"],[51,22,18,0],[51,25,18,0,"require"],[51,32,18,0],[51,33,18,0,"_dependencyMap"],[51,47,18,0],[52,2,19,0],[52,8,19,6,"UIManagerAny"],[52,20,19,18],[52,23,19,21,"UIManager"],[52,32,19,30],[52,33,19,30,"default"],[52,40,19,30],[53,2,20,0,"customDirectEventTypes"],[53,25,20,22],[53,26,20,22,"customDirectEventTypes"],[53,48,20,22],[53,49,20,23,"topGestureHandlerEvent"],[53,71,20,45],[53,74,20,48],[54,4,21,2,"registrationName"],[54,20,21,18],[54,22,21,20],[55,2,22,0],[55,3,22,1],[56,2,23,0],[56,8,23,6,"customGHEventsConfigFabricAndroid"],[56,41,23,39],[56,44,23,42],[57,4,24,2,"topOnGestureHandlerEvent"],[57,28,24,26],[57,30,24,28],[58,6,25,4,"registrationName"],[58,22,25,20],[58,24,25,22],[59,4,26,2],[59,5,26,3],[60,4,27,2,"topOnGestureHandlerStateChange"],[60,34,27,32],[60,36,27,34],[61,6,28,4,"registrationName"],[61,22,28,20],[61,24,28,22],[62,4,29,2],[63,2,30,0],[63,3,30,1],[64,2,31,0],[64,8,31,6,"customGHEventsConfig"],[64,28,31,26],[64,31,31,29],[65,4,32,2,"onGestureHandlerEvent"],[65,25,32,23],[65,27,32,25],[66,6,33,4,"registrationName"],[66,22,33,20],[66,24,33,22],[67,4,34,2],[67,5,34,3],[68,4,35,2,"onGestureHandlerStateChange"],[68,31,35,29],[68,33,35,31],[69,6,36,4,"registrationName"],[69,22,36,20],[69,24,36,22],[70,4,37,2],[70,5,37,3],[71,4,38,2],[72,4,39,2],[73,4,40,2],[74,4,41,2],[75,4,42,2],[76,4,43,2],[77,4,44,2],[78,4,45,2],[79,4,46,2],[79,8,46,6],[79,12,46,6,"isFabric"],[79,19,46,14],[79,20,46,14,"isFabric"],[79,28,46,14],[79,30,46,15],[79,31,46,16],[79,35,46,20,"Platform"],[79,43,46,28],[79,44,46,28,"default"],[79,51,46,28],[79,52,46,29,"OS"],[79,54,46,31],[79,59,46,36],[79,68,46,45],[79,72,46,49,"customGHEventsConfigFabricAndroid"],[79,105,46,82],[80,2,47,0],[80,3,47,1],[82,2,49,0],[83,2,50,0],[84,2,51,0],[85,2,52,0],[86,2,53,0,"UIManagerAny"],[86,14,53,12],[86,15,53,13,"genericDirectEventTypes"],[86,38,53,36],[86,41,53,39],[87,4,54,2],[87,7,54,5,"UIManagerAny"],[87,19,54,17],[87,20,54,18,"genericDirectEventTypes"],[87,43,54,41],[88,4,55,2],[88,7,55,5,"customGHEventsConfig"],[89,2,56,0],[89,3,56,1],[90,2,57,0],[90,8,57,6,"UIManagerConstants"],[90,26,57,24],[90,29,57,27,"UIManagerAny"],[90,41,57,39],[90,42,57,40,"getViewManagerConfig"],[90,62,57,60],[90,65,57,63],[90,79,57,77],[90,80,57,78],[91,2,58,0],[91,6,58,4,"UIManagerConstants"],[91,24,58,22],[91,26,58,24],[92,4,59,2,"UIManagerConstants"],[92,22,59,20],[92,23,59,21,"genericDirectEventTypes"],[92,46,59,44],[92,49,59,47],[93,6,60,4],[93,9,60,7,"UIManagerConstants"],[93,27,60,25],[93,28,60,26,"genericDirectEventTypes"],[93,51,60,49],[94,6,61,4],[94,9,61,7,"customGHEventsConfig"],[95,4,62,2],[95,5,62,3],[96,2,63,0],[98,2,65,0],[99,2,66,0],[99,8,66,6],[100,4,67,2,"setJSResponder"],[100,18,67,16],[100,20,67,18,"oldSetJSResponder"],[100,37,67,35],[100,40,67,38,"oldSetJSResponder"],[100,41,67,38],[100,46,67,44],[101,6,68,4],[102,4,68,4],[102,5,69,3],[103,4,70,2,"clearJSResponder"],[103,20,70,18],[103,22,70,20,"oldClearJSResponder"],[103,41,70,39],[103,44,70,42,"oldClearJSResponder"],[103,45,70,42],[103,50,70,48],[104,6,71,4],[105,4,71,4],[106,2,73,0],[106,3,73,1],[106,6,73,4,"UIManagerAny"],[106,18,73,16],[107,2,74,0,"UIManagerAny"],[107,14,74,12],[107,15,74,13,"setJSResponder"],[107,29,74,27],[107,32,74,30],[107,33,74,31,"tag"],[107,36,74,34],[107,38,74,36,"blockNativeResponder"],[107,58,74,56],[107,63,74,61],[108,4,75,2,"RNGestureHandlerModule"],[108,26,75,24],[108,27,75,24,"default"],[108,34,75,24],[108,35,75,25,"handleSetJSResponder"],[108,55,75,45],[108,56,75,46,"tag"],[108,59,75,49],[108,61,75,51,"blockNativeResponder"],[108,81,75,71],[108,82,75,72],[109,4,76,2,"oldSetJSResponder"],[109,21,76,19],[109,22,76,20,"tag"],[109,25,76,23],[109,27,76,25,"blockNativeResponder"],[109,47,76,45],[109,48,76,46],[110,2,77,0],[110,3,77,1],[111,2,78,0,"UIManagerAny"],[111,14,78,12],[111,15,78,13,"clearJSResponder"],[111,31,78,29],[111,34,78,32],[111,40,78,38],[112,4,79,2,"RNGestureHandlerModule"],[112,26,79,24],[112,27,79,24,"default"],[112,34,79,24],[112,35,79,25,"handleClearJSResponder"],[112,57,79,47],[112,58,79,48],[112,59,79,49],[113,4,80,2,"oldClearJSResponder"],[113,23,80,21],[113,24,80,22],[113,25,80,23],[114,2,81,0],[114,3,81,1],[115,2,82,0],[115,6,82,4,"allowTouches"],[115,18,82,16],[115,21,82,19],[115,25,82,23],[116,2,83,0],[116,8,83,6,"DEV_ON_ANDROID"],[116,22,83,20],[116,25,83,23,"__DEV__"],[116,32,83,30],[116,36,83,34,"Platform"],[116,44,83,42],[116,45,83,42,"default"],[116,52,83,42],[116,53,83,43,"OS"],[116,55,83,45],[116,60,83,50],[116,69,83,59],[117,2,84,0],[118,2,85,0],[119,2,86,0],[119,6,86,4,"DEV_ON_ANDROID"],[119,20,86,18],[119,22,86,20],[120,4,87,2,"DeviceEventEmitter"],[120,22,87,20],[120,23,87,20,"default"],[120,30,87,20],[120,31,87,21,"addListener"],[120,42,87,32],[120,43,87,33],[120,67,87,57],[120,69,87,59],[120,75,87,65],[121,6,88,4,"allowTouches"],[121,18,88,16],[121,21,88,19],[121,22,88,20,"allowTouches"],[121,34,88,32],[122,4,89,2],[122,5,89,3],[122,6,89,4],[123,2,90,0],[124,2,91,0],[124,11,91,9,"hasUnresolvedRefs"],[124,28,91,26,"hasUnresolvedRefs"],[124,29,91,27,"props"],[124,34,91,32],[124,36,91,34],[125,4,92,2],[126,4,93,2],[126,10,93,8,"extract"],[126,17,93,15],[126,20,93,18,"refs"],[126,24,93,22],[126,28,93,26],[127,6,94,4],[127,10,94,8],[127,11,94,9,"Array"],[127,16,94,14],[127,17,94,15,"isArray"],[127,24,94,22],[127,25,94,23,"refs"],[127,29,94,27],[127,30,94,28],[127,32,94,30],[128,8,95,6],[128,15,95,13,"refs"],[128,19,95,17],[128,23,95,21,"refs"],[128,27,95,25],[128,28,95,26,"current"],[128,35,95,33],[128,40,95,38],[128,44,95,42],[129,6,96,4],[130,6,97,4],[130,13,97,11,"refs"],[130,17,97,15],[130,18,97,16,"some"],[130,22,97,20],[130,23,97,21,"r"],[130,24,97,22],[130,28,97,26,"r"],[130,29,97,27],[130,33,97,31,"r"],[130,34,97,32],[130,35,97,33,"current"],[130,42,97,40],[130,47,97,45],[130,51,97,49],[130,52,97,50],[131,4,98,2],[131,5,98,3],[132,4,99,2],[132,11,99,9,"extract"],[132,18,99,16],[132,19,99,17,"props"],[132,24,99,22],[132,25,99,23],[132,47,99,45],[132,48,99,46],[132,49,99,47],[132,53,99,51,"extract"],[132,60,99,58],[132,61,99,59,"props"],[132,66,99,64],[132,67,99,65],[132,76,99,74],[132,77,99,75],[132,78,99,76],[133,2,100,0],[134,2,101,0],[134,8,101,6,"stateToPropMappings"],[134,27,101,25],[134,30,101,28],[135,4,102,2],[135,5,102,3,"State"],[135,11,102,8],[135,12,102,8,"State"],[135,17,102,8],[135,18,102,9,"UNDETERMINED"],[135,30,102,21],[135,33,102,24,"undefined"],[135,42,102,33],[136,4,103,2],[136,5,103,3,"State"],[136,11,103,8],[136,12,103,8,"State"],[136,17,103,8],[136,18,103,9,"BEGAN"],[136,23,103,14],[136,26,103,17],[136,35,103,26],[137,4,104,2],[137,5,104,3,"State"],[137,11,104,8],[137,12,104,8,"State"],[137,17,104,8],[137,18,104,9,"FAILED"],[137,24,104,15],[137,27,104,18],[137,37,104,28],[138,4,105,2],[138,5,105,3,"State"],[138,11,105,8],[138,12,105,8,"State"],[138,17,105,8],[138,18,105,9,"CANCELLED"],[138,27,105,18],[138,30,105,21],[138,43,105,34],[139,4,106,2],[139,5,106,3,"State"],[139,11,106,8],[139,12,106,8,"State"],[139,17,106,8],[139,18,106,9,"ACTIVE"],[139,24,106,15],[139,27,106,18],[139,40,106,31],[140,4,107,2],[140,5,107,3,"State"],[140,11,107,8],[140,12,107,8,"State"],[140,17,107,8],[140,18,107,9,"END"],[140,21,107,12],[140,24,107,15],[141,2,108,0],[141,3,108,1],[143,2,110,0],[145,2,112,0],[145,8,112,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[145,35,112,33],[145,38,112,36],[145,39,112,37],[147,2,114,0],[148,2,115,15],[148,11,115,24,"createHandler"],[148,24,115,37,"createHandler"],[148,25,115,38],[149,4,116,2,"name"],[149,8,116,6],[150,4,117,2,"allowedProps"],[150,16,117,14],[150,19,117,17],[150,21,117,19],[151,4,118,2,"config"],[151,10,118,8],[151,13,118,11],[151,14,118,12],[151,15,118,13],[152,4,119,2,"transformProps"],[152,18,119,16],[153,4,120,2,"customNativeProps"],[153,21,120,19],[153,24,120,22],[154,2,121,0],[154,3,121,1],[154,5,121,3],[155,4,122,2],[155,10,122,8,"Handler"],[155,17,122,15],[155,26,122,24,"React"],[155,31,122,29],[155,32,122,30,"Component"],[155,41,122,39],[155,42,122,40],[156,6,123,4],[156,13,123,11,"displayName"],[156,24,123,22],[156,27,123,25,"name"],[156,31,123,29],[157,6,124,4],[157,13,124,11,"contextType"],[157,24,124,22],[157,27,124,25,"GestureHandlerRootViewContext"],[157,56,124,54],[157,57,124,54,"default"],[157,64,124,54],[158,6,125,4,"handlerTag"],[158,16,125,14],[158,19,125,17],[158,20,125,18],[158,21,125,19],[159,6,126,4,"constructor"],[159,17,126,15,"constructor"],[159,18,126,16,"props"],[159,23,126,21],[159,25,126,23],[160,8,127,6],[160,13,127,11],[160,14,127,12,"props"],[160,19,127,17],[160,20,127,18],[161,8,128,6],[161,12,128,10],[161,13,128,11,"config"],[161,19,128,17],[161,22,128,20],[161,23,128,21],[161,24,128,22],[162,8,129,6],[162,12,129,10],[162,13,129,11,"propsRef"],[162,21,129,19],[162,24,129,22],[162,37,129,35,"React"],[162,42,129,40],[162,43,129,41,"createRef"],[162,52,129,50],[162,53,129,51],[162,54,129,52],[163,8,130,6],[163,12,130,10],[163,13,130,11,"isMountedRef"],[163,25,130,23],[163,28,130,26],[163,41,130,39,"React"],[163,46,130,44],[163,47,130,45,"createRef"],[163,56,130,54],[163,57,130,55],[163,58,130,56],[164,8,131,6],[164,12,131,10],[164,13,131,11,"state"],[164,18,131,16],[164,21,131,19],[165,10,132,8,"allowTouches"],[166,8,133,6],[166,9,133,7],[167,8,134,6],[167,12,134,10,"props"],[167,17,134,15],[167,18,134,16,"id"],[167,20,134,18],[167,22,134,20],[168,10,135,8],[168,14,135,12,"handlerIDToTag"],[168,31,135,26],[168,32,135,26,"handlerIDToTag"],[168,46,135,26],[168,47,135,27,"props"],[168,52,135,32],[168,53,135,33,"id"],[168,55,135,35],[168,56,135,36],[168,61,135,41,"undefined"],[168,70,135,50],[168,72,135,52],[169,12,136,10],[169,18,136,16],[169,22,136,20,"Error"],[169,27,136,25],[169,28,136,26],[169,48,136,46,"props"],[169,53,136,51],[169,54,136,52,"id"],[169,56,136,54],[169,78,136,76],[169,79,136,77],[170,10,137,8],[171,10,138,8,"handlerIDToTag"],[171,27,138,22],[171,28,138,22,"handlerIDToTag"],[171,42,138,22],[171,43,138,23,"props"],[171,48,138,28],[171,49,138,29,"id"],[171,51,138,31],[171,52,138,32],[171,55,138,35],[171,59,138,39],[171,60,138,40,"handlerTag"],[171,70,138,50],[172,8,139,6],[173,6,140,4],[174,6,141,4,"componentDidMount"],[174,23,141,21,"componentDidMount"],[174,24,141,21],[174,26,141,24],[175,8,142,6],[175,14,142,12,"props"],[175,19,142,17],[175,22,142,20],[175,26,142,24],[175,27,142,25,"props"],[175,32,142,30],[176,8,143,6],[176,12,143,10],[176,13,143,11,"isMountedRef"],[176,25,143,23],[176,26,143,24,"current"],[176,33,143,31],[176,36,143,34],[176,40,143,38],[177,8,144,6],[177,12,144,10,"DEV_ON_ANDROID"],[177,26,144,24],[177,28,144,26],[178,10,145,8],[178,14,145,12],[178,15,145,13,"inspectorToggleListener"],[178,38,145,36],[178,41,145,39,"DeviceEventEmitter"],[178,59,145,57],[178,60,145,57,"default"],[178,67,145,57],[178,68,145,58,"addListener"],[178,79,145,69],[178,80,145,70],[178,104,145,94],[178,106,145,96],[178,112,145,102],[179,12,146,10],[179,16,146,14],[179,17,146,15,"setState"],[179,25,146,23],[179,26,146,24,"_"],[179,27,146,25],[179,32,146,30],[180,14,147,12,"allowTouches"],[181,12,148,10],[181,13,148,11],[181,14,148,12],[181,15,148,13],[182,12,149,10],[182,16,149,14],[182,17,149,15,"update"],[182,23,149,21],[182,24,149,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[182,51,149,49],[182,52,149,50],[183,10,150,8],[183,11,150,9],[183,12,150,10],[184,8,151,6],[185,8,152,6],[185,12,152,10,"hasUnresolvedRefs"],[185,29,152,27],[185,30,152,28,"props"],[185,35,152,33],[185,36,152,34],[185,38,152,36],[186,10,153,8],[187,10,154,8],[188,10,155,8],[189,10,156,8],[190,10,157,8],[191,10,158,8],[192,10,159,8],[192,14,159,8,"ghQueueMicrotask"],[192,31,159,24],[192,32,159,24,"ghQueueMicrotask"],[192,48,159,24],[192,50,159,25],[192,56,159,31],[193,12,160,10],[193,16,160,14],[193,17,160,15,"update"],[193,23,160,21],[193,24,160,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[193,51,160,49],[193,52,160,50],[194,10,161,8],[194,11,161,9],[194,12,161,10],[195,8,162,6],[196,8,163,6],[196,12,163,10],[196,13,163,11,"createGestureHandler"],[196,33,163,31],[196,34,163,32],[196,38,163,32,"filterConfig"],[196,44,163,44],[196,45,163,44,"filterConfig"],[196,57,163,44],[196,59,163,45,"transformProps"],[196,73,163,59],[196,76,163,62,"transformProps"],[196,90,163,76],[196,91,163,77],[196,95,163,81],[196,96,163,82,"props"],[196,101,163,87],[196,102,163,88],[196,105,163,91],[196,109,163,95],[196,110,163,96,"props"],[196,115,163,101],[196,117,163,103],[196,118,163,104],[196,121,163,107,"allowedProps"],[196,133,163,119],[196,135,163,121],[196,138,163,124,"customNativeProps"],[196,155,163,141],[196,156,163,142],[196,158,163,144,"config"],[196,164,163,150],[196,165,163,151],[196,166,163,152],[197,8,164,6],[197,12,164,10],[197,13,164,11],[197,17,164,15],[197,18,164,16,"viewNode"],[197,26,164,24],[197,28,164,26],[198,10,165,8],[198,16,165,14],[198,20,165,18,"Error"],[198,25,165,23],[198,26,165,24],[198,73,165,71,"Handler"],[198,80,165,78],[198,81,165,79,"displayName"],[198,92,165,90],[198,152,165,150],[198,153,165,151],[199,8,166,6],[200,8,167,6],[200,12,167,10],[200,13,167,11,"attachGestureHandler"],[200,33,167,31],[200,34,167,32],[200,38,167,32,"findNodeHandle"],[200,52,167,46],[200,53,167,46,"default"],[200,60,167,46],[200,62,167,47],[200,66,167,51],[200,67,167,52,"viewNode"],[200,75,167,60],[200,76,167,61],[200,77,167,62],[200,78,167,63],[200,79,167,64],[201,6,168,4],[202,6,169,4,"componentDidUpdate"],[202,24,169,22,"componentDidUpdate"],[202,25,169,22],[202,27,169,25],[203,8,170,6],[203,14,170,12,"viewTag"],[203,21,170,19],[203,24,170,22],[203,28,170,22,"findNodeHandle"],[203,42,170,36],[203,43,170,36,"default"],[203,50,170,36],[203,52,170,37],[203,56,170,41],[203,57,170,42,"viewNode"],[203,65,170,50],[203,66,170,51],[204,8,171,6],[204,12,171,10],[204,16,171,14],[204,17,171,15,"viewTag"],[204,24,171,22],[204,29,171,27,"viewTag"],[204,36,171,34],[204,38,171,36],[205,10,172,8],[205,14,172,12],[205,15,172,13,"attachGestureHandler"],[205,35,172,33],[205,36,172,34,"viewTag"],[205,43,172,41],[205,44,172,42],[205,45,172,43],[205,46,172,44],[206,8,173,6],[207,8,174,6],[207,12,174,10],[207,13,174,11,"update"],[207,19,174,17],[207,20,174,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[207,47,174,45],[207,48,174,46],[208,6,175,4],[209,6,176,4,"componentWillUnmount"],[209,26,176,24,"componentWillUnmount"],[209,27,176,24],[209,29,176,27],[210,8,177,6],[210,12,177,10],[210,13,177,11,"inspectorToggleListener"],[210,36,177,34],[210,38,177,36,"remove"],[210,44,177,42],[210,45,177,43],[210,46,177,44],[211,8,178,6],[211,12,178,10],[211,13,178,11,"isMountedRef"],[211,25,178,23],[211,26,178,24,"current"],[211,33,178,31],[211,36,178,34],[211,41,178,39],[212,8,179,6],[212,12,179,10,"Platform"],[212,20,179,18],[212,21,179,18,"default"],[212,28,179,18],[212,29,179,19,"OS"],[212,31,179,21],[212,36,179,26],[212,41,179,31],[212,43,179,33],[213,10,180,8],[213,14,180,8,"unregisterOldGestureHandler"],[213,31,180,35],[213,32,180,35,"unregisterOldGestureHandler"],[213,59,180,35],[213,61,180,36],[213,65,180,40],[213,66,180,41,"handlerTag"],[213,76,180,51],[213,77,180,52],[214,8,181,6],[215,8,182,6,"RNGestureHandlerModule"],[215,30,182,28],[215,31,182,28,"default"],[215,38,182,28],[215,39,182,29,"dropGestureHandler"],[215,57,182,47],[215,58,182,48],[215,62,182,52],[215,63,182,53,"handlerTag"],[215,73,182,63],[215,74,182,64],[216,8,183,6],[216,12,183,6,"scheduleFlushOperations"],[216,18,183,29],[216,19,183,29,"scheduleFlushOperations"],[216,42,183,29],[216,44,183,30],[216,45,183,31],[217,8,184,6],[218,8,185,6],[218,14,185,12,"handlerID"],[218,23,185,21],[218,26,185,24],[218,30,185,28],[218,31,185,29,"props"],[218,36,185,34],[218,37,185,35,"id"],[218,39,185,37],[219,8,186,6],[219,12,186,10,"handlerID"],[219,21,186,19],[219,23,186,21],[220,10,187,8],[221,10,188,8],[221,17,188,15,"handlerIDToTag"],[221,34,188,29],[221,35,188,29,"handlerIDToTag"],[221,49,188,29],[221,50,188,30,"handlerID"],[221,59,188,39],[221,60,188,40],[222,8,189,6],[223,8,190,6,"MountRegistry"],[223,22,190,19],[223,23,190,19,"MountRegistry"],[223,36,190,19],[223,37,190,20,"gestureHandlerWillUnmount"],[223,62,190,45],[223,63,190,46],[223,67,190,50],[223,68,190,51],[224,6,191,4],[225,6,192,4,"onGestureHandlerEvent"],[225,27,192,25],[225,30,192,28,"event"],[225,35,192,33],[225,39,192,37],[226,8,193,6],[226,12,193,10,"event"],[226,17,193,15],[226,18,193,16,"nativeEvent"],[226,29,193,27],[226,30,193,28,"handlerTag"],[226,40,193,38],[226,45,193,43],[226,49,193,47],[226,50,193,48,"handlerTag"],[226,60,193,58],[226,62,193,60],[227,10,194,8],[227,14,194,12],[227,21,194,19],[227,25,194,23],[227,26,194,24,"props"],[227,31,194,29],[227,32,194,30,"onGestureEvent"],[227,46,194,44],[227,51,194,49],[227,61,194,59],[227,63,194,61],[228,12,195,10],[228,16,195,14],[228,17,195,15,"props"],[228,22,195,20],[228,23,195,21,"onGestureEvent"],[228,37,195,35],[228,40,195,38,"event"],[228,45,195,43],[228,46,195,44],[229,10,196,8],[230,8,197,6],[230,9,197,7],[230,15,197,13],[231,10,198,8],[231,14,198,12],[231,15,198,13,"props"],[231,20,198,18],[231,21,198,19,"onGestureHandlerEvent"],[231,42,198,40],[231,45,198,43,"event"],[231,50,198,48],[231,51,198,49],[232,8,199,6],[233,6,200,4],[233,7,200,5],[235,6,202,4],[236,6,203,4,"onGestureHandlerStateChange"],[236,33,203,31],[236,36,203,34,"event"],[236,41,203,39],[236,45,203,43],[237,8,204,6],[237,12,204,10,"event"],[237,17,204,15],[237,18,204,16,"nativeEvent"],[237,29,204,27],[237,30,204,28,"handlerTag"],[237,40,204,38],[237,45,204,43],[237,49,204,47],[237,50,204,48,"handlerTag"],[237,60,204,58],[237,62,204,60],[238,10,205,8],[238,14,205,12],[238,21,205,19],[238,25,205,23],[238,26,205,24,"props"],[238,31,205,29],[238,32,205,30,"onHandlerStateChange"],[238,52,205,50],[238,57,205,55],[238,67,205,65],[238,69,205,67],[239,12,206,10],[239,16,206,14],[239,17,206,15,"props"],[239,22,206,20],[239,23,206,21,"onHandlerStateChange"],[239,43,206,41],[239,46,206,44,"event"],[239,51,206,49],[239,52,206,50],[240,10,207,8],[241,10,208,8],[241,16,208,14,"state"],[241,21,208,19],[241,24,208,22,"event"],[241,29,208,27],[241,30,208,28,"nativeEvent"],[241,41,208,39],[241,42,208,40,"state"],[241,47,208,45],[242,10,209,8],[242,16,209,14,"stateEventName"],[242,30,209,28],[242,33,209,31,"stateToPropMappings"],[242,52,209,50],[242,53,209,51,"state"],[242,58,209,56],[242,59,209,57],[243,10,210,8],[243,16,210,14,"eventHandler"],[243,28,210,26],[243,31,210,29,"stateEventName"],[243,45,210,43],[243,49,210,47],[243,53,210,51],[243,54,210,52,"props"],[243,59,210,57],[243,60,210,58,"stateEventName"],[243,74,210,72],[243,75,210,73],[244,10,211,8],[244,14,211,12,"eventHandler"],[244,26,211,24],[244,30,211,28],[244,37,211,35,"eventHandler"],[244,49,211,47],[244,54,211,52],[244,64,211,62],[244,66,211,64],[245,12,212,10,"eventHandler"],[245,24,212,22],[245,25,212,23,"event"],[245,30,212,28],[245,31,212,29],[246,10,213,8],[247,8,214,6],[247,9,214,7],[247,15,214,13],[248,10,215,8],[248,14,215,12],[248,15,215,13,"props"],[248,20,215,18],[248,21,215,19,"onGestureHandlerStateChange"],[248,48,215,46],[248,51,215,49,"event"],[248,56,215,54],[248,57,215,55],[249,8,216,6],[250,6,217,4],[250,7,217,5],[251,6,218,4,"refHandler"],[251,16,218,14],[251,19,218,17,"node"],[251,23,218,21],[251,27,218,25],[252,8,219,6],[252,12,219,10],[252,13,219,11,"viewNode"],[252,21,219,19],[252,24,219,22,"node"],[252,28,219,26],[253,8,220,6],[253,14,220,12,"child"],[253,19,220,17],[253,22,220,20,"React"],[253,27,220,25],[253,28,220,26,"Children"],[253,36,220,34],[253,37,220,35,"only"],[253,41,220,39],[253,42,220,40],[253,46,220,44],[253,47,220,45,"props"],[253,52,220,50],[253,53,220,51,"children"],[253,61,220,59],[253,62,220,60],[254,8,221,6],[255,8,222,6],[256,8,223,6],[256,14,223,12,"ref"],[256,17,223,15],[256,20,223,18],[256,24,223,18,"isReact19"],[256,31,223,27],[256,32,223,27,"isReact19"],[256,41,223,27],[256,43,223,28],[256,44,223,29],[256,47,223,32,"child"],[256,52,223,37],[256,53,223,38,"props"],[256,58,223,43],[256,60,223,45,"ref"],[256,63,223,48],[256,66,223,51,"child"],[256,71,223,56],[256,73,223,58,"ref"],[256,76,223,61],[257,8,224,6],[257,12,224,10],[257,13,224,11,"ref"],[257,16,224,14],[257,18,224,16],[258,10,225,8],[259,8,226,6],[260,8,227,6],[260,12,227,10],[260,19,227,17,"ref"],[260,22,227,20],[260,27,227,25],[260,37,227,35],[260,39,227,37],[261,10,228,8,"ref"],[261,13,228,11],[261,14,228,12,"node"],[261,18,228,16],[261,19,228,17],[262,8,229,6],[262,9,229,7],[262,15,229,13],[263,10,230,8,"ref"],[263,13,230,11],[263,14,230,12,"current"],[263,21,230,19],[263,24,230,22,"node"],[263,28,230,26],[264,8,231,6],[265,6,232,4],[265,7,232,5],[266,6,233,4,"createGestureHandler"],[266,26,233,24],[266,29,233,27,"newConfig"],[266,38,233,36],[266,42,233,40],[267,8,234,6],[267,12,234,10],[267,13,234,11,"handlerTag"],[267,23,234,21],[267,26,234,24],[267,30,234,24,"getNextHandlerTag"],[267,48,234,41],[267,49,234,41,"getNextHandlerTag"],[267,66,234,41],[267,68,234,42],[267,69,234,43],[268,8,235,6],[268,12,235,10],[268,13,235,11,"config"],[268,19,235,17],[268,22,235,20,"newConfig"],[268,31,235,29],[269,8,236,6,"RNGestureHandlerModule"],[269,30,236,28],[269,31,236,28,"default"],[269,38,236,28],[269,39,236,29,"createGestureHandler"],[269,59,236,49],[269,60,236,50,"name"],[269,64,236,54],[269,66,236,56],[269,70,236,60],[269,71,236,61,"handlerTag"],[269,81,236,71],[269,83,236,73,"newConfig"],[269,92,236,82],[269,93,236,83],[270,6,237,4],[270,7,237,5],[271,6,238,4,"attachGestureHandler"],[271,26,238,24],[271,29,238,27,"newViewTag"],[271,39,238,37],[271,43,238,41],[272,8,239,6],[272,12,239,10],[272,13,239,11,"viewTag"],[272,20,239,18],[272,23,239,21,"newViewTag"],[272,33,239,31],[273,8,240,6],[273,12,240,10,"Platform"],[273,20,240,18],[273,21,240,18,"default"],[273,28,240,18],[273,29,240,19,"OS"],[273,31,240,21],[273,36,240,26],[273,41,240,31],[273,43,240,33],[274,10,241,8],[275,10,242,8,"RNGestureHandlerModule"],[275,32,242,30],[275,33,242,30,"default"],[275,40,242,30],[275,41,242,31,"attachGestureHandler"],[275,61,242,51],[275,62,242,52],[275,66,242,56],[275,67,242,57,"handlerTag"],[275,77,242,67],[275,79,242,69,"newViewTag"],[275,89,242,79],[275,91,242,81,"ActionType"],[275,102,242,91],[275,103,242,91,"ActionType"],[275,113,242,91],[275,114,242,92,"JS_FUNCTION_OLD_API"],[275,133,242,111],[276,10,243,8],[277,10,244,8],[277,14,244,12],[277,15,244,13,"propsRef"],[277,23,244,21],[277,24,244,22],[278,8,245,6],[278,9,245,7],[278,15,245,13],[279,10,246,8],[279,14,246,8,"registerOldGestureHandler"],[279,31,246,33],[279,32,246,33,"registerOldGestureHandler"],[279,57,246,33],[279,59,246,34],[279,63,246,38],[279,64,246,39,"handlerTag"],[279,74,246,49],[279,76,246,51],[280,12,247,10,"onGestureEvent"],[280,26,247,24],[280,28,247,26],[280,32,247,30],[280,33,247,31,"onGestureHandlerEvent"],[280,54,247,52],[281,12,248,10,"onGestureStateChange"],[281,32,248,30],[281,34,248,32],[281,38,248,36],[281,39,248,37,"onGestureHandlerStateChange"],[282,10,249,8],[282,11,249,9],[282,12,249,10],[283,10,250,8],[283,16,250,14,"actionType"],[283,26,250,24],[283,29,250,27],[283,30,250,28],[283,36,250,34],[284,12,251,10],[284,18,251,16,"onGestureEvent"],[284,32,251,30],[284,35,251,33],[284,39,251,37],[284,40,251,38,"props"],[284,45,251,43],[284,47,251,45,"onGestureEvent"],[284,61,251,59],[285,12,252,10],[285,18,252,16,"isGestureHandlerWorklet"],[285,41,252,39],[285,44,252,42,"onGestureEvent"],[285,58,252,56],[285,63,252,61],[285,72,252,70],[285,76,252,74,"onGestureEvent"],[285,90,252,88],[285,94,252,92],[285,115,252,113],[285,119,252,117,"onGestureEvent"],[285,133,252,131],[285,134,252,132],[286,12,253,10],[286,18,253,16,"onHandlerStateChange"],[286,38,253,36],[286,41,253,39],[286,45,253,43],[286,46,253,44,"props"],[286,51,253,49],[286,53,253,51,"onHandlerStateChange"],[286,73,253,71],[287,12,254,10],[287,18,254,16,"isStateChangeHandlerWorklet"],[287,45,254,43],[287,48,254,46,"onHandlerStateChange"],[287,68,254,66],[287,73,254,71],[287,82,254,80],[287,86,254,84,"onHandlerStateChange"],[287,106,254,104],[287,110,254,108],[287,131,254,129],[287,135,254,133,"onHandlerStateChange"],[287,155,254,153],[287,156,254,154],[288,12,255,10],[288,18,255,16,"isReanimatedHandler"],[288,37,255,35],[288,40,255,38,"isGestureHandlerWorklet"],[288,63,255,61],[288,67,255,65,"isStateChangeHandlerWorklet"],[288,94,255,92],[289,12,256,10],[289,16,256,14,"isReanimatedHandler"],[289,35,256,33],[289,37,256,35],[290,14,257,12],[291,14,258,12],[291,21,258,19,"ActionType"],[291,32,258,29],[291,33,258,29,"ActionType"],[291,43,258,29],[291,44,258,30,"REANIMATED_WORKLET"],[291,62,258,48],[292,12,259,10],[292,13,259,11],[292,19,259,17],[292,23,259,21,"onGestureEvent"],[292,37,259,35],[292,41,259,39],[292,53,259,51],[292,57,259,55,"onGestureEvent"],[292,71,259,69],[292,73,259,71],[293,14,260,12],[294,14,261,12],[294,21,261,19,"ActionType"],[294,32,261,29],[294,33,261,29,"ActionType"],[294,43,261,29],[294,44,261,30,"NATIVE_ANIMATED_EVENT"],[294,65,261,51],[295,12,262,10],[295,13,262,11],[295,19,262,17],[296,14,263,12],[297,14,264,12],[297,21,264,19,"ActionType"],[297,32,264,29],[297,33,264,29,"ActionType"],[297,43,264,29],[297,44,264,30,"JS_FUNCTION_OLD_API"],[297,63,264,49],[298,12,265,10],[299,10,266,8],[299,11,266,9],[299,13,266,11],[299,14,266,12],[300,10,267,8,"RNGestureHandlerModule"],[300,32,267,30],[300,33,267,30,"default"],[300,40,267,30],[300,41,267,31,"attachGestureHandler"],[300,61,267,51],[300,62,267,52],[300,66,267,56],[300,67,267,57,"handlerTag"],[300,77,267,67],[300,79,267,69,"newViewTag"],[300,89,267,79],[300,91,267,81,"actionType"],[300,101,267,91],[300,102,267,92],[301,8,268,6],[302,8,269,6],[302,12,269,6,"scheduleFlushOperations"],[302,18,269,29],[302,19,269,29,"scheduleFlushOperations"],[302,42,269,29],[302,44,269,30],[302,45,269,31],[303,8,270,6],[303,12,270,6,"ghQueueMicrotask"],[303,29,270,22],[303,30,270,22,"ghQueueMicrotask"],[303,46,270,22],[303,48,270,23],[303,54,270,29],[304,10,271,8,"MountRegistry"],[304,24,271,21],[304,25,271,21,"MountRegistry"],[304,38,271,21],[304,39,271,22,"gestureHandlerWillMount"],[304,62,271,45],[304,63,271,46],[304,67,271,50],[304,68,271,51],[305,8,272,6],[305,9,272,7],[305,10,272,8],[306,6,273,4],[306,7,273,5],[307,6,274,4,"updateGestureHandler"],[307,26,274,24],[307,29,274,27,"newConfig"],[307,38,274,36],[307,42,274,40],[308,8,275,6],[308,12,275,10],[308,13,275,11,"config"],[308,19,275,17],[308,22,275,20,"newConfig"],[308,31,275,29],[309,8,276,6,"RNGestureHandlerModule"],[309,30,276,28],[309,31,276,28,"default"],[309,38,276,28],[309,39,276,29,"updateGestureHandler"],[309,59,276,49],[309,60,276,50],[309,64,276,54],[309,65,276,55,"handlerTag"],[309,75,276,65],[309,77,276,67,"newConfig"],[309,86,276,76],[309,87,276,77],[310,8,277,6],[310,12,277,6,"scheduleFlushOperations"],[310,18,277,29],[310,19,277,29,"scheduleFlushOperations"],[310,42,277,29],[310,44,277,30],[310,45,277,31],[311,6,278,4],[311,7,278,5],[312,6,279,4,"update"],[312,12,279,10,"update"],[312,13,279,11,"remainingTries"],[312,27,279,25],[312,29,279,27],[313,8,280,6],[313,12,280,10],[313,13,280,11],[313,17,280,15],[313,18,280,16,"isMountedRef"],[313,30,280,28],[313,31,280,29,"current"],[313,38,280,36],[313,40,280,38],[314,10,281,8],[315,8,282,6],[316,8,283,6],[316,14,283,12,"props"],[316,19,283,17],[316,22,283,20],[316,26,283,24],[316,27,283,25,"props"],[316,32,283,30],[318,8,285,6],[319,8,286,6],[320,8,287,6],[321,8,288,6],[321,12,288,10,"hasUnresolvedRefs"],[321,29,288,27],[321,30,288,28,"props"],[321,35,288,33],[321,36,288,34],[321,40,288,38,"remainingTries"],[321,54,288,52],[321,57,288,55],[321,58,288,56],[321,60,288,58],[322,10,289,8],[322,14,289,8,"ghQueueMicrotask"],[322,31,289,24],[322,32,289,24,"ghQueueMicrotask"],[322,48,289,24],[322,50,289,25],[322,56,289,31],[323,12,290,10],[323,16,290,14],[323,17,290,15,"update"],[323,23,290,21],[323,24,290,22,"remainingTries"],[323,38,290,36],[323,41,290,39],[323,42,290,40],[323,43,290,41],[324,10,291,8],[324,11,291,9],[324,12,291,10],[325,8,292,6],[325,9,292,7],[325,15,292,13],[326,10,293,8],[326,16,293,14,"newConfig"],[326,25,293,23],[326,28,293,26],[326,32,293,26,"filterConfig"],[326,38,293,38],[326,39,293,38,"filterConfig"],[326,51,293,38],[326,53,293,39,"transformProps"],[326,67,293,53],[326,70,293,56,"transformProps"],[326,84,293,70],[326,85,293,71],[326,89,293,75],[326,90,293,76,"props"],[326,95,293,81],[326,96,293,82],[326,99,293,85],[326,103,293,89],[326,104,293,90,"props"],[326,109,293,95],[326,111,293,97],[326,112,293,98],[326,115,293,101,"allowedProps"],[326,127,293,113],[326,129,293,115],[326,132,293,118,"customNativeProps"],[326,149,293,135],[326,150,293,136],[326,152,293,138,"config"],[326,158,293,144],[326,159,293,145],[327,10,294,8],[327,14,294,12],[327,15,294,13],[327,19,294,13,"deepEqual"],[327,26,294,22],[327,27,294,22,"deepEqual"],[327,36,294,22],[327,38,294,23],[327,42,294,27],[327,43,294,28,"config"],[327,49,294,34],[327,51,294,36,"newConfig"],[327,60,294,45],[327,61,294,46],[327,63,294,48],[328,12,295,10],[328,16,295,14],[328,17,295,15,"updateGestureHandler"],[328,37,295,35],[328,38,295,36,"newConfig"],[328,47,295,45],[328,48,295,46],[329,10,296,8],[330,8,297,6],[331,6,298,4],[333,6,300,4],[334,6,301,4,"setNativeProps"],[334,20,301,18,"setNativeProps"],[334,21,301,19,"updates"],[334,28,301,26],[334,30,301,28],[335,8,302,6],[335,14,302,12,"mergedProps"],[335,25,302,23],[335,28,302,26],[336,10,303,8],[336,13,303,11],[336,17,303,15],[336,18,303,16,"props"],[336,23,303,21],[337,10,304,8],[337,13,304,11,"updates"],[338,8,305,6],[338,9,305,7],[339,8,306,6],[339,14,306,12,"newConfig"],[339,23,306,21],[339,26,306,24],[339,30,306,24,"filterConfig"],[339,36,306,36],[339,37,306,36,"filterConfig"],[339,49,306,36],[339,51,306,37,"transformProps"],[339,65,306,51],[339,68,306,54,"transformProps"],[339,82,306,68],[339,83,306,69,"mergedProps"],[339,94,306,80],[339,95,306,81],[339,98,306,84,"mergedProps"],[339,109,306,95],[339,111,306,97],[339,112,306,98],[339,115,306,101,"allowedProps"],[339,127,306,113],[339,129,306,115],[339,132,306,118,"customNativeProps"],[339,149,306,135],[339,150,306,136],[339,152,306,138,"config"],[339,158,306,144],[339,159,306,145],[340,8,307,6],[340,12,307,10],[340,13,307,11,"updateGestureHandler"],[340,33,307,31],[340,34,307,32,"newConfig"],[340,43,307,41],[340,44,307,42],[341,6,308,4],[342,6,309,4,"render"],[342,12,309,10,"render"],[342,13,309,10],[342,15,309,13],[343,8,310,6],[343,12,310,10,"__DEV__"],[343,19,310,17],[343,23,310,21],[343,24,310,22],[343,28,310,26],[343,29,310,27,"context"],[343,36,310,34],[343,40,310,38],[343,41,310,39],[343,45,310,39,"isTestEnv"],[343,52,310,48],[343,53,310,48,"isTestEnv"],[343,62,310,48],[343,64,310,49],[343,65,310,50],[343,69,310,54,"Platform"],[343,77,310,62],[343,78,310,62,"default"],[343,85,310,62],[343,86,310,63,"OS"],[343,88,310,65],[343,93,310,70],[343,98,310,75],[343,100,310,77],[344,10,311,8],[344,16,311,14],[344,20,311,18,"Error"],[344,25,311,23],[344,26,311,24,"name"],[344,30,311,28],[344,33,311,31],[344,247,311,245],[344,248,311,246],[345,8,312,6],[346,8,313,6],[346,12,313,10,"gestureEventHandler"],[346,31,313,29],[346,34,313,32],[346,38,313,36],[346,39,313,37,"onGestureHandlerEvent"],[346,60,313,58],[347,8,314,6],[349,8,316,6],[349,14,316,12],[350,10,317,8,"onGestureEvent"],[350,24,317,22],[351,10,318,8,"onGestureHandlerEvent"],[352,8,319,6],[352,9,319,7],[352,12,319,10],[352,16,319,14],[352,17,319,15,"props"],[352,22,319,20],[353,8,320,6],[353,12,320,10,"onGestureEvent"],[353,26,320,24],[353,30,320,28],[353,37,320,35,"onGestureEvent"],[353,51,320,49],[353,56,320,54],[353,66,320,64],[353,68,320,66],[354,10,321,8],[355,10,322,8],[356,10,323,8],[357,10,324,8],[357,14,324,12,"onGestureHandlerEvent"],[357,35,324,33],[357,37,324,35],[358,12,325,10],[358,18,325,16],[358,22,325,20,"Error"],[358,27,325,25],[358,28,325,26],[358,101,325,99],[358,102,325,100],[359,10,326,8],[360,10,327,8,"gestureEventHandler"],[360,29,327,27],[360,32,327,30,"onGestureEvent"],[360,46,327,44],[361,8,328,6],[361,9,328,7],[361,15,328,13],[362,10,329,8],[362,14,329,12,"onGestureHandlerEvent"],[362,35,329,33],[362,39,329,37],[362,46,329,44,"onGestureHandlerEvent"],[362,67,329,65],[362,72,329,70],[362,82,329,80],[362,84,329,82],[363,12,330,10],[363,18,330,16],[363,22,330,20,"Error"],[363,27,330,25],[363,28,330,26],[363,101,330,99],[363,102,330,100],[364,10,331,8],[365,8,332,6],[366,8,333,6],[366,12,333,10,"gestureStateEventHandler"],[366,36,333,34],[366,39,333,37],[366,43,333,41],[366,44,333,42,"onGestureHandlerStateChange"],[366,71,333,69],[367,8,334,6],[369,8,336,6],[369,14,336,12],[370,10,337,8,"onHandlerStateChange"],[370,30,337,28],[371,10,338,8,"onGestureHandlerStateChange"],[372,8,339,6],[372,9,339,7],[372,12,339,10],[372,16,339,14],[372,17,339,15,"props"],[372,22,339,20],[373,8,340,6],[373,12,340,10,"onHandlerStateChange"],[373,32,340,30],[373,36,340,34],[373,43,340,41,"onHandlerStateChange"],[373,63,340,61],[373,68,340,66],[373,78,340,76],[373,80,340,78],[374,10,341,8],[375,10,342,8],[376,10,343,8],[377,10,344,8],[377,14,344,12,"onGestureHandlerStateChange"],[377,41,344,39],[377,43,344,41],[378,12,345,10],[378,18,345,16],[378,22,345,20,"Error"],[378,27,345,25],[378,28,345,26],[378,101,345,99],[378,102,345,100],[379,10,346,8],[380,10,347,8,"gestureStateEventHandler"],[380,34,347,32],[380,37,347,35,"onHandlerStateChange"],[380,57,347,55],[381,8,348,6],[381,9,348,7],[381,15,348,13],[382,10,349,8],[382,14,349,12,"onGestureHandlerStateChange"],[382,41,349,39],[382,45,349,43],[382,52,349,50,"onGestureHandlerStateChange"],[382,79,349,77],[382,84,349,82],[382,94,349,92],[382,96,349,94],[383,12,350,10],[383,18,350,16],[383,22,350,20,"Error"],[383,27,350,25],[383,28,350,26],[383,101,350,99],[383,102,350,100],[384,10,351,8],[385,8,352,6],[386,8,353,6],[386,14,353,12,"events"],[386,20,353,18],[386,23,353,21],[387,10,354,8,"onGestureHandlerEvent"],[387,31,354,29],[387,33,354,31],[387,37,354,35],[387,38,354,36,"state"],[387,43,354,41],[387,44,354,42,"allowTouches"],[387,56,354,54],[387,59,354,57,"gestureEventHandler"],[387,78,354,76],[387,81,354,79,"undefined"],[387,90,354,88],[388,10,355,8,"onGestureHandlerStateChange"],[388,37,355,35],[388,39,355,37],[388,43,355,41],[388,44,355,42,"state"],[388,49,355,47],[388,50,355,48,"allowTouches"],[388,62,355,60],[388,65,355,63,"gestureStateEventHandler"],[388,89,355,87],[388,92,355,90,"undefined"],[389,8,356,6],[389,9,356,7],[390,8,357,6],[390,12,357,10],[390,13,357,11,"propsRef"],[390,21,357,19],[390,22,357,20,"current"],[390,29,357,27],[390,32,357,30,"events"],[390,38,357,36],[391,8,358,6],[391,12,358,10,"child"],[391,17,358,15],[391,20,358,18],[391,24,358,22],[392,8,359,6],[392,12,359,10],[393,10,360,8,"child"],[393,15,360,13],[393,18,360,16,"React"],[393,23,360,21],[393,24,360,22,"Children"],[393,32,360,30],[393,33,360,31,"only"],[393,37,360,35],[393,38,360,36],[393,42,360,40],[393,43,360,41,"props"],[393,48,360,46],[393,49,360,47,"children"],[393,57,360,55],[393,58,360,56],[394,8,361,6],[394,9,361,7],[394,10,361,8],[394,17,361,15,"e"],[394,18,361,16],[394,20,361,18],[395,10,362,8],[395,16,362,14],[395,20,362,18,"Error"],[395,25,362,23],[395,26,362,24],[395,30,362,24,"tagMessage"],[395,37,362,34],[395,38,362,34,"tagMessage"],[395,48,362,34],[395,50,362,35],[395,53,362,38,"name"],[395,57,362,42],[395,213,362,198],[395,214,362,199],[395,215,362,200],[396,8,363,6],[397,8,364,6],[397,12,364,10,"grandChildren"],[397,25,364,23],[397,28,364,26,"child"],[397,33,364,31],[397,34,364,32,"props"],[397,39,364,37],[397,40,364,38,"children"],[397,48,364,46],[398,8,365,6],[398,12,365,10,"__DEV__"],[398,19,365,17],[398,23,365,21,"child"],[398,28,365,26],[398,29,365,27,"type"],[398,33,365,31],[398,38,365,36,"child"],[398,43,365,41],[398,44,365,42,"type"],[398,48,365,46],[398,53,365,51],[398,77,365,75],[398,81,365,79,"child"],[398,86,365,84],[398,87,365,85,"type"],[398,91,365,89],[398,92,365,90,"name"],[398,96,365,94],[398,101,365,99],[398,107,365,105],[398,111,365,109,"child"],[398,116,365,114],[398,117,365,115,"type"],[398,121,365,119],[398,122,365,120,"displayName"],[398,133,365,131],[398,138,365,136],[398,144,365,142],[398,145,365,143],[398,147,365,145],[399,10,366,8,"grandChildren"],[399,23,366,21],[399,26,366,24,"React"],[399,31,366,29],[399,32,366,30,"Children"],[399,40,366,38],[399,41,366,39,"toArray"],[399,48,366,46],[399,49,366,47,"grandChildren"],[399,62,366,60],[399,63,366,61],[400,10,367,8,"grandChildren"],[400,23,367,21],[400,24,367,22,"push"],[400,28,367,26],[400,29,367,27],[400,42,367,40],[400,46,367,40,"_jsx"],[400,62,367,44],[400,63,367,44,"jsx"],[400,66,367,44],[400,68,367,45,"PressabilityDebugView"],[400,90,367,66],[400,91,367,66,"PressabilityDebugView"],[400,112,367,66],[400,114,367,68],[401,12,368,10,"color"],[401,17,368,15],[401,19,368,17],[401,38,368,36],[402,12,369,10,"hitSlop"],[402,19,369,17],[402,21,369,19,"child"],[402,26,369,24],[402,27,369,25,"props"],[402,32,369,30],[402,33,369,31,"hitSlop"],[403,10,370,8],[403,11,370,9],[403,13,370,11],[403,36,370,34],[403,37,370,35],[403,38,370,36],[404,8,371,6],[405,8,372,6],[405,15,372,13],[405,28,372,26,"React"],[405,33,372,31],[405,34,372,32,"cloneElement"],[405,46,372,44],[405,47,372,45,"child"],[405,52,372,50],[405,54,372,52],[406,10,373,8,"ref"],[406,13,373,11],[406,15,373,13],[406,19,373,17],[406,20,373,18,"refHandler"],[406,30,373,28],[407,10,374,8,"collapsable"],[407,21,374,19],[407,23,374,21],[407,28,374,26],[408,10,375,8],[408,14,375,12],[408,18,375,12,"isTestEnv"],[408,25,375,21],[408,26,375,21,"isTestEnv"],[408,35,375,21],[408,37,375,22],[408,38,375,23],[408,41,375,26],[409,12,376,10,"handlerType"],[409,23,376,21],[409,25,376,23,"name"],[409,29,376,27],[410,12,377,10,"handlerTag"],[410,22,377,20],[410,24,377,22],[410,28,377,26],[410,29,377,27,"handlerTag"],[410,39,377,37],[411,12,378,10,"enabled"],[411,19,378,17],[411,21,378,19],[411,25,378,23],[411,26,378,24,"props"],[411,31,378,29],[411,32,378,30,"enabled"],[412,10,379,8],[412,11,379,9],[412,14,379,12],[412,15,379,13],[412,16,379,14],[412,17,379,15],[413,10,380,8,"testID"],[413,16,380,14],[413,18,380,16],[413,22,380,20],[413,23,380,21,"props"],[413,28,380,26],[413,29,380,27,"testID"],[413,35,380,33],[413,39,380,37,"child"],[413,44,380,42],[413,45,380,43,"props"],[413,50,380,48],[413,51,380,49,"testID"],[413,57,380,55],[414,10,381,8],[414,13,381,11,"events"],[415,8,382,6],[415,9,382,7],[415,11,382,9,"grandChildren"],[415,24,382,22],[415,25,382,23],[416,6,383,4],[417,4,384,2],[418,4,385,2],[418,11,385,9,"Handler"],[418,18,385,16],[419,2,386,0],[420,0,386,1],[420,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkE;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIM;GJE;AKE;kBCE;qBCI,4BD;GDC;CLE;eQe;ECO;ICI;KDc;IEC;gGPI;wBQC;YRE;SOE;yBES;SFE;KFO;IKC;KLM;IMC;KNe;4BOC;KPQ;kCQG;KRc;iBSC;KTc;2BUC;KVI;2BWC;4BnBY;SmBgB;uBPI;OOE;KXC;2BYC;KZI;IaC;yBTU;SSE;KbO;IcG;KdO;IeC;Kf0E;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}