{"dependencies":[{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"LogBoxLog\", {\n    enumerable: true,\n    get: function () {\n      return LogBoxLog;\n    }\n  });\n  var _LogBoxSymbolication = require(_dependencyMap[0], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  class LogBoxLog {\n    symbolicated = {\n      stack: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      },\n      component: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      }\n    };\n    callbacks = new Map();\n    constructor(data) {\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    incrementCount() {\n      this.count += 1;\n    }\n    getAvailableStack(type) {\n      if (this.symbolicated[type].status === 'COMPLETE') {\n        return this.symbolicated[type].stack;\n      }\n      return this.getStack(type);\n    }\n    flushCallbacks(type) {\n      const callbacks = this.callbacks.get(type);\n      const status = this.symbolicated[type].status;\n      if (callbacks) {\n        for (const callback of callbacks) {\n          callback(status);\n        }\n        callbacks.clear();\n      }\n    }\n    pushCallback(type, callback) {\n      let callbacks = this.callbacks.get(type);\n      if (!callbacks) {\n        callbacks = new Set();\n        this.callbacks.set(type, callbacks);\n      }\n      callbacks.add(callback);\n    }\n    retrySymbolicate(type, callback) {\n      this._symbolicate(type, true, callback);\n    }\n    symbolicate(type, callback) {\n      this._symbolicate(type, false, callback);\n    }\n    _symbolicate(type, retry, callback) {\n      if (callback) {\n        this.pushCallback(type, callback);\n      }\n      const status = this.symbolicated[type].status;\n      if (status === 'COMPLETE') {\n        return this.flushCallbacks(type);\n      }\n      if (retry) {\n        LogBoxSymbolication.deleteStack(this.getStack(type));\n        this.handleSymbolicate(type);\n      } else {\n        if (status === 'NONE') {\n          this.handleSymbolicate(type);\n        }\n      }\n    }\n    componentStackCache = null;\n    getStack(type) {\n      if (type === 'component') {\n        if (this.componentStackCache == null) {\n          this.componentStackCache = componentStackToStack(this.componentStack);\n        }\n        return this.componentStackCache;\n      }\n      return this.stack;\n    }\n    handleSymbolicate(type) {\n      if (type === 'component' && !this.componentStack?.length) {\n        return;\n      }\n      if (this.symbolicated[type].status !== 'PENDING') {\n        this.updateStatus(type, null, null, null);\n        LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n          this.updateStatus(type, null, data?.stack, data?.codeFrame);\n        }, error => {\n          this.updateStatus(type, error, null, null);\n        });\n      }\n    }\n    updateStatus(type, error, stack, codeFrame) {\n      const lastStatus = this.symbolicated[type].status;\n      if (error != null) {\n        this.symbolicated[type] = {\n          error,\n          stack: null,\n          status: 'FAILED'\n        };\n      } else if (stack != null) {\n        if (codeFrame) {\n          this.codeFrame = codeFrame;\n        }\n        this.symbolicated[type] = {\n          error: null,\n          stack,\n          status: 'COMPLETE'\n        };\n      } else {\n        this.symbolicated[type] = {\n          error: null,\n          stack: null,\n          status: 'PENDING'\n        };\n      }\n      const status = this.symbolicated[type].status;\n      if (lastStatus !== status) {\n        if (['COMPLETE', 'FAILED'].includes(status)) {\n          this.flushCallbacks(type);\n        }\n      }\n    }\n  }\n\n  // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  function ensureStackFilesHaveParams(stack) {\n    const currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    const currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      const url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":199,"map":[[16,2,48,0,"Object"],[16,8,48,0],[16,9,48,0,"defineProperty"],[16,23,48,0],[16,24,48,0,"exports"],[16,31,48,0],[17,4,48,0,"enumerable"],[17,14,48,0],[18,4,48,0,"get"],[18,7,48,0],[18,18,48,0,"get"],[18,19,48,0],[19,6,48,0],[19,13,48,0,"LogBoxLog"],[19,22,48,0],[20,4,48,0],[21,2,48,0],[22,2,9,0],[22,6,9,0,"_LogBoxSymbolication"],[22,26,9,0],[22,29,9,0,"require"],[22,36,9,0],[22,37,9,0,"_dependencyMap"],[22,51,9,0],[23,2,9,0],[23,6,9,0,"LogBoxSymbolication"],[23,25,9,0],[23,28,9,0,"_interopNamespace"],[23,45,9,0],[23,46,9,0,"_LogBoxSymbolication"],[23,66,9,0],[24,2,1,0],[25,0,2,0],[26,0,3,0],[27,0,4,0],[28,0,5,0],[29,0,6,0],[30,0,7,0],[32,2,30,0],[32,11,30,9,"componentStackToStack"],[32,32,30,30,"componentStackToStack"],[32,33,30,31,"componentStack"],[32,47,30,61],[32,49,30,70],[33,4,31,2],[33,11,31,9,"componentStack"],[33,25,31,23],[33,26,31,24,"map"],[33,29,31,27],[33,30,31,29,"stack"],[33,35,31,34],[33,40,31,40],[34,6,32,4,"file"],[34,10,32,8],[34,12,32,10,"stack"],[34,17,32,15],[34,18,32,16,"fileName"],[34,26,32,24],[35,6,33,4,"methodName"],[35,16,33,14],[35,18,33,16,"stack"],[35,23,33,21],[35,24,33,22,"content"],[35,31,33,29],[36,6,34,4,"lineNumber"],[36,16,34,14],[36,18,34,16,"stack"],[36,23,34,21],[36,24,34,22,"location"],[36,32,34,30],[36,34,34,32,"row"],[36,37,34,35],[36,41,34,39],[36,42,34,40],[37,6,35,4,"column"],[37,12,35,10],[37,14,35,12,"stack"],[37,19,35,17],[37,20,35,18,"location"],[37,28,35,26],[37,30,35,28,"column"],[37,36,35,34],[37,40,35,38],[37,41,35,39],[38,6,36,4,"arguments"],[38,15,36,13],[38,17,36,15],[39,4,37,2],[39,5,37,3],[39,6,37,4],[39,7,37,5],[40,2,38,0],[41,2,48,7],[41,8,48,13,"LogBoxLog"],[41,17,48,22],[41,18,48,23],[42,4,58,2,"symbolicated"],[42,16,58,14],[42,19,58,57],[43,6,59,4,"stack"],[43,11,59,9],[43,13,59,11],[44,8,60,6,"error"],[44,13,60,11],[44,15,60,13],[44,19,60,17],[45,8,61,6,"stack"],[45,13,61,11],[45,15,61,13],[45,19,61,17],[46,8,62,6,"status"],[46,14,62,12],[46,16,62,14],[47,6,63,4],[47,7,63,5],[48,6,64,4,"component"],[48,15,64,13],[48,17,64,15],[49,8,65,6,"error"],[49,13,65,11],[49,15,65,13],[49,19,65,17],[50,8,66,6,"stack"],[50,13,66,11],[50,15,66,13],[50,19,66,17],[51,8,67,6,"status"],[51,14,67,12],[51,16,67,14],[52,6,68,4],[53,4,69,2],[53,5,69,3],[54,4,71,10,"callbacks"],[54,13,71,19],[54,16,71,66],[54,20,71,70,"Map"],[54,23,71,73],[54,24,71,74],[54,25,71,75],[55,4,73,2,"constructor"],[55,15,73,13,"constructor"],[55,16,74,4,"data"],[55,20,76,5],[55,22,77,4],[56,6,78,4],[56,10,78,8],[56,11,78,9,"level"],[56,16,78,14],[56,19,78,17,"data"],[56,23,78,21],[56,24,78,22,"level"],[56,29,78,27],[57,6,79,4],[57,10,79,8],[57,11,79,9,"type"],[57,15,79,13],[57,18,79,16,"data"],[57,22,79,20],[57,23,79,21,"type"],[57,27,79,25],[57,31,79,29],[57,38,79,36],[58,6,80,4],[58,10,80,8],[58,11,80,9,"message"],[58,18,80,16],[58,21,80,19,"data"],[58,25,80,23],[58,26,80,24,"message"],[58,33,80,31],[59,6,81,4],[59,10,81,8],[59,11,81,9,"stack"],[59,16,81,14],[59,19,81,17,"data"],[59,23,81,21],[59,24,81,22,"stack"],[59,29,81,27],[60,6,82,4],[60,10,82,8],[60,11,82,9,"category"],[60,19,82,17],[60,22,82,20,"data"],[60,26,82,24],[60,27,82,25,"category"],[60,35,82,33],[61,6,83,4],[61,10,83,8],[61,11,83,9,"componentStack"],[61,25,83,23],[61,28,83,26,"data"],[61,32,83,30],[61,33,83,31,"componentStack"],[61,47,83,45],[62,6,84,4],[62,10,84,8],[62,11,84,9,"codeFrame"],[62,20,84,18],[62,23,84,21,"data"],[62,27,84,25],[62,28,84,26,"codeFrame"],[62,37,84,35],[63,6,85,4],[63,10,85,8],[63,11,85,9,"isComponentError"],[63,27,85,25],[63,30,85,28,"data"],[63,34,85,32],[63,35,85,33,"isComponentError"],[63,51,85,49],[64,6,86,4],[64,10,86,8],[64,11,86,9,"count"],[64,16,86,14],[64,19,86,17],[64,20,86,18],[65,6,87,4],[65,10,87,8],[65,11,87,9,"symbolicated"],[65,23,87,21],[65,26,87,24,"data"],[65,30,87,28],[65,31,87,29,"symbolicated"],[65,43,87,41],[65,47,87,45],[65,51,87,49],[65,52,87,50,"symbolicated"],[65,64,87,62],[66,4,88,2],[67,4,90,2,"incrementCount"],[67,18,90,16,"incrementCount"],[67,19,90,16],[67,21,90,25],[68,6,91,4],[68,10,91,8],[68,11,91,9,"count"],[68,16,91,14],[68,20,91,18],[68,21,91,19],[69,4,92,2],[70,4,94,2,"getAvailableStack"],[70,21,94,19,"getAvailableStack"],[70,22,94,20,"type"],[70,26,94,35],[70,28,94,51],[71,6,95,4],[71,10,95,8],[71,14,95,12],[71,15,95,13,"symbolicated"],[71,27,95,25],[71,28,95,26,"type"],[71,32,95,30],[71,33,95,31],[71,34,95,32,"status"],[71,40,95,38],[71,45,95,43],[71,55,95,53],[71,57,95,55],[72,8,96,6],[72,15,96,13],[72,19,96,17],[72,20,96,18,"symbolicated"],[72,32,96,30],[72,33,96,31,"type"],[72,37,96,35],[72,38,96,36],[72,39,96,37,"stack"],[72,44,96,42],[73,6,97,4],[74,6,98,4],[74,13,98,11],[74,17,98,15],[74,18,98,16,"getStack"],[74,26,98,24],[74,27,98,25,"type"],[74,31,98,29],[74,32,98,30],[75,4,99,2],[76,4,101,10,"flushCallbacks"],[76,18,101,24,"flushCallbacks"],[76,19,101,25,"type"],[76,23,101,40],[76,25,101,48],[77,6,102,4],[77,12,102,10,"callbacks"],[77,21,102,19],[77,24,102,22],[77,28,102,26],[77,29,102,27,"callbacks"],[77,38,102,36],[77,39,102,37,"get"],[77,42,102,40],[77,43,102,41,"type"],[77,47,102,45],[77,48,102,46],[78,6,103,4],[78,12,103,10,"status"],[78,18,103,16],[78,21,103,19],[78,25,103,23],[78,26,103,24,"symbolicated"],[78,38,103,36],[78,39,103,37,"type"],[78,43,103,41],[78,44,103,42],[78,45,103,43,"status"],[78,51,103,49],[79,6,104,4],[79,10,104,8,"callbacks"],[79,19,104,17],[79,21,104,19],[80,8,105,6],[80,13,105,11],[80,19,105,17,"callback"],[80,27,105,25],[80,31,105,29,"callbacks"],[80,40,105,38],[80,42,105,40],[81,10,106,8,"callback"],[81,18,106,16],[81,19,106,17,"status"],[81,25,106,23],[81,26,106,24],[82,8,107,6],[83,8,108,6,"callbacks"],[83,17,108,15],[83,18,108,16,"clear"],[83,23,108,21],[83,24,108,22],[83,25,108,23],[84,6,109,4],[85,4,110,2],[86,4,112,10,"pushCallback"],[86,16,112,22,"pushCallback"],[86,17,112,23,"type"],[86,21,112,38],[86,23,112,40,"callback"],[86,31,112,71],[86,33,112,79],[87,6,113,4],[87,10,113,8,"callbacks"],[87,19,113,17],[87,22,113,20],[87,26,113,24],[87,27,113,25,"callbacks"],[87,36,113,34],[87,37,113,35,"get"],[87,40,113,38],[87,41,113,39,"type"],[87,45,113,43],[87,46,113,44],[88,6,114,4],[88,10,114,8],[88,11,114,9,"callbacks"],[88,20,114,18],[88,22,114,20],[89,8,115,6,"callbacks"],[89,17,115,15],[89,20,115,18],[89,24,115,22,"Set"],[89,27,115,25],[89,28,115,26],[89,29,115,27],[90,8,116,6],[90,12,116,10],[90,13,116,11,"callbacks"],[90,22,116,20],[90,23,116,21,"set"],[90,26,116,24],[90,27,116,25,"type"],[90,31,116,29],[90,33,116,31,"callbacks"],[90,42,116,40],[90,43,116,41],[91,6,117,4],[92,6,118,4,"callbacks"],[92,15,118,13],[92,16,118,14,"add"],[92,19,118,17],[92,20,118,18,"callback"],[92,28,118,26],[92,29,118,27],[93,4,119,2],[94,4,121,2,"retrySymbolicate"],[94,20,121,18,"retrySymbolicate"],[94,21,121,19,"type"],[94,25,121,34],[94,27,121,36,"callback"],[94,35,121,84],[94,37,121,92],[95,6,122,4],[95,10,122,8],[95,11,122,9,"_symbolicate"],[95,23,122,21],[95,24,122,22,"type"],[95,28,122,26],[95,30,122,28],[95,34,122,32],[95,36,122,34,"callback"],[95,44,122,42],[95,45,122,43],[96,4,123,2],[97,4,125,2,"symbolicate"],[97,15,125,13,"symbolicate"],[97,16,125,14,"type"],[97,20,125,29],[97,22,125,31,"callback"],[97,30,125,79],[97,32,125,87],[98,6,126,4],[98,10,126,8],[98,11,126,9,"_symbolicate"],[98,23,126,21],[98,24,126,22,"type"],[98,28,126,26],[98,30,126,28],[98,35,126,33],[98,37,126,35,"callback"],[98,45,126,43],[98,46,126,44],[99,4,127,2],[100,4,129,10,"_symbolicate"],[100,16,129,22,"_symbolicate"],[100,17,130,4,"type"],[100,21,130,19],[100,23,131,4,"retry"],[100,28,131,18],[100,30,132,4,"callback"],[100,38,132,52],[100,40,133,10],[101,6,134,4],[101,10,134,8,"callback"],[101,18,134,16],[101,20,134,18],[102,8,135,6],[102,12,135,10],[102,13,135,11,"pushCallback"],[102,25,135,23],[102,26,135,24,"type"],[102,30,135,28],[102,32,135,30,"callback"],[102,40,135,38],[102,41,135,39],[103,6,136,4],[104,6,137,4],[104,12,137,10,"status"],[104,18,137,16],[104,21,137,19],[104,25,137,23],[104,26,137,24,"symbolicated"],[104,38,137,36],[104,39,137,37,"type"],[104,43,137,41],[104,44,137,42],[104,45,137,43,"status"],[104,51,137,49],[105,6,139,4],[105,10,139,8,"status"],[105,16,139,14],[105,21,139,19],[105,31,139,29],[105,33,139,31],[106,8,140,6],[106,15,140,13],[106,19,140,17],[106,20,140,18,"flushCallbacks"],[106,34,140,32],[106,35,140,33,"type"],[106,39,140,37],[106,40,140,38],[107,6,141,4],[108,6,143,4],[108,10,143,8,"retry"],[108,15,143,13],[108,17,143,15],[109,8,144,6,"LogBoxSymbolication"],[109,27,144,25],[109,28,144,26,"deleteStack"],[109,39,144,37],[109,40,144,38],[109,44,144,42],[109,45,144,43,"getStack"],[109,53,144,51],[109,54,144,52,"type"],[109,58,144,56],[109,59,144,57],[109,60,144,58],[110,8,145,6],[110,12,145,10],[110,13,145,11,"handleSymbolicate"],[110,30,145,28],[110,31,145,29,"type"],[110,35,145,33],[110,36,145,34],[111,6,146,4],[111,7,146,5],[111,13,146,11],[112,8,147,6],[112,12,147,10,"status"],[112,18,147,16],[112,23,147,21],[112,29,147,27],[112,31,147,29],[113,10,148,8],[113,14,148,12],[113,15,148,13,"handleSymbolicate"],[113,32,148,30],[113,33,148,31,"type"],[113,37,148,35],[113,38,148,36],[114,8,149,6],[115,6,150,4],[116,4,151,2],[117,4,153,10,"componentStackCache"],[117,23,153,29],[117,26,153,46],[117,30,153,50],[118,4,155,10,"getStack"],[118,12,155,18,"getStack"],[118,13,155,19,"type"],[118,17,155,34],[118,19,155,43],[119,6,156,4],[119,10,156,8,"type"],[119,14,156,12],[119,19,156,17],[119,30,156,28],[119,32,156,30],[120,8,157,6],[120,12,157,10],[120,16,157,14],[120,17,157,15,"componentStackCache"],[120,36,157,34],[120,40,157,38],[120,44,157,42],[120,46,157,44],[121,10,158,8],[121,14,158,12],[121,15,158,13,"componentStackCache"],[121,34,158,32],[121,37,158,35,"componentStackToStack"],[121,58,158,56],[121,59,158,57],[121,63,158,61],[121,64,158,62,"componentStack"],[121,78,158,76],[121,79,158,77],[122,8,159,6],[123,8,160,6],[123,15,160,13],[123,19,160,17],[123,20,160,18,"componentStackCache"],[123,39,160,37],[124,6,161,4],[125,6,162,4],[125,13,162,11],[125,17,162,15],[125,18,162,16,"stack"],[125,23,162,21],[126,4,163,2],[127,4,165,10,"handleSymbolicate"],[127,21,165,27,"handleSymbolicate"],[127,22,165,28,"type"],[127,26,165,43],[127,28,165,51],[128,6,166,4],[128,10,166,8,"type"],[128,14,166,12],[128,19,166,17],[128,30,166,28],[128,34,166,32],[128,35,166,33],[128,39,166,37],[128,40,166,38,"componentStack"],[128,54,166,52],[128,56,166,54,"length"],[128,62,166,60],[128,64,166,62],[129,8,167,6],[130,6,168,4],[131,6,170,4],[131,10,170,8],[131,14,170,12],[131,15,170,13,"symbolicated"],[131,27,170,25],[131,28,170,26,"type"],[131,32,170,30],[131,33,170,31],[131,34,170,32,"status"],[131,40,170,38],[131,45,170,43],[131,54,170,52],[131,56,170,54],[132,8,171,6],[132,12,171,10],[132,13,171,11,"updateStatus"],[132,25,171,23],[132,26,171,24,"type"],[132,30,171,28],[132,32,171,30],[132,36,171,34],[132,38,171,36],[132,42,171,40],[132,44,171,42],[132,48,171,46],[132,49,171,47],[133,8,172,6,"LogBoxSymbolication"],[133,27,172,25],[133,28,172,26,"symbolicate"],[133,39,172,37],[133,40,172,38,"ensureStackFilesHaveParams"],[133,66,172,64],[133,67,172,65],[133,71,172,69],[133,72,172,70,"getStack"],[133,80,172,78],[133,81,172,79,"type"],[133,85,172,83],[133,86,172,84],[133,87,172,85],[133,88,172,86],[133,89,172,87,"then"],[133,93,172,91],[133,94,173,9,"data"],[133,98,173,13],[133,102,173,18],[134,10,174,10],[134,14,174,14],[134,15,174,15,"updateStatus"],[134,27,174,27],[134,28,174,28,"type"],[134,32,174,32],[134,34,174,34],[134,38,174,38],[134,40,174,40,"data"],[134,44,174,44],[134,46,174,46,"stack"],[134,51,174,51],[134,53,174,53,"data"],[134,57,174,57],[134,59,174,59,"codeFrame"],[134,68,174,68],[134,69,174,69],[135,8,175,8],[135,9,175,9],[135,11,176,9,"error"],[135,16,176,14],[135,20,176,19],[136,10,177,10],[136,14,177,14],[136,15,177,15,"updateStatus"],[136,27,177,27],[136,28,177,28,"type"],[136,32,177,32],[136,34,177,34,"error"],[136,39,177,39],[136,41,177,41],[136,45,177,45],[136,47,177,47],[136,51,177,51],[136,52,177,52],[137,8,178,8],[137,9,179,6],[137,10,179,7],[138,6,180,4],[139,4,181,2],[140,4,183,10,"updateStatus"],[140,16,183,22,"updateStatus"],[140,17,184,4,"type"],[140,21,184,19],[140,23,185,4,"error"],[140,28,185,24],[140,30,186,4,"stack"],[140,35,186,24],[140,37,187,4,"codeFrame"],[140,46,187,32],[140,48,188,10],[141,6,189,4],[141,12,189,10,"lastStatus"],[141,22,189,20],[141,25,189,23],[141,29,189,27],[141,30,189,28,"symbolicated"],[141,42,189,40],[141,43,189,41,"type"],[141,47,189,45],[141,48,189,46],[141,49,189,47,"status"],[141,55,189,53],[142,6,190,4],[142,10,190,8,"error"],[142,15,190,13],[142,19,190,17],[142,23,190,21],[142,25,190,23],[143,8,191,6],[143,12,191,10],[143,13,191,11,"symbolicated"],[143,25,191,23],[143,26,191,24,"type"],[143,30,191,28],[143,31,191,29],[143,34,191,32],[144,10,192,8,"error"],[144,15,192,13],[145,10,193,8,"stack"],[145,15,193,13],[145,17,193,15],[145,21,193,19],[146,10,194,8,"status"],[146,16,194,14],[146,18,194,16],[147,8,195,6],[147,9,195,7],[148,6,196,4],[148,7,196,5],[148,13,196,11],[148,17,196,15,"stack"],[148,22,196,20],[148,26,196,24],[148,30,196,28],[148,32,196,30],[149,8,197,6],[149,12,197,10,"codeFrame"],[149,21,197,19],[149,23,197,21],[150,10,198,8],[150,14,198,12],[150,15,198,13,"codeFrame"],[150,24,198,22],[150,27,198,25,"codeFrame"],[150,36,198,34],[151,8,199,6],[152,8,201,6],[152,12,201,10],[152,13,201,11,"symbolicated"],[152,25,201,23],[152,26,201,24,"type"],[152,30,201,28],[152,31,201,29],[152,34,201,32],[153,10,202,8,"error"],[153,15,202,13],[153,17,202,15],[153,21,202,19],[154,10,203,8,"stack"],[154,15,203,13],[155,10,204,8,"status"],[155,16,204,14],[155,18,204,16],[156,8,205,6],[156,9,205,7],[157,6,206,4],[157,7,206,5],[157,13,206,11],[158,8,207,6],[158,12,207,10],[158,13,207,11,"symbolicated"],[158,25,207,23],[158,26,207,24,"type"],[158,30,207,28],[158,31,207,29],[158,34,207,32],[159,10,208,8,"error"],[159,15,208,13],[159,17,208,15],[159,21,208,19],[160,10,209,8,"stack"],[160,15,209,13],[160,17,209,15],[160,21,209,19],[161,10,210,8,"status"],[161,16,210,14],[161,18,210,16],[162,8,211,6],[162,9,211,7],[163,6,212,4],[164,6,214,4],[164,12,214,10,"status"],[164,18,214,16],[164,21,214,19],[164,25,214,23],[164,26,214,24,"symbolicated"],[164,38,214,36],[164,39,214,37,"type"],[164,43,214,41],[164,44,214,42],[164,45,214,43,"status"],[164,51,214,49],[165,6,215,4],[165,10,215,8,"lastStatus"],[165,20,215,18],[165,25,215,23,"status"],[165,31,215,29],[165,33,215,31],[166,8,216,6],[166,12,216,10],[166,13,216,11],[166,23,216,21],[166,25,216,23],[166,33,216,31],[166,34,216,32],[166,35,216,33,"includes"],[166,43,216,41],[166,44,216,42,"status"],[166,50,216,48],[166,51,216,49],[166,53,216,51],[167,10,217,8],[167,14,217,12],[167,15,217,13,"flushCallbacks"],[167,29,217,27],[167,30,217,28,"type"],[167,34,217,32],[167,35,217,33],[168,8,218,6],[169,6,219,4],[170,4,220,2],[171,2,221,0],[173,2,223,0],[174,2,224,0],[175,2,225,0],[175,11,225,9,"ensureStackFilesHaveParams"],[175,37,225,35,"ensureStackFilesHaveParams"],[175,38,225,36,"stack"],[175,43,225,48],[175,45,225,57],[176,4,226,2],[176,10,226,8,"currentSrc"],[176,20,226,18],[176,23,227,4],[176,30,227,11,"document"],[176,38,227,19],[176,43,227,24],[176,54,227,35],[176,58,227,39,"document"],[176,66,227,47],[176,67,227,48,"currentScript"],[176,80,227,61],[176,83,228,9],[176,88,228,14],[176,92,228,18,"document"],[176,100,228,26],[176,101,228,27,"currentScript"],[176,114,228,40],[176,118,228,44,"document"],[176,126,228,52],[176,127,228,53,"currentScript"],[176,140,228,66],[176,141,228,67,"src"],[176,144,228,70],[176,148,228,75],[176,152,228,79],[176,155,229,8],[176,159,229,12],[177,4,231,2],[177,10,231,8,"currentParams"],[177,23,231,21],[177,26,231,24,"currentSrc"],[177,36,231,34],[177,39,232,6],[177,43,232,10,"URLSearchParams"],[177,58,232,25],[177,59,232,26,"currentSrc"],[177,69,232,36],[177,70,232,37],[177,73,233,6],[177,77,233,10,"URLSearchParams"],[177,92,233,25],[177,93,233,26],[178,6,234,8,"platform"],[178,14,234,16],[178,16,234,18],[178,21,234,23],[179,6,235,8,"dev"],[179,9,235,11],[179,11,235,13,"String"],[179,17,235,19],[179,18,235,20,"__DEV__"],[179,25,235,27],[180,4,236,6],[180,5,236,7],[180,6,236,8],[181,4,238,2],[181,11,238,9,"stack"],[181,16,238,14],[181,17,238,15,"map"],[181,20,238,18],[181,21,238,20,"frame"],[181,26,238,25],[181,30,238,30],[182,6,239,4],[182,10,240,6],[182,11,240,7,"frame"],[182,16,240,12],[182,17,240,13,"file"],[182,21,240,17],[182,23,240,19,"startsWith"],[182,33,240,29],[182,34,240,30],[182,40,240,36],[182,41,240,37],[183,6,241,6],[184,6,242,6,"frame"],[184,11,242,11],[184,12,242,12,"file"],[184,16,242,16],[184,17,242,17,"includes"],[184,25,242,25],[184,26,242,26],[184,38,242,38],[184,39,242,39],[184,41,244,6],[184,48,244,13,"frame"],[184,53,244,18],[185,6,246,4],[185,12,246,10,"url"],[185,15,246,13],[185,18,246,16],[185,22,246,20,"URL"],[185,25,246,23],[185,26,246,24,"frame"],[185,31,246,29],[185,32,246,30,"file"],[185,36,246,34],[185,37,246,35],[186,6,247,4],[186,10,247,8,"url"],[186,13,247,11],[186,14,247,12,"searchParams"],[186,26,247,24],[186,27,247,25,"has"],[186,30,247,28],[186,31,247,29],[186,41,247,39],[186,42,247,40],[186,44,247,42],[187,8,248,6],[187,15,248,13,"frame"],[187,20,248,18],[188,6,249,4],[189,6,251,4,"currentParams"],[189,19,251,17],[189,20,251,18,"forEach"],[189,27,251,25],[189,28,251,26],[189,29,251,27,"value"],[189,34,251,32],[189,36,251,34,"key"],[189,39,251,37],[189,44,251,42],[190,8,252,6],[190,12,252,10,"url"],[190,15,252,13],[190,16,252,14,"searchParams"],[190,28,252,26],[190,29,252,27,"has"],[190,32,252,30],[190,33,252,31,"key"],[190,36,252,34],[190,37,252,35],[190,39,252,37],[191,8,253,6,"url"],[191,11,253,9],[191,12,253,10,"searchParams"],[191,24,253,22],[191,25,253,23,"set"],[191,28,253,26],[191,29,253,27,"key"],[191,32,253,30],[191,34,253,32,"value"],[191,39,253,37],[191,40,253,38],[192,6,254,4],[192,7,254,5],[192,8,254,6],[193,6,256,4],[193,13,256,11],[194,8,256,13],[194,11,256,16,"frame"],[194,16,256,21],[195,8,256,23,"file"],[195,12,256,27],[195,14,256,29,"url"],[195,17,256,32],[195,18,256,33,"toString"],[195,26,256,41],[195,27,256,42],[196,6,256,44],[196,7,256,45],[197,4,257,2],[197,5,257,3],[197,6,257,4],[198,2,258,0],[199,0,258,1],[199,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"},"hasCjsExports":false},"type":"js/module"}]}